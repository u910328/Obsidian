{"version":3,"sources":["appversion-directive.js","error.js","auth.js","firebase.utils.js","ngcloak-decorator.js","filters.js","security.js","ngCart.js","notify.js","ngFirebase.js","ui-mask.js","socialLinks.js","scrollpoint.js","model.js","snippet.js","$firebase.js","linkFn.js","elasticSearch.js","init.js","service.js","filter.js","directive.js","login.js","account.js","productList.js","productDetail.js","home.js","shoppingCart.js","pageSeed.js","myOrders.js","backEnd.js","orders.js","productManager.js","test.js","test2.js","invoice.js","app.js"],"names":["angular","obsidian","module","directive","version","scope","elm","text","mod","state","url","ctrlName","templateUrl","controller","$scope","$stateParams","error","config","$stateProvider","resolve","user","Auth","$waitForAuth","factory","$state","openErrorPage","opt","go","$$phase","$apply","_opt","type","console","log","JSON","stringify","$firebaseAuth","fbutil","$q","FBURL","snippet","$firebase","ref","checkIfAccountExistOnFb","authData","def","defer","reject","uid","once","snap","val","err","promise","createAccount","undefined","handler","cb","set","basicAccountUserData","structure","rawData","flatten","flattenConfig","values","createBatchUpdateValues","batchUpdate","isConsecutive","then","errorHandler","provider","name","displayName","email","profileImageURL","firstPartOfEmail","password","basicUserInfo","createdTime","Firebase","ServerValue","TIMESTAMP","id","loginWithProvider","options","$authWithPassword","$authWithCustomToken","customToken","rememberMe","$authAnonymously","popup","$authWithOAuthRedirect","$authWithOAuthPopup","removeUserData","extraCallBack","remove","code","$window","pathRef","args","i","length","isArray","Error","join","firebaseRef","path","Array","prototype","slice","call","arguments","child","utils","fn","context","result","$provide","decorator","$delegate","_compile","compile","element","attr","filter","items","reverse","$filter","input","isReverse","_items","copy","forEach","value","key","trim","keyArray","split","keyObj","filterObj","data","filteredData","applyFilter","obj","fData","this","fObj","isDefined","concat","unique","uniqueList","push","decimals","suffix","isNumber","isNaN","Math","round","pow","securedStates","stateAuthenticated","stateObject","$requireAuth","run","$rootScope","$location","loginRedirectState","checkState","authStateRequired","current","indexOf","$onAuth","$on","event","toState","toParams","fromState","fromParams","preventDefault","transitionTo","$get","ngCart","ngCartItem","store","$save","isObject","get","$restore","init","service","$cart","shipping","taxRate","tax","addItem","price","quantity","inCart","getItemById","setQuantity","newItem","$broadcast","itemId","getCart","build","item","getId","setShipping","getShipping","setTaxRate","parseFloat","toFixed","getTaxRate","getTax","getSubTotal","setCart","cart","getItems","getTotalItems","count","getQuantity","getTotalUniqueItems","total","getTotal","totalCost","removeItem","index","splice","removeItemById","empty","localStorage","isEmpty","toObject","subTotal","storedCart","_self","_id","_name","_price","_quantity","_data","$log","setId","setName","setPrice","setData","getName","priceFloat","getPrice","relative","quantityInt","parseInt","info","getData","fromJson","parse","toJson","restrict","quantityMax","transclude","attrs","link","q","qtyOpt","fulfilmentProvider","checkout","setService","setSettings","settings","success","status","headers","statusCode","$injector","_obj","deferred","$http","post","$timeout","$compile","$templateCache","startTop","verticalSpacing","defaultDuration","defaultTemplateUrl","position","container","document","body","maximumOpen","messageElements","openNotificationsScope","notify","message","duration","classes","$new","$position","$message","$classes","$messageTemplate","messageTemplate","numToClose","$close","cache","template","templateElement","bind","e","propertyName","currentTarget","style","opacity","originalEvent","layoutMessages","messageTemplateElement","children","hasClass","append","$centerMargin","offsetWidth","css","j","currentY","shadowHeight","height","offsetHeight","top","retVal","close","Object","defineProperty","isUndefined","closeAll","put","ngFirebase","loading","ctrl","transcludeFn","appendTransclude","dataOrError","clone","trclScope","pure","pureValue","subValue","valueAs","$value","$firebaseObject","$eval","loaded","errorAs","$destroy","$object","$loaded","$watch","isRefUrlValid","maskDefinitions",9,"A","*","clearOnBlur","eventsToHandle","n","t","activeElement","hasFocus","href","tabIndex","priority","require","r","u","a","o","y","F","d","h","f","l","R","m","v","s","z","p","$setValidity","c","$viewValue","required","$error","g","K","removeAttr","N","$modelValue","Z","H","maxlength","E","$formatters","$render","I","k","x","W","M","w","unbind","T","_","toString","P","replace","test","shift","charAt","substr","b","uiMaskPlaceholder","placeholder","$","pop","B","C","$setViewValue","V","D","S","which","shiftKey","O","substring","selectionStart","selection","focus","createRange","moveStart","setSelectionRange","createTextRange","collapse","moveEnd","select","selectionEnd","uiOptions","hasOwnProperty","extend","$observe","G","ngModel","assign","$parsers","TypeError","Number","floor","abs","max","sharedScopeDefinition","urlFactory","getCurrentUrl","popupWinAttrs","socialWidth","customUrl","absUrl","nodeName","win","open","customHandler","on","$event","$url","off","linker","shareUrl","encodeURIComponent","media","description","getWindowScrollTop","pageYOffset","iebody","compatMode","documentElement","scrollTop","uiScrollpointTarget","onScroll","limit","absolute","uiScrollpoint","offsetTop","offset","$target","addClass","scrollpointGroup","group","getElementById","fixLimit","removeClass","$element","ModelObj","modelPath","modelPathArr","pathArr","keyArrOrStr","refresh","model","update","valuePathArr","evalAssignment","action","view","eval",{"end":{"file":0,"comments_before":[],"nlb":false,"endpos":66067,"endcol":24,"endline":1561,"pos":66063,"col":20,"line":1561,"value":"data","type":"name","_comments_dumped":true},"start":{"file":0,"comments_before":[],"nlb":false,"endpos":66067,"endcol":24,"endline":1561,"pos":66063,"col":20,"line":1561,"value":"data","type":"name","_comments_dumped":true},"name":"data"},"_stateTransitionCache","activeStates","goWithData","to","params","clear","clearAgain","someVar","randomString","chars","random","str","replaceParamsInString","string","param","replaceParamsInObj","objString","replacedObj","paramReplacedKey","lhsArr","rhsArr","toPathArr","strOrArr","lhsPath","lhs","rhs","lhsPathArr","rhsPathArr","target","opts","step","object","prev","keys","isarray","safe","isbuffer","isobject","newKey","delimiter","maxDepth","currentDepth","output","unflatten","getkey","parsedKey","overwrite","key1","key2","recipient","cloneObject","temp","constructor","filterRawData","rawDataObj","filterModel","isParam","paramHeader","iterate","prevKey","goDeeperOrStop","filterKey","nextLevelFilter","escape","useModelHeader","removeUndefined","fail","res","keyStr","structureClone","checkIfPropertyExist","arr","isExist","WaitUntil","conditionNum","onComplete","that","satisfiedCondition","apply","ucfirst","toUpperCase","DelayExec","delay","DelayedFilter","source","delayedTime","reset","$digest","isObjEmpty","getOwnPropertyNames","customDelay","timeout","clearTimeout","setTimeout","FbObj","refUrl","isDbOnline","keepOnline","db","_refUrl","databases","dbName","Name","dbUrl","Date","getTime","fbObj","queryRef","orderBy","startAt","endAt","equalTo","limitToFirst","limitToLast","objectRepo","load","loadList","defaultOpt","defers","_defaultOpt","promises","loadObj","all","removePrev","refUrlParams","replacedRefUrl","realKey","goOnline","debug","goOffline","consecutive","isLast","nonConsecutive","_isConsecutive","move","from","sourceRef","targetRef","$communicate","request","resolveVal","response","resUrlArr","getResponse","refs","derfer","onSuccess","isRenew","onError","getMultipleRefVal","currentRefs","onGoingRef","indicator","waitUntil","refNum","activeRefUrl","tPos","$controller","pagePlusDirective","resolveObj","locals","condition","invoke","resolved","linkFn","doSearch","query","showResults","dat","jsonp","preLoadList","stripeKey","Stripe","setPublishableKey","$mdSidenav","toggleSidenav","menuId","toggle","sideNavLogout","$unauth","loggedIn","$uid","phone","customFn","order","sum","products","watchFilterOpts","watchFilter","watchSource","directiveName","app","$mdDialog","redirectTo","showError","assertValidAccountProps","pass","confirm","createMode","closeDialog","hide","submit","login","$createUser","showLogin","parentEl","show","parent","targetEvent","clickOutsideToClose","stateParams","resetMessages","msg","emailerr","emailmsg","profile","$bindTo","ub","logout","cancel","changePassword","newPass","$changePassword","oldPassword","newPassword","changeEmail","newEmail","oldEmail","$changeEmail","done","showAccount","showDetail","pid","productId","updateContactInfo","isEmailChanged","clientEmail","isPhoneChanged","clientPhone","uploadList","isTimeValid","dt","getDay","alert","getPaymentData","payment","window","token","prepareOrderData","method","paymentMethod","clientName","clientId","note","schedule","orderStatus","shipment","uploadOrder","mainOrderStructure","$productId","itemName","selectedOption","mainOrderData","userOderReceiptStructure","userReceiptData","batchOrderData","invoice","isCharged","emptyCart","number","expiry","cvc","submitOrder","waiting","orderId","stripeCallback","hour","minute","minDate","maxDate","getFullYear","getMonth","getDate","changeDt","setHours","setMinutes","changeTime","refreshTotalItems","cartTotalItems","filterUtil","$firebaseArray","loadOrders","startDay","endDay","now","day","orderByChild","myOrdersSrc","unwatchFilter","filterOpt","refreshFilter","search","searcKeyhArr","filters","$errorHandler","views","","controllerAs","content","allOrdersSrc","statusOptions","changeOrderStatus","userId","changedStatus","noop","calcSubTotal","removeOrder","reason","addOpt","selectedProduct","removeOpt","selectProduct","updateProduct","removeProduct","createProduct","randomId","image","listPrice","clearProduct","isLoaded","updateDescription","firebaseObject","path1","path2","path3","changed","inputDelayTest","iElement","iAttrs","date","OK","getAppDependencies","bootstrap"],"mappings":"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","file":"bundle.js","sourcesContent":["(function (angular) {\r\n    'use strict';\r\n\r\n    obsidian.module('myApp.appVersion', [])\r\n        .directive('appVersion', /*@ngInject*/ function (version) {\r\n            return function (scope, elm) {\r\n                elm.text(version);\r\n            };\r\n        });\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n    var mod = obsidian.module('myApp.errorHandler',[]),\r\n        state = 'error',\r\n        url = '/error/:errorId',\r\n        ctrlName = 'errorCtrl',\r\n        templateUrl = 'components/errorHandler/error.html';\r\n\r\n\r\n    mod.controller(ctrlName, /*@ngInject*/ function ($scope, $stateParams) {\r\n        //create your own controller here\r\n        $scope.error=$stateParams\r\n    });\r\n\r\n    mod.config(/*@ngInject*/ function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    });\r\n\r\n    mod.factory('$errorHandler', /*@ngInject*/ function ($state) {\r\n        var errorType={\r\n\r\n        };\r\n\r\n        function openErrorPage(opt) {\r\n            $state.go('error', opt);\r\n            if (!$scope.$$phase) $scope.$apply(); //確保成功轉換頁面\r\n        }\r\n\r\n        return function(opt){\r\n            var _opt=opt||{};\r\n            if(!_opt.type){\r\n                return function(error){\r\n                    console.log(JSON.stringify(error));\r\n                }\r\n            } else if(_opt.openErrorPage){\r\n                openErrorPage(_opt)\r\n            }\r\n        };\r\n    });\r\n})(angular);","(function (angular) {\r\n    'use strict';\r\n    obsidian.module('firebase.auth', ['firebase', 'firebase.utils'])\r\n        .factory('Auth', /*@ngInject*/ function ($firebaseAuth, fbutil, $q, FBURL, snippet, $firebase) {\r\n\r\n            var Auth = $firebaseAuth(fbutil.ref());\r\n\r\n            Auth.checkIfAccountExistOnFb = function (authData) {\r\n                var def = $q.defer();\r\n                if (!authData) def.reject('AUTH_NEEDED');\r\n                var ref = fbutil.ref('users', authData.uid, 'createdTime');\r\n                ref.once('value', function (snap) {\r\n                    if (snap.val() === null) {\r\n                        def.resolve(authData);\r\n                    }\r\n                }, function (err) {\r\n                    def.reject(err)\r\n                });\r\n                return def.promise\r\n            };\r\n\r\n            Auth.createAccount = function (authData, opt) {\r\n                if (!authData) return;\r\n                if (opt === undefined || (typeof opt !== 'object')) {\r\n                    var ref = fbutil.ref('users', authData.uid);\r\n                    return fbutil.handler(function (cb) {\r\n                        ref.set(Auth.basicAccountUserData(authData, opt), cb);\r\n                    })\r\n                } else {\r\n                    var def = $q.defer();\r\n                    if (!!opt.structure) {\r\n                        var rawData = snippet.flatten(authData, opt.flattenConfig);\r\n                        rawData.authData = authData;\r\n                        var values = snippet.createBatchUpdateValues(rawData, opt.structure);\r\n                        console.log(JSON.stringify(values));\r\n                        $firebase.batchUpdate(values, opt.isConsecutive).then(function () {\r\n                            def.resolve();\r\n                        }, opt.errorHandler);\r\n                    } else {\r\n                        def.reject('USERDATA_STRUCTURE_NEEDED')\r\n                    }\r\n                    return def.promise\r\n                }\r\n            };\r\n            //Example\r\n            //var opt={\r\n            //    structure:[\r\n            //        {\r\n            //            refUrl:'users/$uid',\r\n            //            value:'authData' //主要user acc, 將全部authData update 到此refUrl\r\n            //        },\r\n            //        {\r\n            //            refUrl:'userList/$uid', //產生一個只有 name和email 的list item\r\n            //            value:{\r\n            //                name:'password.name', //此string 代表authData.password.name\r\n            //                email:'password.email'\r\n            //            }\r\n            //        }\r\n            //    ]\r\n            //};\r\n\r\n            /*Auth.checkThenCreateAccount=function(authData){\r\n             var def=$q.defer();\r\n             Auth.checkIfAccountExistOnFb(authData).then(\r\n\r\n             function(snap){\r\n             if(snap===null) Auth.createAccount(authData).then(\r\n             function(authData){def.resolve(authData);},\r\n             function(err){def.reject(err)}\r\n             )},\r\n             function(err){\r\n             def.reject(err)\r\n             });\r\n             return def.promise\r\n             };*/\r\n\r\n            Auth.basicAccountUserData = function (authData) {\r\n                var provider = authData.provider,\r\n                    name = authData[provider].displayName || authData.uid,\r\n                    email = authData[provider].email || null,\r\n                    profileImageURL = authData[provider].profileImageURL || null;\r\n                if (provider === 'password') name = snippet.firstPartOfEmail(authData.password.email);\r\n                var basicUserInfo = {\r\n                    createdTime: Firebase.ServerValue.TIMESTAMP,\r\n                    name: name,\r\n                    email: email,\r\n                    profileImageURL: profileImageURL\r\n                };\r\n                basicUserInfo[provider] = {\r\n                    id: authData[provider].id || null\r\n                };\r\n                return basicUserInfo\r\n            };\r\n\r\n\r\n            Auth.loginWithProvider = function (provider, options) {\r\n                var opt = typeof options === 'object' ? options : {};\r\n                switch (provider) {\r\n                    case 'password':\r\n                        return Auth.$authWithPassword({email: opt.email, password: opt.password}, opt);\r\n                        break;\r\n                    case 'custom':\r\n                        return Auth.$authWithCustomToken(opt.customToken, opt);\r\n                        break;\r\n                    case 'anonymous':\r\n                        opt.rememberMe = opt.rememberMe || 'none';\r\n                        return Auth.$authAnonymously(opt);\r\n                        break;\r\n                    default:\r\n                        if (opt.popup === false) {\r\n                            return Auth.$authWithOAuthRedirect(provider, opt);\r\n                        } else {\r\n                            return Auth.$authWithOAuthPopup(provider, opt);\r\n                        }\r\n                        break;\r\n                }\r\n            };\r\n\r\n            Auth.removeUserData = function (authData, extraCallBack) {\r\n                var ref = new Firebase((FBURL + 'users/' + authData.uid));   //TODO: 𩄍惩撠滚𩄍firebase𩄍𣈲𩄍\r\n\r\n                ref.remove(function (err) {\r\n                    if (err) {\r\n                        console.log(err.code);\r\n                    } else {\r\n                        if (extraCallBack) extraCallBack(authData);\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n            return Auth;\r\n        });\r\n})(angular);\r\n\r\n","(function (angular) {\r\n    var mod = obsidian.module('firebase.utils', ['firebase', 'myApp.config']);\r\n\r\n// a simple wrapper on Firebase and AngularFire to simplify deps and keep things DRY\r\n    mod.factory('fbutil',/*@ngInject*/ function ($window, FBURL, $q) {\r\n        \"use strict\";\r\n\r\n        var utils = {\r\n            // convert a node or Firebase style callback to a future\r\n            handler: function (fn, context) {\r\n                return utils.defer(function (def) {\r\n                    fn.call(context, function (err, result) {\r\n                        if (err !== null) {\r\n                            def.reject(err);\r\n                        }\r\n                        else {\r\n                            def.resolve(result);\r\n                        }\r\n                    });\r\n                });\r\n            },\r\n\r\n            // abstract the process of creating a future/promise\r\n            defer: function (fn, context) {\r\n                var def = $q.defer();\r\n                fn.call(context, def);\r\n                return def.promise;\r\n            },\r\n\r\n            ref: firebaseRef\r\n        };\r\n\r\n        return utils;\r\n\r\n        function pathRef(args) {\r\n            for (var i = 0; i < args.length; i++) {\r\n                if (angular.isArray(args[i])) {\r\n                    args[i] = pathRef(args[i]);\r\n                }\r\n                else if (typeof args[i] !== 'string') {\r\n                    throw new Error('Argument ' + i + ' to firebaseRef is not a string: ' + args[i]);\r\n                }\r\n            }\r\n            return args.join('/');\r\n        }\r\n\r\n        /**\r\n         * Example:\r\n         * <code>\r\n         *    function(firebaseRef) {\r\n         *       var ref = firebaseRef('path/to/data');\r\n         *    }\r\n         * </code>\r\n         *\r\n         * @function\r\n         * @name firebaseRef\r\n         * @param {String|Array...} path relative path to the root folder in Firebase instance\r\n         * @return a Firebase instance\r\n         */\r\n        function firebaseRef(path) {\r\n            var ref = new $window.Firebase(FBURL);\r\n            var args = Array.prototype.slice.call(arguments);\r\n            if (args.length) {\r\n                ref = ref.child(pathRef(args));\r\n            }\r\n            return ref;\r\n        }\r\n    });\r\n})(angular);","(function (angular) {\r\n    /**\r\n     * Wraps ng-cloak so that, instead of simply waiting for Angular to compile, it waits until\r\n     * Auth resolves with the remote Firebase services.\r\n     *\r\n     * <code>\r\n     *    <div ng-cloak>Authentication has resolved.</div>\r\n     * </code>\r\n     */\r\n    var mod = obsidian.module('myApp.ngcloakDecorator', []);\r\n\r\n    mod.config(['$provide', function ($provide) {\r\n        // adapt ng-cloak to wait for auth before it does its magic\r\n        $provide.decorator('ngCloakDirective', ['$delegate', 'Auth',\r\n            function ($delegate, Auth) {\r\n                var directive = $delegate[0];\r\n                // make a copy of the old directive\r\n                var _compile = directive.compile;\r\n                directive.compile = function (element, attr) {\r\n                    Auth.$waitForAuth().then(function () {\r\n                        // after auth, run the original ng-cloak directive\r\n                        _compile.call(directive, element, attr);\r\n                    });\r\n                };\r\n                // return the modified directive\r\n                return $delegate;\r\n            }]);\r\n    }]);\r\n})(angular);\r\n\r\n\r\n","(function (angular) {\r\n    'use strict';\r\n    obsidian.module('myApp.filters', [])\r\n        .filter('reverse', /*@ngInject*/ function () {\r\n            return function (items) {\r\n                return items.slice().reverse();\r\n            }\r\n        })\r\n        .filter('consecutive', /*@ngInject*/ function ($filter, snippet) {\r\n            return function (items, input, isReverse) {\r\n                var _items = items || [];\r\n                var result = angular.copy(_items);\r\n\r\n                if (typeof input === 'object') {\r\n                    angular.forEach(input, function (value, key) {\r\n                        if (!value && value !== '') return;\r\n                        if (value === true) {\r\n                            result = $filter('filter')(result, key);\r\n                        } else {\r\n                            result = $filter('filter')(result, value);\r\n                        }\r\n                    });\r\n                } else if (typeof input === 'string') {\r\n                    input = input.trim();\r\n                    var keyArray = input.split(' ');\r\n                    for (var i = 0; i < keyArray.length; i++) {\r\n                        result = $filter('filter')(result, keyArray[i]);\r\n                    }\r\n                    result = input === '' ? _items : result\r\n                }\r\n                return isReverse ? result.slice().reverse() : result\r\n            }\r\n        })\r\n        ////see http://jsfiddle.net/nirmalkumar_86/9F89Q/5/\r\n        .filter('filterMultiple', /*@ngInject*/ function ($filter) {\r\n            return function (items, keyObj) {\r\n                var filterObj = {\r\n                    data: items,\r\n                    filteredData: [],\r\n                    applyFilter: function (obj, key) {\r\n                        var fData = [];\r\n                        if (this.filteredData.length == 0)\r\n                            this.filteredData = this.data;\r\n                        if (obj) {\r\n                            var fObj = {};\r\n                            if (!angular.isArray(obj)) {\r\n                                fObj[key] = obj;\r\n                                fData = fData.concat($filter('filter')(this.filteredData, fObj));\r\n                            } else if (angular.isArray(obj)) {\r\n                                if (obj.length > 0) {\r\n                                    for (var i = 0; i < obj.length; i++) {\r\n                                        if (angular.isDefined(obj[i])) {\r\n                                            fObj[key] = obj[i];\r\n                                            fData = fData.concat($filter('filter')(this.filteredData, fObj));\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                            if (fData.length > 0) {\r\n                                this.filteredData = fData;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                if (keyObj) {\r\n                    angular.forEach(keyObj, function (obj, key) {\r\n                        filterObj.applyFilter(obj, key);\r\n                    });\r\n                }\r\n\r\n                return filterObj.filteredData;\r\n            }\r\n        })\r\n        .filter('unique', /*@ngInject*/ function () {\r\n            return function (input, key) {\r\n                var unique = {};\r\n                var uniqueList = [];\r\n                for (var i = 0; i < input.length; i++) {\r\n                    if (typeof unique[input[i][key]] == \"undefined\") {\r\n                        unique[input[i][key]] = \"\";\r\n                        uniqueList.push(input[i]);\r\n                    }\r\n                }\r\n                return uniqueList;\r\n            };\r\n        })\r\n        //see https://github.com/vpegado/angular-percentage-filter\r\n        .filter('percentage', /*@ngInject*/ function ($window) {\r\n            return function (input, decimals, suffix) {\r\n                decimals = angular.isNumber(decimals) ? decimals : 3;\r\n                suffix = suffix || '%';\r\n                if ($window.isNaN(input)) {\r\n                    return '';\r\n                }\r\n                return Math.round(input * Math.pow(10, decimals + 2)) / Math.pow(10, decimals) + suffix\r\n            };\r\n        });\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n    // when $routeProvider.whenAuthenticated() is called, the path is stored in this list\r\n// to be used by authRequired() in the services below\r\n    var securedStates = [];\r\n    var mod = obsidian.module('myApp.security', ['ui.router', 'firebase.auth', 'myApp.config']);\r\n\r\n//mod.config(function ($urlRouterProvider, config) {\r\n//    // routes which are not in our map are redirected to 'home'\r\n//    $urlRouterProvider.otherwise(config.redirectUrl);\r\n//})\r\n\r\n    /**\r\n     * Adds a special `whenAuthenticated` method onto $routeProvider. This special method,\r\n     * when called, waits for auth status to be resolved asynchronously, and then fails/redirects\r\n     * if the user is not properly authenticated.\r\n     *\r\n     * The promise either resolves to the authenticated user object and makes it available to\r\n     * dependency injection (see AuthCtrl), or rejects the promise if user is not logged in,\r\n     * forcing a redirect to the /login page\r\n     */\r\n    mod.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.stateAuthenticated = function (name, stateObject) {\r\n            securedStates.push(name);\r\n            stateObject.resolve = stateObject.resolve || {};\r\n            stateObject.resolve.authData = ['Auth', function (Auth) {\r\n                return Auth.$requireAuth();\r\n            }];\r\n            $stateProvider.state(name, stateObject);\r\n            return this;\r\n        }\r\n    }])\r\n\r\n    /**\r\n     * Apply some route security. Any route's resolve method can reject the promise with\r\n     * { authRequired: true } to force a redirect. This method enforces that and also watches\r\n     * for changes in auth status which might require us to navigate away from a path\r\n     * that we can no longer view.\r\n     */\r\n        .run(/*@ngInject*/ function ($rootScope, $location, $state, Auth, loginRedirectState) {\r\n            Auth.$onAuth(checkState);\r\n\r\n            function checkState(user) {\r\n                if (!user && authStateRequired($state.current.name)) {\r\n                    console.log('check failed', user, $location.path()); //debug\r\n                    $state.go(loginRedirectState);\r\n                }\r\n            }\r\n\r\n            $rootScope.$on('$stateChangeError',\r\n                function (event, toState, toParams, fromState, fromParams, error) {\r\n                    if (error === \"AUTH_REQUIRED\") {\r\n                        event.preventDefault();\r\n                        $state.transitionTo(loginRedirectState);\r\n                    }\r\n                });\r\n\r\n            function authStateRequired(name) {\r\n                console.log('authRequired?', name, securedStates.indexOf(name)); //debug\r\n                return securedStates.indexOf(name) !== -1;\r\n            }\r\n        }\r\n    );\r\n})(angular);\r\n\r\n","(function (angular) {\r\n    'use strict';\r\n\r\n    angular.module('ngCart', ['ngCart.directives'])\r\n        .config([function () {\r\n\r\n        }])\r\n\r\n        .provider('$ngCart', function () {\r\n            this.$get = function () {\r\n            };\r\n        })\r\n\r\n        .run(['$rootScope', 'ngCart', 'ngCartItem', 'store', function ($rootScope, ngCart, ngCartItem, store) {\r\n\r\n            $rootScope.$on('ngCart:change', function () {\r\n                ngCart.$save();\r\n            });\r\n\r\n            if (angular.isObject(store.get('cart'))) {\r\n                ngCart.$restore(store.get('cart'));\r\n\r\n            } else {\r\n                ngCart.init();\r\n            }\r\n\r\n        }])\r\n\r\n        .service('ngCart', ['$rootScope', 'ngCartItem', 'store', function ($rootScope, ngCartItem, store) {\r\n\r\n            this.init = function () {\r\n                this.$cart = {\r\n                    shipping: null,\r\n                    taxRate: null,\r\n                    tax: null,\r\n                    items: []\r\n                };\r\n            };\r\n\r\n            this.addItem = function (id, name, price, quantity, data) {\r\n\r\n                var inCart = this.getItemById(id);\r\n\r\n                if (typeof inCart === 'object') {\r\n                    //Update quantity of an item if it's already in the cart\r\n                    inCart.setQuantity(quantity, false);\r\n                } else {\r\n                    var newItem = new ngCartItem(id, name, price, quantity, data);\r\n                    this.$cart.items.push(newItem);\r\n                    $rootScope.$broadcast('ngCart:itemAdded', newItem);\r\n                }\r\n\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n            };\r\n\r\n            this.getItemById = function (itemId) {\r\n                var items = this.getCart().items;\r\n                var build = false;\r\n\r\n                angular.forEach(items, function (item) {\r\n                    if (item.getId() === itemId) {\r\n                        build = item;\r\n                    }\r\n                });\r\n                return build;\r\n            };\r\n\r\n            this.setShipping = function (shipping) {\r\n                this.$cart.shipping = shipping;\r\n                return this.getShipping();\r\n            };\r\n\r\n            this.getShipping = function () {\r\n                if (this.getCart().items.length == 0) return 0;\r\n                return this.getCart().shipping;\r\n            };\r\n\r\n            this.setTaxRate = function (taxRate) {\r\n                this.$cart.taxRate = +parseFloat(taxRate).toFixed(2);\r\n                return this.getTaxRate();\r\n            };\r\n\r\n            this.getTaxRate = function () {\r\n                return this.$cart.taxRate\r\n            };\r\n\r\n            this.getTax = function () {\r\n                return +parseFloat(((this.getSubTotal() / 100) * this.getCart().taxRate )).toFixed(2);\r\n            };\r\n\r\n            this.setCart = function (cart) {\r\n                this.$cart = cart;\r\n                return this.getCart();\r\n            };\r\n\r\n            this.getCart = function () {\r\n                return this.$cart;\r\n            };\r\n\r\n            this.getItems = function () {\r\n                return this.getCart().items;\r\n            };\r\n\r\n            this.getTotalItems = function () {\r\n                var count = 0;\r\n                var items = this.getItems();\r\n                angular.forEach(items, function (item) {\r\n                    count += item.getQuantity();\r\n                });\r\n                return count;\r\n            };\r\n\r\n            this.getTotalUniqueItems = function () {\r\n                return this.getCart().items.length;\r\n            };\r\n\r\n            this.getSubTotal = function () {\r\n                var total = 0;\r\n                angular.forEach(this.getCart().items, function (item) {\r\n                    total += item.getTotal();\r\n                });\r\n                return +parseFloat(total).toFixed(2);\r\n            };\r\n\r\n            this.totalCost = function () {\r\n                return +parseFloat(this.getSubTotal() + this.getShipping() + this.getTax()).toFixed(2);\r\n            };\r\n\r\n            this.removeItem = function (index) {\r\n                this.$cart.items.splice(index, 1);\r\n                $rootScope.$broadcast('ngCart:itemRemoved', {});\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n\r\n            };\r\n\r\n            this.removeItemById = function (id) {\r\n                var cart = this.getCart();\r\n                angular.forEach(cart.items, function (item, index) {\r\n                    if (item.getId() === id) {\r\n                        cart.items.splice(index, 1);\r\n                    }\r\n                });\r\n                this.setCart(cart);\r\n                $rootScope.$broadcast('ngCart:itemRemoved', {});\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n            };\r\n\r\n            this.empty = function () {\r\n\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n                this.$cart.items = [];\r\n                localStorage.removeItem('cart');\r\n            };\r\n\r\n            this.isEmpty = function () {\r\n\r\n                return (this.$cart.items.length > 0 ? false : true);\r\n\r\n            };\r\n\r\n            this.toObject = function () {\r\n\r\n                if (this.getItems().length === 0) return false;\r\n\r\n                var items = [];\r\n                angular.forEach(this.getItems(), function (item) {\r\n                    items.push(item.toObject());\r\n                });\r\n\r\n                return {\r\n                    shipping: this.getShipping(),\r\n                    tax: this.getTax(),\r\n                    taxRate: this.getTaxRate(),\r\n                    subTotal: this.getSubTotal(),\r\n                    totalCost: this.totalCost(),\r\n                    items: items\r\n                }\r\n            };\r\n\r\n\r\n            this.$restore = function (storedCart) {\r\n                var _self = this;\r\n                _self.init();\r\n                _self.$cart.shipping = storedCart.shipping;\r\n                _self.$cart.tax = storedCart.tax;\r\n\r\n                angular.forEach(storedCart.items, function (item) {\r\n                    _self.$cart.items.push(new ngCartItem(item._id, item._name, item._price, item._quantity, item._data));\r\n                });\r\n                this.$save();\r\n            };\r\n\r\n            this.$save = function () {\r\n                return store.set('cart', JSON.stringify(this.getCart()));\r\n            }\r\n\r\n        }])\r\n\r\n        .factory('ngCartItem', ['$rootScope', '$log', function ($rootScope, $log) {\r\n\r\n            var item = function (id, name, price, quantity, data) {\r\n                this.setId(id);\r\n                this.setName(name);\r\n                this.setPrice(price);\r\n                this.setQuantity(quantity);\r\n                this.setData(data);\r\n            };\r\n\r\n\r\n            item.prototype.setId = function (id) {\r\n                if (id)  this._id = id;\r\n                else {\r\n                    $log.error('An ID must be provided');\r\n                }\r\n            };\r\n\r\n            item.prototype.getId = function () {\r\n                return this._id;\r\n            };\r\n\r\n\r\n            item.prototype.setName = function (name) {\r\n                if (name)  this._name = name;\r\n                else {\r\n                    $log.error('A name must be provided');\r\n                }\r\n            };\r\n            item.prototype.getName = function () {\r\n                return this._name;\r\n            };\r\n\r\n            item.prototype.setPrice = function (price) {\r\n                var priceFloat = parseFloat(price);\r\n                if (priceFloat) {\r\n                    if (priceFloat <= 0) {\r\n                        $log.error('A price must be over 0');\r\n                    } else {\r\n                        this._price = (priceFloat);\r\n                    }\r\n                } else {\r\n                    $log.error('A price must be provided');\r\n                }\r\n            };\r\n            item.prototype.getPrice = function () {\r\n                return this._price;\r\n            };\r\n\r\n\r\n            item.prototype.setQuantity = function (quantity, relative) {\r\n\r\n\r\n                var quantityInt = parseInt(quantity);\r\n                if (quantityInt % 1 === 0) {\r\n                    if (relative === true) {\r\n                        this._quantity += quantityInt;\r\n                    } else {\r\n                        this._quantity = quantityInt;\r\n                    }\r\n                    if (this._quantity < 1) this._quantity = 1;\r\n\r\n                } else {\r\n                    this._quantity = 1;\r\n                    $log.info('Quantity must be an integer and was defaulted to 1');\r\n                }\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n\r\n            };\r\n\r\n            item.prototype.getQuantity = function () {\r\n                return this._quantity;\r\n            };\r\n\r\n            item.prototype.setData = function (data) {\r\n                if (data) this._data = data;\r\n            };\r\n\r\n            item.prototype.getData = function () {\r\n                if (this._data) return this._data;\r\n                else $log.info('This item has no data');\r\n            };\r\n\r\n\r\n            item.prototype.getTotal = function () {\r\n                return +parseFloat(this.getQuantity() * this.getPrice()).toFixed(2);\r\n            };\r\n\r\n            item.prototype.toObject = function () {\r\n                return {\r\n                    id: this.getId(),\r\n                    name: this.getName(),\r\n                    price: this.getPrice(),\r\n                    quantity: this.getQuantity(),\r\n                    data: this.getData(),\r\n                    total: this.getTotal()\r\n                }\r\n            };\r\n\r\n            return item;\r\n\r\n        }])\r\n\r\n        .service('store', ['$window', function ($window) {\r\n\r\n            return {\r\n\r\n                get: function (key) {\r\n                    if ($window.localStorage [key]) {\r\n                        var cart = angular.fromJson($window.localStorage [key]);\r\n                        return JSON.parse(cart);\r\n                    }\r\n                    return false;\r\n\r\n                },\r\n\r\n\r\n                set: function (key, val) {\r\n\r\n                    if (val === undefined) {\r\n                        $window.localStorage.removeItem(key);\r\n                    } else {\r\n                        $window.localStorage [key] = angular.toJson(val);\r\n                    }\r\n                    return $window.localStorage [key];\r\n                }\r\n            }\r\n        }])\r\n\r\n        .controller('CartController', ['$scope', 'ngCart', function ($scope, ngCart) {\r\n            $scope.ngCart = ngCart;\r\n\r\n        }])\r\n\r\n        .value('version', '1.0.0');\r\n    'use strict';\r\n\r\n\r\n    angular.module('ngCart.directives', ['ngCart.fulfilment'])\r\n\r\n        .controller('CartController', ['$scope', 'ngCart', function ($scope, ngCart) {\r\n            $scope.ngCart = ngCart;\r\n        }])\r\n\r\n        .directive('ngcartAddtocart', ['ngCart', function (ngCart) {\r\n            return {\r\n                restrict: 'E',\r\n                controller: 'CartController',\r\n                scope: {\r\n                    id: '@',\r\n                    name: '@',\r\n                    quantity: '@',\r\n                    quantityMax: '@',\r\n                    price: '@',\r\n                    data: '='\r\n                },\r\n                transclude: true,\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'components/ngCart/addtocart.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                },\r\n                link: function (scope, element, attrs) {\r\n                    scope.attrs = attrs;\r\n                    scope.inCart = function () {\r\n                        return ngCart.getItemById(attrs.id);\r\n                    };\r\n\r\n                    if (scope.inCart()) {\r\n                        scope.q = ngCart.getItemById(attrs.id).getQuantity();\r\n                    } else {\r\n                        scope.q = parseInt(scope.quantity);\r\n                    }\r\n\r\n                    scope.qtyOpt = [];\r\n                    for (var i = 1; i <= scope.quantityMax; i++) {\r\n                        scope.qtyOpt.push(i);\r\n                    }\r\n\r\n                }\r\n\r\n            };\r\n        }])\r\n\r\n        .directive('ngcartCart', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                controller: 'CartController',\r\n                scope: {},\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'components/ngCart/cart.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                },\r\n                link: function (scope, element, attrs) {\r\n\r\n                }\r\n            };\r\n        }])\r\n\r\n        .directive('ngcartSummary', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                controller: 'CartController',\r\n                scope: {},\r\n                transclude: true,\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'components/ngCart/summary.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                }\r\n            };\r\n        }])\r\n\r\n        .directive('ngcartCheckout', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                controller: ('CartController', ['$rootScope', '$scope', 'ngCart', 'fulfilmentProvider', function ($rootScope, $scope, ngCart, fulfilmentProvider) {\r\n                    $scope.ngCart = ngCart;\r\n\r\n                    $scope.checkout = function () {\r\n                        fulfilmentProvider.setService($scope.service);\r\n                        fulfilmentProvider.setSettings($scope.settings);\r\n                        fulfilmentProvider.checkout()\r\n                            .success(function (data, status, headers, config) {\r\n                                $rootScope.$broadcast('ngCart:checkout_succeeded', data);\r\n                            })\r\n                            .error(function (data, status, headers, config) {\r\n                                $rootScope.$broadcast('ngCart:checkout_failed', {\r\n                                    statusCode: status,\r\n                                    error: data\r\n                                });\r\n                            });\r\n                    }\r\n                }]),\r\n                scope: {\r\n                    service: '@',\r\n                    settings: '='\r\n                },\r\n                transclude: true,\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'components/ngCart/checkout.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                }\r\n            };\r\n        }]);\r\n\r\n    angular.module('ngCart.fulfilment', [])\r\n        .service('fulfilmentProvider', ['$injector', function ($injector) {\r\n\r\n            this._obj = {\r\n                service: undefined,\r\n                settings: undefined\r\n            };\r\n\r\n            this.setService = function (service) {\r\n                this._obj.service = service;\r\n            };\r\n\r\n            this.setSettings = function (settings) {\r\n                this._obj.settings = settings;\r\n            };\r\n\r\n            this.checkout = function () {\r\n                var provider = $injector.get('ngCart.fulfilment.' + this._obj.service);\r\n                return provider.checkout(this._obj.settings);\r\n\r\n            }\r\n\r\n        }])\r\n\r\n\r\n        .service('ngCart.fulfilment.log', ['$q', '$log', 'ngCart', function ($q, $log, ngCart) {\r\n\r\n            this.checkout = function () {\r\n\r\n                var deferred = $q.defer();\r\n\r\n                $log.info(ngCart.toObject());\r\n                deferred.resolve({\r\n                    cart: ngCart.toObject()\r\n                });\r\n\r\n                return deferred.promise;\r\n\r\n            }\r\n\r\n        }])\r\n\r\n        .service('ngCart.fulfilment.http', ['$http', 'ngCart', function ($http, ngCart) {\r\n\r\n            this.checkout = function (settings) {\r\n                return $http.post(settings.url,\r\n                    {data: ngCart.toObject(), options: settings.options});\r\n            }\r\n        }])\r\n\r\n\r\n        .service('ngCart.fulfilment.paypal', ['$http', 'ngCart', function ($http, ngCart) {\r\n\r\n\r\n        }]);\r\n})(angular);","(function (angular) {\r\n    // see https://github.com/cgross/angular-notify/blob/master/dist/angular-notify.js\r\n    var mod = angular.module('ngNotify', []);\r\n\r\n    mod.factory('ngNotify', ['$timeout', '$http', '$compile', '$templateCache', '$rootScope',\r\n        function ($timeout, $http, $compile, $templateCache, $rootScope) {\r\n\r\n            var startTop = 10;\r\n            var verticalSpacing = 15;\r\n            var defaultDuration = 10000;\r\n            var defaultTemplateUrl = 'angular-notify.html';\r\n            var position = 'center';\r\n            var container = document.body;\r\n            var maximumOpen = 0;\r\n\r\n            var messageElements = [];\r\n            var openNotificationsScope = [];\r\n\r\n            var notify = function (args) {\r\n\r\n                if (typeof args !== 'object') {\r\n                    args = {message: args};\r\n                }\r\n\r\n                args.duration = args.duration ? args.duration : defaultDuration;\r\n                args.templateUrl = args.templateUrl ? args.templateUrl : defaultTemplateUrl;\r\n                args.container = args.container ? args.container : container;\r\n                args.classes = args.classes ? args.classes : '';\r\n\r\n                var scope = args.scope ? args.scope.$new() : $rootScope.$new();\r\n                scope.$position = args.position ? args.position : position;\r\n                scope.$message = args.message;\r\n                scope.$classes = args.classes;\r\n                scope.$messageTemplate = args.messageTemplate;\r\n\r\n                if (maximumOpen > 0) {\r\n                    var numToClose = (openNotificationsScope.length + 1) - maximumOpen;\r\n                    for (var i = 0; i < numToClose; i++) {\r\n                        openNotificationsScope[i].$close();\r\n                    }\r\n                }\r\n\r\n                $http.get(args.templateUrl, {cache: $templateCache}).success(function (template) {\r\n\r\n                    var templateElement = $compile(template)(scope);\r\n                    templateElement.bind('webkitTransitionEnd oTransitionEnd otransitionend transitionend msTransitionEnd', function (e) {\r\n                        if (e.propertyName === 'opacity' || e.currentTarget.style.opacity === 0 ||\r\n                            (e.originalEvent && e.originalEvent.propertyName === 'opacity')) {\r\n\r\n                            templateElement.remove();\r\n                            messageElements.splice(messageElements.indexOf(templateElement), 1);\r\n                            openNotificationsScope.splice(openNotificationsScope.indexOf(scope), 1);\r\n                            layoutMessages();\r\n                        }\r\n                    });\r\n\r\n                    if (args.messageTemplate) {\r\n                        var messageTemplateElement;\r\n                        for (var i = 0; i < templateElement.children().length; i++) {\r\n                            if (angular.element(templateElement.children()[i]).hasClass('cg-notify-message-template')) {\r\n                                messageTemplateElement = angular.element(templateElement.children()[i]);\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (messageTemplateElement) {\r\n                            messageTemplateElement.append($compile(args.messageTemplate)(scope));\r\n                        } else {\r\n                            throw new Error('ngNotify could not find the .ng-notify-message-template element in ' + args.templateUrl + '.');\r\n                        }\r\n                    }\r\n\r\n                    angular.element(args.container).append(templateElement);\r\n                    messageElements.push(templateElement);\r\n\r\n                    if (scope.$position === 'center') {\r\n                        $timeout(function () {\r\n                            scope.$centerMargin = '-' + (templateElement[0].offsetWidth / 2) + 'px';\r\n                        });\r\n                    }\r\n\r\n                    scope.$close = function () {\r\n                        templateElement.css('opacity', 0).attr('data-closing', 'true');\r\n                        layoutMessages();\r\n                    };\r\n\r\n                    var layoutMessages = function () {\r\n                        var j = 0;\r\n                        var currentY = startTop;\r\n                        for (var i = messageElements.length - 1; i >= 0; i--) {\r\n                            var shadowHeight = 10;\r\n                            var element = messageElements[i];\r\n                            var height = element[0].offsetHeight;\r\n                            var top = currentY + height + shadowHeight;\r\n                            if (element.attr('data-closing')) {\r\n                                top += 20;\r\n                            } else {\r\n                                currentY += height + verticalSpacing;\r\n                            }\r\n                            element.css('top', top + 'px').css('margin-top', '-' + (height + shadowHeight) + 'px').css('visibility', 'visible');\r\n                            j++;\r\n                        }\r\n                    };\r\n\r\n                    $timeout(function () {\r\n                        layoutMessages();\r\n                    });\r\n\r\n                    if (args.duration > 0) {\r\n                        $timeout(function () {\r\n                            scope.$close();\r\n                        }, args.duration);\r\n                    }\r\n\r\n                }).error(function (data) {\r\n                    throw new Error('Template specified for ngNotify (' + args.templateUrl + ') could not be loaded. ' + data);\r\n                });\r\n\r\n                var retVal = {};\r\n\r\n                retVal.close = function () {\r\n                    if (scope.$close) {\r\n                        scope.$close();\r\n                    }\r\n                };\r\n\r\n                Object.defineProperty(retVal, 'message', {\r\n                    get: function () {\r\n                        return scope.$message;\r\n                    },\r\n                    set: function (val) {\r\n                        scope.$message = val;\r\n                    }\r\n                });\r\n\r\n                openNotificationsScope.push(scope);\r\n\r\n                return retVal;\r\n\r\n            };\r\n\r\n            notify.config = function (args) {\r\n                startTop = !angular.isUndefined(args.startTop) ? args.startTop : startTop;\r\n                verticalSpacing = !angular.isUndefined(args.verticalSpacing) ? args.verticalSpacing : verticalSpacing;\r\n                defaultDuration = !angular.isUndefined(args.duration) ? args.duration : defaultDuration;\r\n                defaultTemplateUrl = args.templateUrl ? args.templateUrl : defaultTemplateUrl;\r\n                position = !angular.isUndefined(args.position) ? args.position : position;\r\n                container = args.container ? args.container : container;\r\n                maximumOpen = args.maximumOpen ? args.maximumOpen : maximumOpen;\r\n            };\r\n\r\n            notify.closeAll = function () {\r\n                for (var i = messageElements.length - 1; i >= 0; i--) {\r\n                    var element = messageElements[i];\r\n                    element.css('opacity', 0);\r\n                }\r\n            };\r\n\r\n            return notify;\r\n        }\r\n    ]);\r\n\r\n    mod.run(['$templateCache', function ($templateCache) {\r\n        'use strict';\r\n\r\n        $templateCache.put('angular-notify.html',\r\n            \"<div class=\\\"cg-notify-message\\\" ng-class=\\\"[$classes, \\n\" +\r\n            \"    $position === 'center' ? 'cg-notify-message-center' : '',\\n\" +\r\n            \"    $position === 'left' ? 'cg-notify-message-left' : '',\\n\" +\r\n            \"    $position === 'right' ? 'cg-notify-message-right' : '']\\\"\\n\" +\r\n            \"    ng-style=\\\"{'margin-left': $centerMargin}\\\">\\n\" +\r\n            \"\\n\" +\r\n            \"    <div ng-show=\\\"!$messageTemplate\\\">\\n\" +\r\n            \"        {{$message}}\\n\" +\r\n            \"    </div>\\n\" +\r\n            \"\\n\" +\r\n            \"    <div ng-show=\\\"$messageTemplate\\\" class=\\\"cg-notify-message-template\\\">\\n\" +\r\n            \"        \\n\" +\r\n            \"    </div>\\n\" +\r\n            \"\\n\" +\r\n            \"    <button type=\\\"button\\\" class=\\\"cg-notify-close\\\" ng-click=\\\"$close()\\\">\\n\" +\r\n            \"        <span aria-hidden=\\\"true\\\">&times;</span>\\n\" +\r\n            \"        <span class=\\\"cg-notify-sr-only\\\">Close</span>\\n\" +\r\n            \"    </button>\\n\" +\r\n            \"\\n\" +\r\n            \"</div>\"\r\n        );\r\n\r\n    }]);\r\n})(angular);\r\n\r\n","(function (angular) {\r\n    'use strict';\r\n    var mod = obsidian.module('ngFirebase', []);\r\n\r\n    mod.directive('ngFirebase', ['$firebase', function ($firebase) {\r\n        return {\r\n            restrict: 'A',\r\n            transclude: true,\r\n            scope: {\r\n                ngFirebase: '@',\r\n                loading: '@'\r\n            },\r\n            link: function (scope, element, attrs, ctrl, transcludeFn) {\r\n                function init() {\r\n                    var obj = $firebase.$object(scope.ngFirebase);\r\n                    element.append(scope.loading);\r\n                    obj.$loaded(appendTransclude, appendTransclude);\r\n\r\n                    var valueAs = attrs.valueAs || '$value',\r\n                        errorAs = attrs.errorAs || '$error';\r\n\r\n                    function appendTransclude(dataOrError) {\r\n                        element.empty();\r\n                        transcludeFn(function (clone, trclScope) {\r\n                            element.append(clone);\r\n                            if (dataOrError === obj) {\r\n                                if (attrs.pure) {\r\n                                    var pureValue = {};\r\n                                    angular.forEach(dataOrError, function (subValue, key) {\r\n                                        pureValue[key] = subValue\r\n                                    });\r\n                                    trclScope[valueAs] = dataOrError.$value ? dataOrError.$value : pureValue;\r\n                                } else {\r\n                                    trclScope[valueAs] = dataOrError.$value ? dataOrError.$value : dataOrError;\r\n                                }\r\n                                trclScope.$firebaseObject = dataOrError;\r\n                                trclScope.$eval(attrs.loaded);\r\n                            } else {\r\n                                trclScope[errorAs] = dataOrError;\r\n                                obj.$destroy();\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n\r\n                scope.$watch('ngFirebase', function () {\r\n                    if ($firebase.isRefUrlValid(scope.ngFirebase)) init();\r\n                });\r\n            }\r\n\r\n        };\r\n    }]);\r\n})(angular);\r\n\r\n","/*!\r\n * angular-ui-mask\r\n * https://github.com/angular-ui/ui-mask\r\n * Version: 1.4.3 - 2015-08-26T07:27:36.805Z\r\n * License: MIT\r\n */\r\n\r\n!function(){\"use strict\";angular.module(\"ui.mask\",[]).value(\"uiMaskConfig\",{maskDefinitions:{9:/\\d/,A:/[a-zA-Z]/,\"*\":/[a-zA-Z0-9]/},clearOnBlur:!0,eventsToHandle:[\"input\",\"keyup\",\"click\",\"focus\"]}).directive(\"uiMask\",[\"uiMaskConfig\",\"$parse\",function(e,n){function t(e){return e===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(e.type||e.href||~e.tabIndex)}return{priority:100,require:\"ngModel\",restrict:\"A\",compile:function(){var r=e;return function(e,i,u,a){function o(e){return angular.isDefined(e)?(y(e),F?(d(),h(),!0):f()):f()}function l(e){e&&(R=e,F&&i.val(m(v(i.val()))))}function s(e){return F?(j=v(e||\"\"),z=p(j),a.$setValidity(\"mask\",z),z&&j.length?m(j):void 0):e}function c(e){return F?(j=v(e||\"\"),z=p(j),a.$viewValue=j.length?m(j):\"\",a.$setValidity(\"mask\",z),\"\"===j&&u.required&&a.$setValidity(\"required\",!a.$error.required),z?j:void 0):e}function f(){return F=!1,g(),angular.isDefined(K)?i.attr(\"placeholder\",K):i.removeAttr(\"placeholder\"),angular.isDefined(N)?i.attr(\"maxlength\",N):i.removeAttr(\"maxlength\"),i.val(a.$modelValue),a.$viewValue=a.$modelValue,!1}function d(){j=Z=v(a.$modelValue||\"\"),q=H=m(j),z=p(j),u.maxlength&&i.attr(\"maxlength\",2*E[E.length-1]),K||i.attr(\"placeholder\",R);for(var e=a.$modelValue,n=a.$formatters.length;n--;)e=a.$formatters[n](e);a.$viewValue=e||\"\",a.$render()}function h(){I||(i.bind(\"blur\",k),i.bind(\"mousedown mouseup\",x),i.bind(W.eventsToHandle.join(\" \"),M),i.bind(\"paste\",w),I=!0)}function g(){I&&(i.unbind(\"blur\",k),i.unbind(\"mousedown\",x),i.unbind(\"mouseup\",x),i.unbind(\"input\",M),i.unbind(\"keyup\",M),i.unbind(\"click\",M),i.unbind(\"focus\",M),i.unbind(\"paste\",w),I=!1)}function p(e){return e.length?e.length>=T:!0}function v(e){var n=\"\",t=_.slice();return e=e.toString(),angular.forEach(P,function(n){e=e.replace(n,\"\")}),angular.forEach(e.split(\"\"),function(e){t.length&&t[0].test(e)&&(n+=e,t.shift())}),n}function m(e){var n=\"\",t=E.slice();return angular.forEach(R.split(\"\"),function(r,i){e.length&&i===t[0]?(n+=e.charAt(0)||\"_\",e=e.substr(1),t.shift()):n+=r}),n}function b(e){var n=angular.isDefined(u.uiMaskPlaceholder)?u.uiMaskPlaceholder:u.placeholder;return\"undefined\"!=typeof n&&n[e]?n[e]:\"_\"}function $(){return R.replace(/[_]+/g,\"_\").replace(/([^_]+)([a-zA-Z0-9])([^_])/g,\"$1$2_$3\").split(\"_\")}function y(e){var n=0;if(E=[],_=[],R=\"\",\"string\"==typeof e){T=0;var t=!1,r=0,i=e.split(\"\");angular.forEach(i,function(e,i){W.maskDefinitions[e]?(E.push(n),R+=b(i-r),_.push(W.maskDefinitions[e]),n++,t||T++):\"?\"===e?(t=!0,r++):(R+=e,n++)})}E.push(E.slice().pop()+1),P=$(),F=E.length>1?!0:!1}function k(){W.clearOnBlur&&(B=0,C=0,z&&0!==j.length||(q=\"\",i.val(\"\"),e.$apply(function(){a.$setViewValue(\"\")})))}function x(e){\"mousedown\"===e.type?i.bind(\"mouseout\",V):i.unbind(\"mouseout\",V)}function V(){C=D(this),i.unbind(\"mouseout\",V)}function w(){S(this,i.val().length)}function M(e){e=e||{};var n=e.which,t=e.type;if(16!==n&&91!==n){var r,u=i.val(),o=H,l=v(u),s=Z,c=A(this)||0,f=B||0,d=c-f,h=E[0],g=E[l.length]||E.slice().shift(),p=C||0,b=D(this)>0,$=p>0,y=u.length>o.length||p&&u.length>o.length-p,k=u.length<o.length||p&&u.length===o.length-p,x=n>=37&&40>=n&&e.shiftKey,V=37===n,w=8===n||\"keyup\"!==t&&k&&-1===d,M=46===n||\"keyup\"!==t&&k&&0===d&&!$,_=(V||w||\"click\"===t)&&c>h;if(C=D(this),!x&&(!b||\"click\"!==t&&\"keyup\"!==t)){if(\"input\"===t&&k&&!$&&l===s){for(;w&&c>h&&!O(c);)c--;for(;M&&g>c&&-1===E.indexOf(c);)c++;var R=E.indexOf(c);l=l.substring(0,R)+l.substring(R+1)}for(r=m(l),H=r,Z=l,i.val(r),a.$setViewValue(l),y&&h>=c&&(c=h+1),_&&c--,c=c>g?g:h>c?h:c;!O(c)&&c>h&&g>c;)c+=_?-1:1;(_&&g>c||y&&!O(f))&&c++,B=c,S(this,c)}}}function O(e){return E.indexOf(e)>-1}function A(e){if(!e)return 0;if(void 0!==e.selectionStart)return e.selectionStart;if(document.selection&&t(i[0])){e.focus();var n=document.selection.createRange();return n.moveStart(\"character\",e.value?-e.value.length:0),n.text.length}return 0}function S(e,n){if(!e)return 0;if(0!==e.offsetWidth&&0!==e.offsetHeight)if(e.setSelectionRange)t(i[0])&&(e.focus(),e.setSelectionRange(n,n));else if(e.createTextRange){var r=e.createTextRange();r.collapse(!0),r.moveEnd(\"character\",n),r.moveStart(\"character\",n),r.select()}}function D(e){return e?void 0!==e.selectionStart?e.selectionEnd-e.selectionStart:document.selection?document.selection.createRange().text.length:0:0}var E,_,R,P,T,j,q,z,H,Z,B,C,F=!1,I=!1,K=u.placeholder,N=u.maxlength,W={};u.uiOptions?(W=e.$eval(\"[\"+u.uiOptions+\"]\"),angular.isObject(W[0])&&(W=function(e,n){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(void 0===n[t]?n[t]=angular.copy(e[t]):angular.extend(n[t],e[t]));return n}(r,W[0]))):W=r,u.$observe(\"uiMask\",o),angular.isDefined(u.uiMaskPlaceholder)?u.$observe(\"uiMaskPlaceholder\",l):u.$observe(\"placeholder\",l);var G=!1;u.$observe(\"modelViewValue\",function(e){\"true\"===e&&(G=!0)}),e.$watch(u.ngModel,function(t){if(G&&t){var r=n(u.ngModel);r.assign(e,a.$viewValue)}}),a.$formatters.push(s),a.$parsers.push(c),i.bind(\"mousedown mouseup\",x),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(null===this)throw new TypeError;var n=Object(this),t=n.length>>>0;if(0===t)return-1;var r=0;if(arguments.length>1&&(r=Number(arguments[1]),r!==r?r=0:0!==r&&r!==1/0&&r!==-(1/0)&&(r=(r>0||-1)*Math.floor(Math.abs(r)))),r>=t)return-1;for(var i=r>=0?r:Math.max(t-Math.abs(r),0);t>i;i++)if(i in n&&n[i]===e)return i;return-1})}}}}])}();","(function (angular) {\r\n\r\n    var sharedScopeDefinition;\r\n\r\n    sharedScopeDefinition = {\r\n        handler: '&customHandler'\r\n    };\r\n\r\n    angular.module('socialLinks', [])\r\n        .factory('socialLinker', [\r\n            '$window', '$location', function ($window, $location) {\r\n                return function (urlFactory) {\r\n                    return function (scope, element, attrs) {\r\n                        var getCurrentUrl, handler, popupWinAttrs;\r\n                        popupWinAttrs = \"status=no, width=\" + (scope.socialWidth || 640) + \", height=\" + (scope.socialWidth || 480) + \", resizable=yes, toolbar=no, menubar=no, scrollbars=no, location=no, directories=no\";\r\n                        getCurrentUrl = function () {\r\n                            return attrs.customUrl || $location.absUrl();\r\n                        };\r\n                        attrs.$observe('customUrl', function () {\r\n                            var url;\r\n                            url = urlFactory(scope, getCurrentUrl());\r\n                            if (element[0].nodeName === 'A' && ((attrs.href == null) || attrs.href === '')) {\r\n                                return element.attr('href', url);\r\n                            }\r\n                        });\r\n                        element.attr('rel', 'nofollow');\r\n                        handler = function (e) {\r\n                            var url, win;\r\n                            e.preventDefault();\r\n                            url = urlFactory(scope, getCurrentUrl());\r\n                            return win = $window.open(url, 'popupwindow', popupWinAttrs).focus();\r\n                        };\r\n                        if (attrs.customHandler != null) {\r\n                            element.on('click', handler = function (event) {\r\n                                var url;\r\n                                url = urlFactory(scope, getCurrentUrl());\r\n                                element.attr('href', url);\r\n                                return scope.handler({\r\n                                    $event: event,\r\n                                    $url: url\r\n                                });\r\n                            });\r\n                        } else {\r\n                            element.on('click', handler);\r\n                        }\r\n                        return scope.$on('$destroy', function () {\r\n                            return element.off('click', handler);\r\n                        });\r\n                    };\r\n                };\r\n            }\r\n        ]).directive('socialFacebook', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        var shareUrl;\r\n                        shareUrl = [\"https://facebook.com/sharer.php?\"];\r\n                        shareUrl.push(\"u=\" + (encodeURIComponent(url)));\r\n                        return shareUrl.join('');\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialTwitter', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: angular.extend({\r\n                        status: '@status'\r\n                    }, sharedScopeDefinition),\r\n                    link: linker(function (scope, url) {\r\n                        scope.status || (scope.status = \"Check this out! - \" + url);\r\n                        return \"https://twitter.com/intent/tweet?text=\" + (encodeURIComponent(scope.status));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialGplus', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://plus.google.com/share?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialPinterest', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: angular.extend({\r\n                        media: '@media',\r\n                        description: '@description'\r\n                    }, sharedScopeDefinition),\r\n                    link: linker(function (scope, url) {\r\n                        return \"http://pinterest.com/pin/create/button/?url=\" + (encodeURIComponent(url)) + \"&amp;media=\" + (encodeURIComponent(scope.media)) + \"&amp;description=\" + (encodeURIComponent(scope.description));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialStumbleupon', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://stumbleupon.com/submit?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialLinkedin', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://linkedin.com/shareArticle?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialReddit', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://www.reddit.com/submit?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialVk', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"http://vkontakte.ru/share.php?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialOk', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"http://www.odnoklassniki.ru/dk?st.cmd=addShare&st._surl=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialXing', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://www.xing.com/spi/shares/new?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]);\r\n})(angular);\r\n","/*! this module is modified from angular-ui-scrollpoint\r\n * see  https://github.com/angular-ui/ui-scrollpoint\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n    /**\r\n     * Adds a 'ui-scrollpoint' class to the element when the page scrolls past it's position.\r\n     * @param [offset] {int} optional Y-offset to override the detected offset.\r\n     *   Takes 300 (absolute) or -300 or +300 (relative to detected)\r\n     */\r\n    angular.module('ui.scrollpoint', [])\r\n        .directive('uiScrollpoint', ['$window', function ($window) {\r\n\r\n            function getWindowScrollTop() {\r\n                if (angular.isDefined($window.pageYOffset)) {\r\n                    return $window.pageYOffset;\r\n                } else {\r\n                    var iebody = (document.compatMode && document.compatMode !== 'BackCompat') ? document.documentElement : document.body;\r\n                    return iebody.scrollTop;\r\n                }\r\n            }\r\n\r\n\r\n            return {\r\n                require: '^?uiScrollpointTarget',\r\n                link: function (scope, elm, attrs, uiScrollpointTarget) {\r\n                    var absolute = true,\r\n                        shift = 0,\r\n                        fixLimit,\r\n                        $target = uiScrollpointTarget && uiScrollpointTarget.$element || angular.element($window);\r\n\r\n                    if (!attrs.uiScrollpoint) {\r\n                        absolute = false;\r\n                    } else if (typeof (attrs.uiScrollpoint) === 'string') {\r\n                        // charAt is generally faster than indexOf: http://jsperf.com/indexof-vs-charat\r\n                        if (attrs.uiScrollpoint.charAt(0) === '-') {\r\n                            absolute = false;\r\n                            shift = -parseFloat(attrs.uiScrollpoint.substr(1));\r\n                        } else if (attrs.uiScrollpoint.charAt(0) === '+') {\r\n                            absolute = false;\r\n                            shift = parseFloat(attrs.uiScrollpoint.substr(1));\r\n                        }\r\n                    }\r\n\r\n                    fixLimit = absolute ? attrs.uiScrollpoint : elm[0].offsetTop + shift;\r\n\r\n                    function onScroll() {\r\n\r\n                        var limit = absolute ? attrs.uiScrollpoint : elm[0].offsetTop + shift;\r\n\r\n                        // if pageYOffset is defined use it, otherwise use other crap for IE\r\n                        var offset = uiScrollpointTarget ? $target[0].scrollTop : getWindowScrollTop();\r\n\r\n                        if (!elm.hasClass('ui-scrollpoint') && offset > limit) {\r\n                            elm.addClass('ui-scrollpoint');\r\n                            if (attrs.scrollpointGroup) {\r\n                                var group = attrs.scrollpointGroup.split(' ');\r\n                                for (var key in group) {\r\n                                    angular.element(document.getElementById(group[key])).addClass('ui-scrollpoint');\r\n                                }\r\n                            }\r\n                            fixLimit = limit;\r\n                        } else if (elm.hasClass('ui-scrollpoint') && offset < fixLimit) {\r\n                            elm.removeClass('ui-scrollpoint');\r\n                            if (attrs.scrollpointGroup) {\r\n                                var group = attrs.scrollpointGroup.split(' ');\r\n                                for (var key in group) {\r\n                                    angular.element(document.getElementById(group[key])).removeClass('ui-scrollpoint');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    $target.on('scroll', onScroll);\r\n                    onScroll(); // sets the initial state\r\n\r\n                    // Unbind scroll event handler when directive is removed\r\n                    scope.$on('$destroy', function () {\r\n                        $target.off('scroll', onScroll);\r\n                    });\r\n                }\r\n            };\r\n        }]).directive('uiScrollpointTarget', [function () {\r\n            return {\r\n                controller: ['$element', function ($element) {\r\n                    this.$element = $element;\r\n                }]\r\n            };\r\n        }]);\r\n\r\n}());\r\n","(function () {\r\n    obsidian.module('core.model', ['firebase'])\r\n        .factory('model', /*@ngInject*/ function (config, fbutil, $q, snippet) {\r\n            var model = {\r\n                update: update,\r\n                ModelObj: ModelObj,\r\n                init: init,\r\n                action: {},\r\n                view: {}\r\n            };\r\n\r\n            function ModelObj(modelPath) {\r\n                this.modelPathArr = modelPath.split(\"|\");\r\n                this.pathArr = this.modelPathArr[0].split(\".\");\r\n                /*this.val=function(){\r\n                 var value={},\r\n                 modelPath=\"\";\r\n\r\n                 for(var j=0; j<that.pathArr.length; j++){\r\n                 modelPath=modelPath+\"['\"+that.pathArr[j]+\"']\"\r\n                 }\r\n                 for(var i=1; i<that.modelPathArr.length; i++){\r\n                 value[that.modelPathArr[i]]=eval(\"model\"+modelPath)[that.modelPathArr[i]];\r\n                 }\r\n\r\n                 if(JSON.stringify(value)===\"{}\"){\r\n                 eval(\"value=model\"+modelPath)\r\n                 }\r\n\r\n                 return value\r\n                 }*/\r\n            }\r\n\r\n            ModelObj.prototype = {\r\n                val: function () {\r\n                    var value = {},\r\n                        modelPath = \"\";\r\n\r\n                    for (var j = 0; j < this.pathArr.length; j++) {\r\n                        modelPath = modelPath + \"['\" + this.pathArr[j] + \"']\"\r\n                    }\r\n                    for (var i = 1; i < this.modelPathArr.length; i++) {\r\n                        value[this.modelPathArr[i]] = eval(\"model\" + modelPath)[this.modelPathArr[i]];\r\n                    }\r\n\r\n                    if (JSON.stringify(value) === \"{}\") {\r\n                        eval(\"value=model\" + modelPath)\r\n                    }\r\n                    return value\r\n                }\r\n            };\r\n\r\n            function init(scope, keyArrOrStr, refresh) {\r\n                if (typeof keyArrOrStr === 'string') {\r\n                    model[keyArrOrStr] = refresh ? {} : model[keyArrOrStr] || {};\r\n                    scope[keyArrOrStr] = model[keyArrOrStr];\r\n                    return\r\n                }\r\n                for (var i = 0; i < keyArrOrStr.length; i++) {\r\n                    model[keyArrOrStr[i]] = refresh ? {} : model[keyArrOrStr[i]] || {};\r\n                    scope[keyArrOrStr[i]] = model[keyArrOrStr[i]]\r\n                }\r\n            }\r\n\r\n            function update(path, value, valuePathArr) {\r\n                var pathArr = path.split(\".\");\r\n                if (valuePathArr != undefined) {\r\n                    snippet.evalAssignment([model, pathArr], valuePathArr);\r\n                } else {\r\n                    snippet.evalAssignment([model, pathArr], [value]);\r\n                }\r\n                //updateView(path)\r\n            }\r\n\r\n            return model\r\n        })\r\n        .factory('$stateData', /*@ngInject*/ function (model) {\r\n            var o = {\r\n                get data() {\r\n                    var cache = model._stateTransitionCache;\r\n                    delete model._stateTransitionCache;\r\n                    return cache;\r\n                }\r\n            };\r\n            return o.data\r\n        })\r\n        .run(/*@ngInject*/ function ($state, model, $rootScope) {\r\n            var activeStates = {};\r\n            $state.goWithData = function (to, params, data, options) {\r\n                var clear = $rootScope.$on('$stateChangeStart', function () {\r\n                    clear();\r\n                    activeStates[$state.href(to, params)] = {data: data};\r\n                    var clearAgain = $rootScope.$on('$stateChangeStart', function () {\r\n                        clearAgain();\r\n                        delete activeStates[$state.href(to, params)]\r\n                    })\r\n                });\r\n                return $state.go(to, params, options);\r\n            };\r\n\r\n            //define a getter so that user can retrieve data by using $state.data\r\n            Object.defineProperty($state, \"data\", {\r\n                get: function () {\r\n                    var state = activeStates[$state.href($state.current.name, $state.params)] || {};\r\n                    return state.data\r\n                }\r\n            });\r\n\r\n\r\n        });\r\n})();\r\n\r\n","(function () {\r\n    obsidian.module('core.snippet', ['firebase'])\r\n        .factory('snippet', ['config', '$q', '$filter', function (config, $q, $filter) {\r\n            function isArray(someVar) {\r\n                return Object.prototype.toString.call(someVar) === '[object Array]'\r\n            }\r\n\r\n            function randomString(length) {\r\n                var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\r\n\r\n                if (!length) {\r\n                    length = Math.floor(Math.random() * chars.length);\r\n                }\r\n\r\n                var str = '';\r\n                for (var i = 0; i < length; i++) {\r\n                    str += chars[Math.floor(Math.random() * chars.length)];\r\n                }\r\n                return str;\r\n            }\r\n\r\n            function replaceParamsInString(string, params) {\r\n                for (var param in params) {\r\n                    if (params.hasOwnProperty(param)) string = string.replace(eval(\"/\\\\\" + param + \"/g\"), params[param]);\r\n                }\r\n                return string\r\n            }\r\n\r\n            function replaceParamsInObj(obj, params) {\r\n                var objString = JSON.stringify(obj);\r\n                objString = replaceParamsInString(objString, params);\r\n\r\n                var replacedObj = JSON.parse(objString);\r\n\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key) && (typeof obj[key] === 'function')) {\r\n                        var paramReplacedKey = replaceParamsInString(key, params);\r\n                        replacedObj[paramReplacedKey] = obj[key]\r\n                    }\r\n                }\r\n\r\n                return replacedObj\r\n            }\r\n\r\n            function evalAssignment(lhsArr, rhsArr) {\r\n\r\n                var lhsPath = \"\",\r\n                    lhs = lhsArr[0];\r\n\r\n                if (Object.prototype.toString.call(rhsArr) === '[object Array]') {\r\n                    var rhs = rhsArr[0];\r\n                }\r\n\r\n                function toPathArr(strOrArr) {\r\n                    return (typeof strOrArr === 'string') ? strOrArr.split('.') : strOrArr\r\n                }\r\n\r\n                if (lhsArr[1] != undefined) {\r\n                    var lhsPathArr = toPathArr(lhsArr[1]);\r\n\r\n                    for (var i = 0; i < lhsPathArr.length; i++) {\r\n                        lhsPath = lhsPath + \"['\" + lhsPathArr[i] + \"']\";\r\n                        if ((i + 1 < lhsPathArr.length) && typeof lhs[lhsPathArr[i]] != \"object\") {\r\n                            eval(\"lhsArr[0]\" + lhsPath + \"={}\")\r\n                        } else {\r\n                            lhs = lhs[lhsPathArr[i]];\r\n                        }\r\n                    }\r\n                }\r\n                if (!rhsArr) return eval(\"lhsArr[0]\" + lhsPath);\r\n                if (typeof rhsArr === 'function') {\r\n                    eval(\"rhs=rhsArr(lhsArr[0]\" + lhsPath + \")\");\r\n                } else {\r\n                    if (rhsArr[1] != undefined) {\r\n                        var rhsPathArr = toPathArr(rhsArr[1]);\r\n                        for (var j = 0; j < rhsPathArr.length; j++) {\r\n                            if (rhs[rhsPathArr[j]] === undefined) {\r\n                                rhs = undefined;\r\n                                break;\r\n                            }\r\n                            rhs = rhs[rhsPathArr[j]];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                eval(\"lhsArr[0]\" + lhsPath + \"=rhs\");\r\n\r\n\r\n                //console.log(lhsArr[0]); TODO:reomove debug code here\r\n                //console.log(\"lhsArr[0]\"+lhsPath+\"=\"+rhs);\r\n                //console.log(eval(\"lhsArr[0]\"+lhsPath));\r\n\r\n            }\r\n\r\n            //see https://github.com/hughsk/flat\r\n            function flatten(target, opts) {\r\n                opts = opts || {};\r\n\r\n                var delimiter = opts.delimiter || '.';\r\n                var maxDepth = opts.maxDepth;\r\n                var currentDepth = 1;\r\n                var output = {};\r\n\r\n                function step(object, prev) {\r\n                    Object.keys(object).forEach(function (key) {\r\n                        var value = object[key];\r\n                        var isarray = opts.safe && Array.isArray(value);\r\n                        var type = Object.prototype.toString.call(value);\r\n                        var isbuffer = false;\r\n                        var isobject = (\r\n                            type === \"[object Object]\" ||\r\n                            type === \"[object Array]\"\r\n                        );\r\n\r\n                        var newKey = prev\r\n                            ? prev + delimiter + key\r\n                            : key;\r\n\r\n                        if (!opts.maxDepth) {\r\n                            maxDepth = currentDepth + 1;\r\n                        }\r\n\r\n                        if (!isarray && !isbuffer && isobject && Object.keys(value).length && currentDepth < maxDepth) {\r\n                            ++currentDepth;\r\n                            return step(value, newKey)\r\n                        }\r\n\r\n                        output[newKey] = value\r\n                    })\r\n                }\r\n\r\n                step(target);\r\n\r\n                return output\r\n            }\r\n\r\n            function unflatten(target, opts) {\r\n                opts = opts || {};\r\n\r\n                var delimiter = opts.delimiter || '.';\r\n                var overwrite = opts.overwrite || false;\r\n                var result = {};\r\n\r\n                var isbuffer = false;\r\n                if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {\r\n                    return target\r\n                }\r\n\r\n                // safely ensure that the key is\r\n                // an integer.\r\n                function getkey(key) {\r\n                    var parsedKey = Number(key);\r\n\r\n                    return (\r\n                        isNaN(parsedKey) ||\r\n                        key.indexOf('.') !== -1\r\n                    ) ? key\r\n                        : parsedKey\r\n                }\r\n\r\n                Object.keys(target).forEach(function (key) {\r\n                    var split = key.split(delimiter);\r\n                    var key1 = getkey(split.shift());\r\n                    var key2 = getkey(split[0]);\r\n                    var recipient = result;\r\n\r\n                    while (key2 !== undefined) {\r\n                        var type = Object.prototype.toString.call(recipient[key1]);\r\n                        var isobject = (\r\n                            type === \"[object Object]\" ||\r\n                            type === \"[object Array]\"\r\n                        );\r\n\r\n                        if ((overwrite && !isobject) || (!overwrite && recipient[key1] === undefined)) {\r\n                            recipient[key1] = (\r\n                                typeof key2 === 'number' && !opts.object ? [] : {}\r\n                            )\r\n                        }\r\n\r\n                        recipient = recipient[key1];\r\n                        if (split.length > 0) {\r\n                            key1 = getkey(split.shift());\r\n                            key2 = getkey(split[0])\r\n                        }\r\n                    }\r\n\r\n                    // unflatten again for 'messy objects'\r\n                    recipient[key1] = unflatten(target[key], opts)\r\n                });\r\n\r\n                return result\r\n            }\r\n\r\n            function cloneObject(obj) {\r\n                // return angular.extend({},obj);\r\n                if (obj === null || typeof(obj) !== 'object' || 'isActiveClone' in obj) return obj;\r\n                var temp = obj.constructor(); // changed\r\n                for (var key in obj) {\r\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n                        obj['isActiveClone'] = null;\r\n                        temp[key] = cloneObject(obj[key]);\r\n                        delete obj['isActiveClone'];\r\n                    }\r\n                }\r\n                return temp;\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {object} rawDataObj - data that need to be shaped to fit the filter model.\r\n             * @param {object} filterModel - the structure of the returned value.\r\n             * @param {object} [opt] - options.\r\n             * @param {string} opt.paramHeader - if the key value inside the filter model start with this value, every corresponding key in raw data will be reserved.  (ex: $uid)\r\n             * @param {string} opt.useModelHeader - if the key value inside the filter model start with this value, the model data will be kept at this pos and the first character of the key will be removed\r\n             * @param {string} opt.escape - if the endpoint === opt.escape inside the filter model, this end point won't be processed (default='\"#\")\r\n             */\r\n            function filterRawData(rawDataObj, filterModel, opt) {\r\n                opt = opt || {};\r\n                if (typeof rawDataObj !== 'object' || typeof filterModel !== 'object') return rawDataObj === filterModel;\r\n                var res = isArray(rawDataObj) ? [] : {},\r\n                    fail = false;\r\n                iterate(rawDataObj, filterModel, res, 'none');\r\n                function isParam(key, opt) {\r\n                    var paramHeader = '$';\r\n                    if (typeof opt.paramHeader === 'string') paramHeader = opt.paramHeader;\r\n                    return key.charAt(0) === paramHeader;\r\n                }\r\n\r\n                function iterate(rawDataObj, filterModel, target, prevKey) {\r\n                    var useModelHeader = opt.useModelHeader || '_',\r\n                        escape = opt.escape || '#';\r\n\r\n                    if (useModelHeader && typeof filterModel === 'object' && typeof rawDataObj !== 'object') {\r\n                        console.log(prevKey);\r\n                        console.log(\"error: raw data doesn't fit the filter\", 'the key of the raw data is ' + prevKey);\r\n                        fail = true;\r\n                        return\r\n                    }\r\n\r\n                    function goDeeperOrStop(param, filterKey) {\r\n                        var nextLevelFilter = filterModel[param] || filterModel[filterKey];\r\n                        if (nextLevelFilter === escape) return;\r\n                        if (filterKey.charAt(0) === useModelHeader) {\r\n                            target[filterKey.slice(1)] = filterModel[filterKey];\r\n                        } else if (typeof nextLevelFilter !== 'object') {\r\n                            if (rawDataObj[param] === undefined && (opt.removeUndefined === undefined || opt.removeUndefined)) return;\r\n                            target[param] = cloneObject(rawDataObj[param])\r\n                        } else {\r\n                            target[param] = isArray(nextLevelFilter) ? [] : {};\r\n                            iterate(rawDataObj[param], nextLevelFilter, target[param], filterKey)\r\n                        }\r\n                    }\r\n\r\n                    if (typeof filterModel === 'object' && typeof rawDataObj === 'object') {\r\n                        for (var filterKey in filterModel) {\r\n                            if (isParam(filterKey, opt)) {\r\n                                for (var param in rawDataObj) {\r\n                                    goDeeperOrStop(param, filterKey);\r\n                                }\r\n                                break;\r\n                            } else {\r\n                                goDeeperOrStop(filterKey, filterKey)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return fail ? false : res\r\n            }\r\n\r\n            function createBatchUpdateValues(rawData, structure) {\r\n                var structureClone;\r\n                if (typeof structure !== 'object') {\r\n                    console.log('error: structure is not an object');\r\n                    return structure\r\n                }\r\n                structureClone = cloneObject(structure);\r\n\r\n                function iterate(obj) {\r\n                    for (var key in obj) {\r\n                        if (key === 'valueArr') {\r\n                            for (var i = 0; i < obj['valueArr'].length; i++) {\r\n                                var keyStr = obj['valueArr'][i];\r\n                                if (obj['value'] === undefined) obj['value'] = {};\r\n                                if (typeof keyStr === 'string') obj['value'][keyStr] = keyStr;\r\n                            }\r\n                            delete obj['valueArr'];\r\n                            continue;\r\n                        }\r\n                        if (obj.hasOwnProperty(key)) {\r\n                            if (typeof obj[key] === 'string') {\r\n                                if (rawData[obj[key]] === '') {\r\n                                    obj[key] = ''\r\n                                } else {\r\n                                    obj[key] = rawData[obj[key]] || obj[key];\r\n                                }\r\n                            } else if (typeof obj[key] === 'object') {\r\n                                iterate(obj[key])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                iterate(structureClone);\r\n                return structureClone\r\n            }\r\n\r\n            function checkIfPropertyExist(arr) {\r\n                var obj = arr[0],\r\n                    pathArr = arr[1],\r\n                    isExist = true;\r\n                for (var i = 0; i < pathArr.length; i++) {\r\n                    if (obj[pathArr[i]] === undefined || obj[pathArr[i]] === null) {\r\n                        isExist = false;\r\n                        break;\r\n                    }\r\n                    obj = obj[pathArr[i]]\r\n                }\r\n                return isExist\r\n            }\r\n\r\n            function WaitUntil(conditionNum, onComplete, context) {\r\n                var that = this;\r\n                this.satisfiedCondition = 0;\r\n                this.resolve = function () {\r\n                    that.satisfiedCondition++;\r\n                    if (that.satisfiedCondition === conditionNum) {\r\n                        onComplete.apply(context || null)\r\n                    }\r\n                };\r\n                if (conditionNum === 0) {\r\n                    onComplete.apply(context || null)\r\n                }\r\n            }\r\n\r\n            function firstPartOfEmail(email) {\r\n                return ucfirst(email.substr(0, email.indexOf('@')) || '');\r\n            }\r\n\r\n            function ucfirst(str) {\r\n                // inspired by: http://kevin.vanzonneveld.net\r\n                str += '';\r\n                var f = str.charAt(0).toUpperCase();\r\n                return f + str.substr(1);\r\n            }\r\n\r\n            function DelayExec(delay) {\r\n                this.delay = delay || 1000;\r\n            }\r\n\r\n            DelayExec.prototype = {\r\n                reset: function (onComplete, customDelay) {\r\n                    var that = this;\r\n                    if (this.timeout != undefined) clearTimeout(this.timeout);\r\n                    this.timeout = setTimeout(function () {\r\n                        onComplete.apply(null);\r\n                        that.timeout = undefined;\r\n                    }, customDelay || this.delay);\r\n                    this.onComplete = onComplete;\r\n                }\r\n            };\r\n\r\n            function DelayedFilter(scope, source, target, filter, isReverse, delayedTime) {\r\n                var delay = new DelayExec(delayedTime || 1000),\r\n                    that = this;\r\n\r\n                this.refresh = function () {\r\n                    delay.reset(function () {\r\n                        scope[filter] = scope[filter] ? scope[filter] : {};\r\n                        scope[target] = $filter('consecutive')(scope[source], scope[filter], isReverse);\r\n                        scope.$digest();\r\n                    })\r\n                };\r\n\r\n                scope.$watch(filter, function () {\r\n                    that.refresh();\r\n                });\r\n                scope.$watch(source, function () {\r\n                    that.refresh();\r\n                });\r\n            }\r\n\r\n            function isObjEmpty(obj) {\r\n                return !Object.getOwnPropertyNames(obj).length > 0\r\n            }\r\n\r\n\r\n            return {\r\n                DelayExec: DelayExec,\r\n                DelayedFilter: DelayedFilter,\r\n                flatten: flatten,\r\n                unflatten: unflatten,\r\n                isArray: isArray,\r\n                cloneObject: cloneObject,\r\n                evalAssignment: evalAssignment,\r\n                checkIfPropertyExist: checkIfPropertyExist,\r\n                WaitUntil: WaitUntil,\r\n                replaceParamsInObj: replaceParamsInObj,\r\n                replaceParamsInString: replaceParamsInString,\r\n                createBatchUpdateValues: createBatchUpdateValues,\r\n                filterRawData: filterRawData,\r\n                firstPartOfEmail: firstPartOfEmail,\r\n                ucfirst: ucfirst,\r\n                randomString: randomString,\r\n                isObjEmpty: isObjEmpty\r\n            }\r\n        }]);\r\n})();\r\n\r\n","(function () {\r\n    obsidian.module('core.$firebase', ['firebase'])\r\n        .factory('$firebase', /*@ngInject*/ function (FBURL, config, fbutil, $firebaseObject, $q, snippet) {\r\n            var $firebase = {\r\n                FbObj: FbObj,\r\n                update: update,\r\n                set: set,\r\n                batchUpdate: batchUpdate,\r\n                params: {},\r\n                databases: {},\r\n                ref: ref,\r\n                $communicate: $communicate,\r\n                $object: $object,\r\n                getMultipleRefVal: getMultipleRefVal,\r\n                isRefUrlValid: isRefUrlValid,\r\n                move: move,\r\n                load: load\r\n            };\r\n\r\n            var activeRefUrl = {};\r\n\r\n            function FbObj(refUrl, opt) {\r\n                var _opt = opt || {},\r\n                    _refUrl = refUrl || '',\r\n                    db = $firebase.databases[_refUrl.split(\"@\")[1]] || {};\r\n\r\n                function isDbOnline() {\r\n                    if (_opt.keepOnline !== undefined) return !!_opt.keepOnline;\r\n                    if (db.keepOnline !== undefined) return !!db.keepOnline;\r\n                    return true\r\n                }\r\n\r\n                this.dbName = db.Name || FBURL.split(\"//\")[1].split(\".fi\")[0];\r\n                this.dbUrl = \"https://\" + this.dbName + \".firebaseio.com\";\r\n                this.path = _refUrl.split(\"@\")[0];\r\n                this.url = this.dbUrl + \"/\" + this.path;\r\n                this.t = (new Date).getTime().toString();\r\n                this.params = _opt.params || {};\r\n                this.keepOnline = isDbOnline();\r\n            }\r\n\r\n            FbObj.prototype = {\r\n                ref: function () {\r\n                    var ref = new Firebase(this.dbUrl);\r\n                    if (this.path === '') return ref;\r\n                    var pathArr = this.path.split(\"/\");\r\n                    for (var i = 0; i < pathArr.length; i++) {\r\n                        if (pathArr[i].charAt(0) === \"$\") {\r\n                            ref = ref.push();\r\n                            this.params[pathArr[i]] = ref.key();\r\n                        } else {\r\n                            ref = ref.child(pathArr[i]);\r\n                        }\r\n                    }\r\n                    this.url = ref.toString();\r\n                    this.path = this.url.split(\".com/\")[1];\r\n                    return ref\r\n                },\r\n                goOnline: function () {\r\n                    if (activeRefUrl[this.dbUrl] === undefined) {\r\n                        activeRefUrl[this.dbUrl] = []\r\n                    }\r\n                    if (activeRefUrl[this.dbUrl].length === 0) {\r\n                        if (!this.keepOnline) {\r\n                            Firebase.goOnline(this.dbUrl);\r\n                            console.log(this.dbUrl, \"is online\", this.t)\r\n                        }\r\n                    }\r\n                    activeRefUrl[this.dbUrl].push(this.t);\r\n                    return this\r\n                },\r\n                goOffline: function () {\r\n                    if (this.keepOnline) return this;\r\n                    if (activeRefUrl[this.dbUrl] === undefined) {\r\n                        activeRefUrl[this.dbUrl] = []\r\n                    }\r\n                    if (activeRefUrl[this.dbUrl].length === 1) {\r\n                        if (!this.keepOnline) {\r\n                            Firebase.goOffline(this.dbUrl);\r\n                            console.log(this.dbUrl, \"is offline\", this.t)\r\n                        }\r\n                    }\r\n                    var tPos = activeRefUrl[this.dbUrl].indexOf(this.t);\r\n                    if (tPos != -1) {\r\n                        activeRefUrl[this.dbUrl].splice(tPos, 1);\r\n                    }\r\n                    return this\r\n                }\r\n            };\r\n\r\n            function ref(refUrl, opt) {\r\n                var fbObj = new FbObj(refUrl, opt);\r\n                return fbObj.ref()\r\n            }\r\n\r\n            function queryRef(refUrl, options) {\r\n                var opt = options || {},\r\n                    ref = $firebase.ref(refUrl);\r\n                if (opt.orderBy) {\r\n                    var orderBy = 'orderBy' + opt.orderBy.split(':')[0];\r\n                    if (orderBy === 'orderByChild') {\r\n                        ref = ref[orderBy](opt.orderBy.split(':')[1]); //ex {orderBy:'Child:name'}\r\n                    } else {\r\n                        ref = ref[orderBy]();\r\n                    }\r\n\r\n                } else {\r\n                    return ref\r\n                }\r\n                if (opt.startAt) {\r\n                    ref = ref['startAt'](opt.startAt);\r\n                }\r\n                if (opt.endAt) {\r\n                    ref = ref['endAt'](opt.endAt);\r\n                }\r\n                if (opt.equalTo) {\r\n                    ref = ref['equalTo'](opt.equalTo);\r\n                }\r\n                if (opt.limitToFirst) {\r\n                    ref = ref['limitToFirst'](opt.limitToFirst);\r\n                }\r\n                if (opt.limitToLast) {\r\n                    ref = ref['limitToLast'](opt.limitToLast);\r\n                }\r\n                return ref;\r\n            }\r\n\r\n            var objectRepo = {};\r\n\r\n            function $object(refUrl) {\r\n                if (objectRepo[refUrl]) {\r\n                    return objectRepo[refUrl]\r\n                } else {\r\n                    objectRepo[refUrl] = $firebaseObject(ref(refUrl));\r\n                    return objectRepo[refUrl]\r\n                }\r\n            }\r\n\r\n            function isRefUrlValid(refUrl) {\r\n                return (typeof refUrl === 'string') && (refUrl.split('/').indexOf('') === -1)\r\n            }\r\n\r\n            //TODO:用$q改寫\r\n            function Digest(scope, fbObj, isSync, delay) {\r\n                var timeout;\r\n                this.reset = function (callback, customDelay) {\r\n                    if (timeout != undefined) clearTimeout(timeout);\r\n                    timeout = setTimeout(function () {\r\n                        if (callback) callback.apply(null);\r\n                        if (!isSync) fbObj.goOffline();\r\n                        if (scope) scope.$digest();\r\n                    }, customDelay || delay);\r\n                }\r\n            }\r\n\r\n            function load(loadList, defaultOpt) {\r\n                var _defaultOpt = (typeof defaultOpt === 'object') ? defaultOpt : {},\r\n                    defers = {},\r\n                    promises = {};\r\n\r\n                function onComplete(key) {\r\n                    return function (snap) {\r\n                        defers[key].resolve(snap.val())\r\n                    }\r\n                }\r\n\r\n                for (var key in loadList) {\r\n                    if (loadList.hasOwnProperty(key)) {\r\n                        defers[key] = $q.defer();\r\n                        promises[key] = defers[key].promise;\r\n                        var loadObj = loadList[key],\r\n                            ref = queryRef(loadObj.refUrl, loadObj.opt || _defaultOpt);\r\n\r\n                        ref.once('value', onComplete(key))\r\n                    }\r\n                }\r\n                return $q.all(promises)\r\n            }\r\n\r\n            function update(refUrl, value, onComplete, removePrev, refUrlParams) {\r\n                var def = $q.defer();\r\n                var replacedRefUrl = snippet.replaceParamsInString(refUrl, refUrlParams);\r\n                var fbObj = new FbObj(replacedRefUrl), ref = fbObj.ref(), type = removePrev ? 'set' : 'update';\r\n\r\n                //將因push而自動生成的key值放到value內相對應的property中\r\n                var params = angular.extend({}, refUrlParams, fbObj.params);\r\n                //console.log(JSON.stringify(params));\r\n                if (typeof value === 'object' && value != null) {\r\n                    for (var key in params) {\r\n                        var realKey = key.split('$')[1];\r\n                        if (value[realKey] === undefined) continue;\r\n                        value[realKey] = params[key];\r\n                    }\r\n                } else if (typeof value === 'string') {\r\n                    for (var key in params) {\r\n                        value.replace(key, params[key]);\r\n                    }\r\n                }\r\n\r\n                fbObj.goOnline();\r\n\r\n                ref[type](value, function (error) {\r\n                    if (onComplete) onComplete.apply(null, [error]);\r\n                    if (error) {\r\n                        console.log(\"Update failed: \" + refUrl);\r\n                        def.reject(error);\r\n                    } else {\r\n                        if (config.debug) {\r\n                            console.log(\"Update success: \" + refUrl)\r\n                        }\r\n                        def.resolve();\r\n                    }\r\n                    fbObj.goOffline();\r\n                });\r\n\r\n                def.promise.params = fbObj.params;\r\n\r\n                return def.promise\r\n            }\r\n\r\n            function set(refUrl, value, onComplete, refUrlParams) {\r\n                update(refUrl, value, onComplete, true, refUrlParams);\r\n            }\r\n\r\n//TODO: Transaction\r\n\r\n            function batchUpdate(values, isConsecutive) {\r\n                var def = $q.defer(),\r\n                    refUrlParams = angular.extend({}, $firebase.params),\r\n                    _isConsecutive = (isConsecutive || isConsecutive === undefined);\r\n\r\n                function update(i) {\r\n                    var params = $firebase.update(values[i].refUrl, values[i].value, onComplete(i), values[i].set, refUrlParams).params;\r\n                    refUrlParams = angular.extend(refUrlParams, params);\r\n                }\r\n\r\n                function onComplete(i) {\r\n\r\n                    function consecutive(error) {  //防止最後實際執行onComplete時使用的是跑完loop後的j的值\r\n                        var isLast = i === (values.length - 1);\r\n\r\n                        if (values[i] && values[i].onComplete) values[i].onComplete.apply(null, [error]);\r\n                        if (error) {\r\n                            def.reject(error);\r\n                        } else {\r\n                            if (isLast) {\r\n                                def.resolve({params: refUrlParams});\r\n                            } else {\r\n                                update(i + 1);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    function nonConsecutive(error) {\r\n                        if (values[i] && values[i].onComplete) values[i].onComplete.apply(null, [error]);\r\n                        if (error) {\r\n                            defers[i].reject(error)\r\n                        } else {\r\n                            defers[i].resolve();\r\n                        }\r\n                    }\r\n\r\n                    return _isConsecutive ? consecutive : nonConsecutive\r\n                }\r\n\r\n                if (_isConsecutive) {\r\n                    update(0);\r\n                } else {\r\n                    var defers = [],\r\n                        promises = [];\r\n                    for (var i = 0; i < values.length; i++) {\r\n                        defers[i] = $q.defer();\r\n                        promises[i] = defers[i].promise;\r\n                        update(i);\r\n                    }\r\n                    $q.all(promises).then(function () {\r\n                        def.resolve({params: refUrlParams})\r\n                    }, function (error) {\r\n                        def.reject(error);\r\n                    });\r\n                }\r\n\r\n                return def.promise\r\n            }\r\n\r\n            function move(from, to) {\r\n                var sourceRef = new Firebase(from),\r\n                    targetRef = new Firebase(to);\r\n                sourceRef.once('value', function (snap) {\r\n                    targetRef.update(snap.val());\r\n                })\r\n            }\r\n\r\n            function $transfer(from, to) {\r\n                var sourceRef = new Firebase(from.refUrl),\r\n                    targetRef = new Firebase(to.refUrl),\r\n                    def = $q.defer();\r\n                sourceRef.once('value', function (snap) {\r\n                    var value = from.modifier && (typeof modifier === 'function') ? from.modifier(snap.val()) : snap.val();\r\n                    targetRef.update(value, function (error) {\r\n                        if (error) {\r\n                            def.reject(error);\r\n                        } else {\r\n                            def.resolve();\r\n                        }\r\n                    });\r\n                })\r\n            }\r\n\r\n            function $communicate(opt) {\r\n                var res = {}, def = $q.defer();\r\n                if (typeof opt !== 'object') return;\r\n\r\n                batchUpdate(opt.request, true).then(function (resolveVal) {\r\n                    if (!opt.response) {\r\n                        def.resolve(resolveVal);\r\n                        return\r\n                    }\r\n                    angular.extend(res, resolveVal);\r\n                    var resUrlArr = snippet.replaceParamsInObj(opt.response, resolveVal.params);\r\n\r\n                    getResponse(resUrlArr).then(function (response) {\r\n                        angular.extend(res, response);\r\n                        def.resolve(res);\r\n                    }, function (error) {\r\n                        def.reject(error);\r\n                    })\r\n                }, function (error) {\r\n                    def.reject(error);\r\n                });\r\n                return def.promise\r\n            }\r\n\r\n            function getResponse(refs) {\r\n                var isRenew = {}, promises = {};\r\n\r\n                function onComplete(key, refUrl) {\r\n                    var def = $q.derfer();\r\n                    promises[key] = def.promise;\r\n\r\n                    var onSuccess = function (snap) {\r\n                        if (isRenew[key] === true) {\r\n                            def.resolve(snap.val());\r\n                            ref(refUrl).off();\r\n                        } else {\r\n                            isRenew[key] = true; //server hasn't change the data.\r\n                        }\r\n                    };\r\n                    var onError = function (err) {\r\n                        def.reject(err)\r\n                    };\r\n\r\n                    return [onSuccess, onError]\r\n                }\r\n\r\n                for (var key in refs) {\r\n                    if (refs.hasOwnProperty(key)) ref(refs[key]).on('value', onComplete(key, refs[key])[0], onComplete(key, refs[key])[1]);\r\n                }\r\n                return $q.all(promises);\r\n            }\r\n\r\n            function getMultipleRefVal(refs, opt) {\r\n                var _opt = opt ? opt : {};\r\n\r\n                var res = {},\r\n                    params = {},\r\n                    onComplete = {},\r\n                    onGoingRef = {},\r\n                    def = $q.defer(),\r\n                    refNum = Object.keys(refs).length,\r\n                    indicator = _opt.indicator || '&',\r\n                    currentRefs = angular.extend({}, refs),\r\n                    waitUntil = new snippet.WaitUntil(refNum, function () {\r\n                        def.resolve(res)\r\n                    });\r\n\r\n                for (var key in refs) {\r\n                    onGoingRef[key] = false;\r\n                }\r\n\r\n                function iterate() {\r\n                    currentRefs = snippet.replaceParamsInObj(currentRefs, params);\r\n                    for (var key in onGoingRef) {\r\n                        if (onGoingRef.hasOwnProperty(key) && currentRefs[key].indexOf(indicator) === -1 && !onGoingRef[key]) {\r\n\r\n                            onComplete[key] = new (function (key) {\r\n                                return function (snap) {\r\n                                    if (typeof snap.val() === 'string') {\r\n                                        params[indicator + key] = snap.val();\r\n\r\n                                    }\r\n                                    res[key] = snap.val();\r\n                                    delete onGoingRef[key];\r\n                                    waitUntil.resolve();\r\n                                    iterate();\r\n                                }\r\n                            })(key);\r\n\r\n                            onGoingRef[key] = true;\r\n                            ref(currentRefs[key]).once('value', onComplete[key])\r\n                        }\r\n                    }\r\n                }\r\n\r\n                iterate();\r\n                return def.promise\r\n            }\r\n\r\n            return $firebase\r\n        });\r\n\r\n\r\n})();\r\n","(function () {\r\n    obsidian.module('core.linkFn', ['firebase'])\r\n        .factory('linkFn', /*@ngInject*/ function ($controller, $injector, $q, snippet, Auth) {\r\n            var linkFn = {\r\n                pagePlusDirective: pagePlusDirective\r\n            };\r\n\r\n            function pagePlusDirective(scope, ctrlName, resolveObj) { //TODO:讓不用$scope的controller也能用這個方法\r\n                function refresh() {\r\n                    var locals = {},\r\n                        condition = 0,\r\n                        resolve = resolveObj || {};\r\n                    if (scope['stateParams']) locals['$stateParams'] = scope['stateParams'];\r\n                    locals['$scope'] = scope;\r\n\r\n                    for (var key in resolve) {\r\n                        if (typeof $injector.invoke(resolve[key]).then !== 'function') {\r\n                            locals[key] = $injector.invoke(resolve[key])\r\n                        } else {\r\n                            condition++;\r\n                            $injector.invoke(resolve[key]).then(function (resolved) {\r\n                                locals[key] = resolved;\r\n                                waitUntil.resolve();\r\n                            })\r\n                        }\r\n                    }\r\n                    //init controller\r\n                    var waitUntil = new snippet.WaitUntil(condition, function () {\r\n                        $controller(ctrlName, locals);\r\n                    });\r\n                }\r\n\r\n                scope.$watch('stateParams', refresh);\r\n                Auth.$onAuth(refresh);\r\n\r\n            }\r\n\r\n            return linkFn\r\n        });\r\n})();\r\n\r\n","//credit to katowulf: https://github.com/firebase/flashlight\r\n(function () {\r\n    obsidian.module('core.elasticSearch', [])\r\n        .factory('elasticSearch', /*@ngInject*/ function (FBURL, Auth, $q, $rootScope) {\r\n            function doSearch(scope, index, type, query) {\r\n                scope = scope || $rootScope;\r\n                var ref = new Firebase(FBURL + '/search');\r\n                var key = ref.child('request').push({index: index, type: type, query: query}).key();\r\n                console.log('search', key, {index: index, type: type, query: query});\r\n                ref.child('response/' + key).on('value', showResults.bind(scope));\r\n            }\r\n\r\n            function showResults(snap) {\r\n                if (snap.val() === null) {\r\n                    return;\r\n                } // wait until we get data\r\n                var dat = snap.val();\r\n//      console.log('result', snap.name(), snap.val());\r\n                snap.ref().off('value', showResults);\r\n                snap.ref().remove();\r\n                this.result = dat;\r\n                this.$digest();\r\n            }\r\n\r\n            function buildQuery(term, words) {\r\n                // See this tut for more query options:\r\n                // http://okfnlabs.org/blog/2013/07/01/elasticsearch-query-tutorial.html#match-all--find-everything\r\n                return {\r\n                    'query_string': {query: makeTerm(term, words)}\r\n                };\r\n            }\r\n\r\n            function makeTerm(term, matchWholeWords) {\r\n                if (!matchWholeWords) {\r\n                    if (!term.match(/^\\*/)) {\r\n                        term = '*' + term;\r\n                    }\r\n                    if (!term.match(/\\*$/)) {\r\n                        term += '*';\r\n                    }\r\n                }\r\n                return term;\r\n            }\r\n\r\n            return doSearch\r\n        });\r\n// display search results\r\n})();\r\n","(function () {\r\n    obsidian.module('core.init', ['firebase'])\r\n        .factory('init', /*@ngInject*/ function (Auth, $q, $http, $firebase, $rootScope) {\r\n            var def = $q.defer();\r\n            //function logInMain(){}\r\n            //function getDbName(){}\r\n            //function getIdentity(){}\r\n            //function logInOthersAnonymously(){}\r\n            ////compile viewLogic\r\n            //get geoip\r\n            $http.jsonp('http://www.telize.com/geoip?callback=JSON_CALLBACK').then(function (response) {\r\n                console.log(response)\r\n            });\r\n\r\n            var preLoadList = {\r\n                stripeKey: {\r\n                    refUrl: 'config/payment/stripe/publishable_key'\r\n                }\r\n            };\r\n\r\n            $firebase.load(preLoadList)\r\n                .then(function (res) {\r\n                    if (res.stripeKey && Stripe) Stripe.setPublishableKey(res.stripeKey);\r\n                    return res\r\n                })\r\n                .then(function (res) {\r\n                    def.resolve(res);\r\n                });\r\n\r\n            return def.promise\r\n        })\r\n        .run(/*@ngInject*/ function ($rootScope, $http, $state, $mdSidenav, $q, Auth, $firebase, model, init, snippet, config) {\r\n\r\n\r\n            $rootScope.debug = config.debug;\r\n            if (config.debug) console.log('debug mode');\r\n\r\n            $rootScope.toggleSidenav = function (menuId) {\r\n                $mdSidenav(menuId).toggle();\r\n            };\r\n\r\n            $rootScope.sideNavLogout = function (menuId) {\r\n                Auth.$unauth();\r\n                $mdSidenav(menuId).toggle();\r\n                $state.go('home');\r\n            };\r\n\r\n            //template\r\n\r\n\r\n            Auth.$onAuth(function (user) { //app.js也有同樣的用法\r\n                $rootScope.user = user;\r\n                $rootScope.loggedIn = !!user;\r\n\r\n                if (user) {\r\n                    $firebase.params = {\r\n                        '$uid': user.uid\r\n                    };\r\n                    $rootScope.loggedIn = !!user;\r\n\r\n                    var loadList = {\r\n                        profileImageURL: {\r\n                            refUrl: 'users/' + user.uid + '/profileImageURL'\r\n                        },\r\n                        email: {\r\n                            refUrl: 'users/' + user.uid + '/email'\r\n                        },\r\n                        phone: {\r\n                            refUrl: 'users/' + user.uid + '/phone'\r\n                        }\r\n                    };\r\n\r\n                    $firebase.load(loadList).then(function (res) {\r\n                        user.profileImageURL = res.profileImageURL;\r\n                        user.email = res.email;\r\n                        user.phone = res.phone;\r\n                        $rootScope.user = user;\r\n                        console.log($rootScope.user);\r\n                    });\r\n                    //Notification\r\n                    //_ref=$firebase.ref('users/'+user.uid+'/notification').orderByChild('unread').equalTo(true).limitToLast(10);\r\n                    //$rootScope.notification=$firebaseArray(_ref);\r\n                    //\r\n                    //$rootScope.$watch('notification',function(obj){\r\n                    //    var newNoti=$rootScope.notification.$getRecord(obj.key)||{};\r\n                    //    var orderStatus='your order('+obj.key+') is '+newNoti.orderStatus;\r\n                    //    ngNotify(orderStatus);\r\n                    //});\r\n                } else {\r\n                    console.log('no user', user);\r\n                    $firebase.params = {};\r\n                }\r\n            });\r\n        });\r\n})();\r\n","(function () {\r\n    //Step 1: name the new module or use a random id.\r\n    var mod = obsidian.module('custom.services', []);\r\n\r\n\r\n//Step 2: replace 'serviceSeed' by the factory name you like.\r\n    mod.factory('customFn', ['FBURL', 'config', 'fbutil', '$firebaseObject', '$q', 'snippet', function (FBURL, config, fbutil, $firebaseObject, $q, snippet) {\r\n        var customFn = {};\r\n        return customFn\r\n    }]);\r\n})();\r\n\r\n","(function () {\r\n    //Step 1: name the new module or use a random id.\r\n    var mod = obsidian.module('custom.filters', []);\r\n\r\n\r\n//Step 2: replace 'serviceSeed' by the factory name you like.\r\n    mod.filter('orderSubTotal', function () {\r\n        return function (order) {\r\n            var sum = 0,\r\n                products = order.products || {};\r\n            for (var key in products) {\r\n                sum += products[key].price * products[key].quantity\r\n            }\r\n            return sum;\r\n        };\r\n    })\r\n        .factory('filterUtil', function ($filter) {\r\n            function watchFilterOpts(scope, source, target, filter, isReverse) {\r\n                scope[source] = scope[source] || [];\r\n                function refresh() {\r\n                    scope[filter] = scope[filter] ? scope[filter] : {};\r\n                    scope[target] = $filter('consecutive')(scope[source], scope[filter], isReverse);\r\n                    //scope.$digest();\r\n                }\r\n\r\n                var watchFilter = scope.$watch(filter, function () {\r\n                    refresh();\r\n                });\r\n                var watchSource = scope.$watch(source, function () {\r\n                    refresh();\r\n                });\r\n\r\n                return function () {\r\n                    watchFilter();\r\n                    watchSource();\r\n                }\r\n            }\r\n\r\n            return {\r\n                watchFilterOpts: watchFilterOpts\r\n            }\r\n        });\r\n})();\r\n","(function () {\r\n    var mod = obsidian.module('custom.directives', []);\r\n})();\r\n\r\n","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state='login',\r\n        url='/login',\r\n        ctrlName='LoginCtrl',\r\n        templateUrl='pages/login/login.html',\r\n        directiveName='obLogin',\r\n        resolve={};\r\n\r\n    var app = obsidian.module('pages.login', ['firebase.auth', 'firebase', 'firebase.utils', 'ui.router', 'core.model']);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function($rootScope, $scope, Auth, $state, fbutil, snippet, $mdDialog) {\r\n        $scope.closeDialog = function() {\r\n            $mdDialog.hide();\r\n        };\r\n\r\n        $scope.email = null;\r\n        $scope.pass = null;\r\n        $scope.confirm = null;\r\n        $scope.createMode = false;\r\n\r\n        $scope.submit = function() {\r\n\r\n        };\r\n\r\n        function redirectTo(state){\r\n            $state.go(state);\r\n        }\r\n\r\n        function showError(err) {\r\n            $scope.err = angular.isObject(err) && err.code? err.code : err + '';\r\n        }\r\n\r\n        $scope.login = function(email, pass) {\r\n            console.log(email,pass);\r\n            $scope.err = null;\r\n            Auth.$authWithPassword({ email: email, password: pass }, {rememberMe: true})\r\n                .then(function(/* user */) {\r\n                    $mdDialog.hide();\r\n                    redirectTo('home');\r\n                }, showError);\r\n        };\r\n\r\n        $scope.createAccount = function() {\r\n            $scope.err = null;\r\n            if( assertValidAccountProps() ) {\r\n                var email = $scope.email;\r\n                var pass = $scope.pass;\r\n                // create user credentials in Firebase auth system\r\n                Auth.$createUser({email: email, password: pass})\r\n                    .then(function() {\r\n                        // authenticate so we have permission to write to Firebase\r\n                        return Auth.$authWithPassword({ email: email, password: pass });\r\n                    })\r\n                    .then(Auth.createAccount)\r\n                    .then(function(/* user */) {\r\n                        // redirect to home\r\n                        $mdDialog.hide();\r\n                        redirectTo('home');\r\n                    }, showError);\r\n            }\r\n        };\r\n\r\n        function assertValidAccountProps() {\r\n            if( !$scope.email ) {\r\n                $scope.err = 'Please enter an email address';\r\n            }\r\n            else if( !$scope.pass || !$scope.confirm ) {\r\n                $scope.err = 'Please enter a password';\r\n            }\r\n            else if( $scope.createMode && $scope.pass !== $scope.confirm ) {\r\n                $scope.err = 'Passwords do not match';\r\n            }\r\n            return !$scope.err;\r\n        }\r\n\r\n        $scope.loginWithProvider=function(provider, opt){\r\n            Auth.loginWithProvider(provider, opt)\r\n                .then(function(user) {\r\n                    $mdDialog.hide();\r\n                    redirectTo('home');\r\n                    return Auth.checkIfAccountExistOnFb(user)\r\n                }, showError)\r\n                .then(Auth.createAccount, showError)\r\n                .then(function(){}, showError)\r\n        }\r\n    });\r\n\r\n    app.config(['$stateProvider',function($stateProvider){\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName\r\n        });\r\n    }]);\r\n\r\n    app.run(/*@ngInject*/ function ($rootScope, $mdDialog) {\r\n        $rootScope.showLogin = function ($event) {\r\n            var parentEl = angular.element(document.body);\r\n            $mdDialog.show({\r\n                parent: parentEl,\r\n                targetEvent: $event,\r\n                templateUrl: 'pages/login/loginDialog.html',\r\n                clickOutsideToClose: true,\r\n                controller: 'LoginCtrl'\r\n            });\r\n        };\r\n    });\r\n\r\n    if (directiveName) {\r\n        app.directive(directiveName, ['linkFn', function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '@'\r\n                },\r\n                link: function(scope){\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var mod = obsidian.module('pages.account', []),\r\n        state = 'account',\r\n        url = '/account',\r\n        ctrlName = 'AccountCtrl',\r\n        templateUrl = 'pages/account/account.html',\r\n        resolve = {\r\n            user: ['Auth', function (Auth) {\r\n                return Auth.$waitForAuth();\r\n            }]\r\n        },\r\n        directiveName = 'obAccount';\r\n\r\n    mod.controller(ctrlName, /*@ngInject*/ function ($rootScope, $scope, Auth, fbutil, user, $state, $firebaseObject, $mdDialog) {\r\n            var unbind;\r\n            // create a 3-way binding with the user profile object in Firebase\r\n            //$rootScope.showAcc=false;\r\n            var profile = $firebaseObject(fbutil.ref('users', user.uid));\r\n            profile.$bindTo($scope, 'profile').then(function (ub) {\r\n                unbind = ub;\r\n            });\r\n\r\n            $scope.user = user\r\n\r\n            $scope.closeDialog = function() {\r\n                $mdDialog.hide();\r\n            };\r\n\r\n            // expose logout function to scope\r\n            $scope.logout = function () {\r\n                if (unbind) {\r\n                    unbind();\r\n                }\r\n                profile.$destroy();\r\n                Auth.$unauth();\r\n                $mdDialog.cancel();\r\n                $state.go('home');\r\n            };\r\n            //$rootScope.logout = $scope.logout;\r\n\r\n            $scope.changePassword = function (pass, confirm, newPass) {\r\n                resetMessages();\r\n                if (!pass || !confirm || !newPass) {\r\n                    $scope.err = 'Please fill in all password fields';\r\n                }\r\n                else if (newPass !== confirm) {\r\n                    $scope.err = 'New pass and confirm do not match';\r\n                }\r\n                else {\r\n                    Auth.$changePassword({email: profile.email, oldPassword: pass, newPassword: newPass})\r\n                        .then(function () {\r\n                            $scope.msg = 'Password changed';\r\n                        }, function (err) {\r\n                            $scope.err = err;\r\n                        })\r\n                }\r\n            };\r\n\r\n            $scope.clear = resetMessages;\r\n\r\n            $scope.changeEmail = function (pass, newEmail) {\r\n                resetMessages();\r\n                var oldEmail = profile.email;\r\n                Auth.$changeEmail({oldEmail: oldEmail, newEmail: newEmail, password: pass})\r\n                    .then(function () {\r\n                        // store the new email address in the user's profile\r\n                        return fbutil.handler(function (done) {\r\n                            fbutil.ref('users', user.uid, 'email').set(newEmail, done);\r\n                        });\r\n                    })\r\n                    .then(function () {\r\n                        $scope.emailmsg = 'Email changed';\r\n                    }, function (err) {\r\n                        $scope.emailerr = err;\r\n                    });\r\n            };\r\n\r\n            function resetMessages() {\r\n                $scope.err = null;\r\n                $scope.msg = null;\r\n                $scope.emailerr = null;\r\n                $scope.emailmsg = null;\r\n            }\r\n        }\r\n    );\r\n\r\n    mod.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: resolve\r\n        });\r\n    }]);\r\n\r\n    mod.run(/*@ngInject*/ function ($rootScope, $mdDialog) {\r\n        $rootScope.showAccount = function ($event) {\r\n            var parentEl = angular.element(document.body);\r\n            $mdDialog.show({\r\n                parent: parentEl,\r\n                targetEvent: $event,\r\n                templateUrl: 'pages/account/accountDialog.html',\r\n                locals: {\r\n                    user: $rootScope.user\r\n                },\r\n                clickOutsideToClose: true,\r\n                controller: 'AccountCtrl'\r\n            });\r\n        };\r\n    });\r\n\r\n    mod.directive('accWindow', function (){\r\n         return {\r\n             restrict: 'E',\r\n             templateUrl: 'pages/account/accountWindow.html',\r\n             controller: function($rootScope, $scope, Auth, $state){\r\n                 $scope.logout = function(){\r\n                     Auth.$unauth();\r\n                     $state.go('home');\r\n                 };\r\n                 $scope.user = $rootScope.user\r\n             }\r\n         };\r\n        }\r\n    );\r\n\r\n    if (directiveName) {\r\n        mod.directive(directiveName, ['linkFn', function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '&'\r\n                },\r\n                link: function(scope){\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n\r\n})(angular);\r\n","(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state='productList',\r\n        url='/productList',\r\n        ctrlName='ProductListCtrl',\r\n        templateUrl='pages/productList/productList.html';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.productList', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($rootScope, $scope, $mdDialog) {\r\n        $scope.showDetail= function($event, pid) {\r\n            var parentEl = angular.element(document.body);\r\n            $mdDialog.show({\r\n                parent: parentEl,\r\n                targetEvent: $event,\r\n                templateUrl:'pages/productDetail/productDetail.html',\r\n                locals: {\r\n                    $stateParams: {pid:pid},\r\n                    user: $rootScope.user\r\n                },\r\n                clickOutsideToClose: true,\r\n                controller: 'ProductDetailCtrl'\r\n            });\r\n        }\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider',function($stateProvider){\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName\r\n        });\r\n    }]);\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state = 'productDetail',\r\n        url = '/productDetail/:pid',\r\n        ctrlName = 'ProductDetailCtrl',\r\n        templateUrl = 'pages/productDetail/productDetail.html',\r\n        directiveName = 'productDetail',\r\n        resolve = {\r\n            user: ['Auth', function (Auth) {\r\n                return Auth.$waitForAuth();\r\n            }]\r\n        };\r\n\r\n    var app = obsidian.module('pages.productDetail', []);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $rootScope, user, $firebaseObject, $firebase, $location, $stateParams, $mdDialog) {\r\n        var productId = $stateParams.pid;\r\n        $scope.loggedIn=function(){return $rootScope.loggedIn};\r\n        $scope.id = productId;\r\n        $scope.user = user;\r\n        $scope.loaded = function (value) {\r\n            angular.extend(value, {\r\n                quantity: 1,\r\n                itemId: productId\r\n            })\r\n        };\r\n        $scope.cancel = function() {\r\n            $mdDialog.cancel();\r\n        };\r\n    });\r\n\r\n\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: resolve\r\n        });\r\n    }]);\r\n\r\n    if (directiveName) {\r\n        app.directive(directiveName, ['linkFn', function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '='\r\n                },\r\n                link: function(scope){\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state='home',\r\n        url='/home',\r\n        ctrlName='HomeCtrl',\r\n        templateUrl='pages/home/home.html';\r\n\r\n\r\n    var app = obsidian.module('pages.home', []);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $state) {\r\n        //\r\n        console.log($state.data);\r\n\r\n        $scope.test= function () {\r\n            $state.goWithData('test2',{},{a:'a',b:'b'})\r\n        }\r\n    });\r\n\r\n    app.config(['$stateProvider',function($stateProvider){\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName\r\n        });\r\n    }]);\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state = 'shoppingCart',\r\n        url = '/shoppingCart',\r\n        ctrlName = 'ShoppingCartCtrl',\r\n        templateUrl = 'pages/shoppingCart/shoppingCart.html';\r\n\r\n    var app = obsidian.module('pages.shoppingCart', []);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($q, config, user, $scope, $rootScope, $firebase, snippet, $state, ngCart) {\r\n        $scope.ngCart = ngCart;\r\n        var cart = {products: {}};\r\n\r\n        $scope.emptyCart = function () {\r\n            ngCart.empty();  //清空購物車, ngCart 要清兩次才會清空\r\n            ngCart.empty()\r\n        };\r\n\r\n        $scope.paymentMethod = 'uponPickup';\r\n        $scope.clientEmail=$rootScope.user? $rootScope.user.email:null;\r\n        $scope.clientPhone=$rootScope.user? $rootScope.user.phone:null;\r\n        $scope.clientName=$rootScope.user? (user[user.provider].displayName || user[user.provider].email):null;\r\n        $scope.uid=$rootScope.user? $rootScope.user.uid:null;\r\n\r\n\r\n\r\n\r\n        function updateContactInfo(){\r\n            if(!$rootScope.user) return;\r\n            var isEmailChanged=($scope.clientEmail===$rootScope.user.email),\r\n                isPhoneChanged=($scope.clientPhone===$rootScope.user.phone),\r\n                uploadList=[];\r\n            if(isEmailChanged) uploadList.push({\r\n                refUrl:'users/' + user.uid + '/email', value: $scope.clientEmail\r\n            });\r\n            if(isPhoneChanged) uploadList.push({\r\n                refUrl:'users/' + user.uid + '/phone', value: $scope.clientPhone\r\n            });\r\n            if(uploadList.length>0) $firebase.batchUpdate(uploadList);\r\n        }\r\n\r\n        if (config.debug) {\r\n            $scope.number = '4242424242424242';\r\n            $scope.expiry = '11/16';\r\n            $scope.cvc = '123';\r\n        }\r\n\r\n        function isTimeValid() {\r\n            if (( $scope.dt.getDay() === 0 || $scope.dt.getDay() === 6 )) {\r\n                alert('Please pick a weekday.');\r\n                return false\r\n            }\r\n            if ($scope.dt.getTime() < (new Date()).getTime() + 30 * 60 * 1000) {\r\n                alert('Please pick a time at least 30 minutes from now.');\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        }\r\n\r\n        $scope.submitOrder = function () {\r\n            //確保有足夠時間準備\r\n            if (!isTimeValid()) return;\r\n\r\n            $scope.waiting = true; //進入waiting畫面,得到token後stripeCallback會執行\r\n            if ($scope.paymentMethod === 'uponPickup') uploadOrder('uponPickup').then(function (res) {\r\n                var orderId = res.params['$orderId'];\r\n                $scope.invoice.orderId = orderId;\r\n                $state.goWithData('invoice', {orderId: orderId}, $scope.invoice); //成功後轉換至invoice頁面\r\n                $scope.emptyCart();\r\n                if (!$scope.$$phase) $scope.$apply(); //確保成功轉換頁面\r\n            });\r\n        };\r\n\r\n        function getPaymentData(code, result) {\r\n            $scope.payment = {};\r\n            if (result.error) {\r\n                window.alert('it failed! error: ' + result.error.message);\r\n            } else {\r\n                console.log('success! token: ' + result.id);\r\n                $scope.payment = {\r\n                    token: result.id,\r\n                    provider: 'stripe'\r\n                };\r\n            }\r\n        }\r\n\r\n        $scope.stripeCallback = function (code, result) {\r\n            if ($scope.paymentMethod === 'uponPickup' || !isTimeValid()) return;\r\n            getPaymentData(code, result);\r\n\r\n            //將payment provider取得的token加入其他資料一起上傳\r\n            uploadOrder('creditCard')\r\n                .then(function (res) {\r\n                    var orderId = res.params['$orderId'];\r\n                    console.log('orderId is ' + orderId);\r\n\r\n\r\n                    clearTimeout(timeout);\r\n\r\n                    if (res.isCharged === 'succeeded') {\r\n                        $state.go('invoice', $scope.invoice); //成功後轉換至invoice頁面\r\n                        console.log('transaction succeeded');\r\n                        $scope.emptyCart();\r\n                        if (!$scope.$$phase) $scope.$apply(); //確保成功轉換頁面\r\n                    } else {\r\n                        //TODO : errorHandler(errorId, 'transaction failed', res.isCharged);\r\n                    }\r\n                    $scope.waiting = false;\r\n\r\n\r\n                }, function (err) {\r\n                    console.log(JSON.stringify(err)); //上傳失敗產生警告\r\n                });\r\n        };\r\n\r\n        function prepareOrderData() {\r\n            angular.forEach(ngCart.getItems(), function (item) {\r\n                cart.products[item._id] = item._data;\r\n                cart.products[item._id].quantity = item._quantity;\r\n                cart.products[item._id].itemId = item._id;\r\n            });\r\n\r\n            var payment = $scope.payment || {};\r\n            payment.method = $scope.paymentMethod;\r\n\r\n            angular.extend(cart,\r\n                {\r\n                    clientName: $scope.clientName,\r\n                    clientId: $scope.uid,\r\n                    clientEmail: $scope.clientEmail,\r\n                    clientPhone: $scope.clientPhone,\r\n                    createdTime: Firebase.ServerValue.TIMESTAMP,\r\n                    note: $scope.note || null,\r\n                    schedule: $scope.dt.getTime(),\r\n                    orderStatus: 'received',\r\n                    payment: payment,\r\n                    shipment: {}//\r\n                }\r\n            );\r\n        }\r\n\r\n\r\n        function uploadOrder(type) {\r\n\r\n            updateContactInfo();\r\n            //整理order 資料\r\n            prepareOrderData();\r\n\r\n            //產生要存至主order資料庫的結構\r\n            var mainOrderStructure = {\r\n                clientName: '',\r\n                clientId: '',\r\n                clientEmail: '',\r\n                clientPhone: '',\r\n                createdTime: '',\r\n                orderStatus: '',\r\n                note: '',\r\n                //subTotal:'',        由主機端計算，防止人為竄改。\r\n                products: {\r\n                    $productId: {\r\n                        itemName: '',\r\n                        itemId: '',\r\n                        quantity: '',\r\n                        price: '',\r\n                        selectedOption: ''\r\n                    }\r\n                },\r\n                payment: '',\r\n                shipment: '',\r\n                schedule: ''\r\n            };\r\n\r\n            //產生要存至主order資料庫的資料\r\n\r\n            var mainOrderData = {\r\n                refUrl: 'orders/$orderId',\r\n                value: snippet.filterRawData(cart, mainOrderStructure)\r\n            };\r\n            //產生要存至user的order資料庫的結構\r\n            var userOderReceiptStructure = {\r\n                createdTime: '',\r\n                orderStatus: '',\r\n                note: '',\r\n                products: {\r\n                    $productId: {\r\n                        itemId: '',\r\n                        itemName: '',\r\n                        quantity: '',\r\n                        price: '',\r\n                        selectedOption: ''\r\n                    }\r\n                },\r\n                payment: '',\r\n                shipment: '',\r\n                schedule: ''\r\n            };\r\n\r\n            //產生要存至user的order資料庫的資料\r\n            var userReceiptData = {\r\n                refUrl: 'users/$uid/orderHistory/$orderId',\r\n                value: snippet.filterRawData(cart, userOderReceiptStructure)\r\n            };\r\n\r\n            //放到同一個array產生批次上傳資料\r\n            var batchOrderData = [mainOrderData, userReceiptData];\r\n\r\n            //產生收據\r\n            $scope.invoice = angular.extend({}, cart);\r\n\r\n            //批次上傳\r\n            return $firebase.$communicate({\r\n                request: batchOrderData,\r\n                response: type === 'uponPickup' ? false : {isCharged: 'users/$uid/orderHistory/$orderId/payment/status'}\r\n            });\r\n        }\r\n\r\n        //date picker\r\n\r\n        $scope.dt = new Date();\r\n        $scope.hour = 12;\r\n        $scope.minute = 0;\r\n        $scope.minDate = $scope.dt;\r\n        $scope.maxDate = new Date(\r\n            $scope.dt.getFullYear(),\r\n            $scope.dt.getMonth() + 2,\r\n            $scope.dt.getDate());\r\n\r\n        $scope.changeDt = function () {\r\n            $scope.hour = 12;\r\n            $scope.dt.setHours(12);\r\n            $scope.minute = 0;\r\n            $scope.dt.setMinutes(0);\r\n        };\r\n        $scope.changeDt();\r\n\r\n        $scope.changeTime = function () {\r\n            $scope.dt.setHours($scope.hour);\r\n            $scope.dt.setMinutes($scope.minute);\r\n        };\r\n    });\r\n\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    }]);\r\n\r\n    app.run(/*@ngInject*/ function ($rootScope, ngCart, config) {\r\n        ngCart.setShipping(config.shipping);\r\n        ngCart.setTaxRate(config.taxRate);\r\n\r\n        function refreshTotalItems() {\r\n            $rootScope.cartTotalItems = ngCart.getTotalItems()\r\n        }\r\n\r\n        $rootScope.$on('ngCart:change', refreshTotalItems);\r\n        refreshTotalItems();\r\n    });\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n//Step 1: replace 'pageSeed' to any name you prefer.\r\n    var mod = obsidian.module('pageSeed', ['firebase.auth', 'firebase', 'firebase.utils', 'core.model']);\r\n\r\n//Step 2: simple configuration for the state.\r\n    var state = 'pageSeed',\r\n        url = '/pageSeed',\r\n        ctrlName = 'PageSeedCtrl',\r\n        templateUrl = 'pages/pageSeed/pageSeed.html',\r\n        directiveName = 'pageSeedDirective',\r\n        resolve = {\r\n            // forces the page to wait for this promise to resolve before controller is loaded\r\n            // the controller can then inject `user` as a dependency. This could also be done\r\n            // in the controller, but this makes things cleaner (controller doesn't need to worry\r\n            // about auth status or timing of accessing data or displaying elements)\r\n            user: ['Auth', function (Auth) {\r\n                return Auth.$waitForAuth();\r\n            }]\r\n        };\r\n\r\n//Step 3: config the state in detail if needed.\r\n    mod.config(/*@ngInject*/ function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: resolve\r\n        });\r\n    });\r\n\r\n//Step 4: build the controller.\r\n    mod.controller(ctrlName, /*@ngInject*/ function ($scope) {\r\n        //create your own controller here\r\n    });\r\n\r\n\r\n//Step 5: give a name for the directive in step 2 if you want put this state into a widget.\r\n    if (directiveName) {\r\n        mod.directive(directiveName, /*@ngInject*/ function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '@'\r\n                },\r\n                link: function (scope) {\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        });\r\n    }\r\n})(angular);\r\n","//Step 1: name the new module.\r\n\r\n(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state='myOrders',\r\n        url='/myOrders',\r\n        ctrlName='MyOrdersCtrl',\r\n        templateUrl='pages/myOrders/myOrders.html';\r\n\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.myOrders', ['ui.router']);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function (user, $scope, filterUtil, $firebaseArray, $firebase) {\r\n\r\n        $scope.loadOrders = function (startDay, endDay) {\r\n            var now = (new Date).getTime(),\r\n                day = 24 * 60 * 60 * 1000;\r\n            var ref = $firebase.ref('users/'+user.uid+'/orderHistory').orderByChild('createdTime').startAt(now + startDay * day).endAt(now + endDay * day);\r\n\r\n            //to prevent memory leak\r\n            if($scope.myOrdersSrc) $scope.myOrdersSrc.$destroy();\r\n            if($scope.unwatchFilter) $scope.unwatchFilter();\r\n\r\n            $scope.myOrdersSrc = $firebaseArray(ref);\r\n            $scope.myOrdersSrc.$loaded().then(function(){\r\n                $scope.unwatchFilter=filterUtil.watchFilterOpts($scope, 'myOrdersSrc', 'myOrders', 'filters');\r\n            })\r\n        };\r\n\r\n        $scope.loadOrders(-65535, 65535); //today's order\r\n\r\n        $scope.filterOpt={};\r\n        $scope.refreshFilter = function () {\r\n            $scope.search=$scope.search? $scope.search:'';\r\n            var searcKeyhArr=$scope.search.split(' ');\r\n            $scope.filters=angular.extend({}, $scope.filterOpt, searcKeyhArr);\r\n        };\r\n\r\n        $scope.$watch('filterOpt', function(){\r\n            $scope.refreshFilter();\r\n        }, true);\r\n\r\n\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.stateAuthenticated(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    }]);\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state = 'backEnd',\r\n        url = '/backEnd',\r\n        ctrlName = 'BackEndCtrl',\r\n        templateUrl = 'pages/backEnd/backEnd.html';\r\n\r\n\r\n    var app = obsidian.module('pages.backEnd', ['pages.backEnd.productManager', 'pages.backEnd.orders']);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $firebase, snippet, $errorHandler) {\r\n        this.test='1234'\r\n    });\r\n\r\n\r\n    app.config(function ($stateProvider) {\r\n        $stateProvider\r\n            .state(state, {\r\n                url: url,\r\n                views: {\r\n                    \"\": {\r\n                        templateUrl: templateUrl,\r\n                        controller: ctrlName,\r\n                        controllerAs:'be'\r\n                    }\r\n                }\r\n            })\r\n            .state(state + '.orders', {\r\n                url: '/orders',\r\n                views: {\r\n                    \"content\": {\r\n                        templateUrl: 'pages/backEnd/orders/orders.html',\r\n                        controller: 'Orders'\r\n                    }\r\n                }\r\n            })\r\n            .state(state + '.productManager', {\r\n                url: '/productManager',\r\n                views: {\r\n                    \"content\": {\r\n                        templateUrl: 'pages/backEnd/productManager/productManager.html',\r\n                        controller: 'ProductManager'\r\n                    }\r\n                }\r\n            });\r\n    });\r\n\r\n\r\n})(angular);","(function (angular) {\r\n\r\n    var app = angular.module('pages.backEnd.orders', []);\r\n\r\n//Step 4: construct a controller. Notice that $scope is required, don't delete it.\r\n    app.controller('Orders', /*@ngInject*/ function ($scope, filterUtil, customFn, $firebaseArray, $firebase, snippet, $errorHandler) {\r\n        //to show orders\r\n        $scope.loadOrders = function (startDay, endDay) {\r\n            var now = (new Date).getTime(),\r\n                day = 24 * 60 * 60 * 1000;\r\n            var ref = $firebase.ref('orders').orderByChild('schedule').startAt(now + startDay * day).endAt(now + endDay * day);\r\n\r\n            //to prevent memory leak\r\n            if($scope.allOrdersSrc) $scope.allOrdersSrc.$destroy();\r\n            if($scope.unwatchFilter) $scope.unwatchFilter();\r\n\r\n            $scope.allOrdersSrc = $firebaseArray(ref);\r\n            $scope.allOrdersSrc.$loaded().then(function(){\r\n                $scope.unwatchFilter=filterUtil.watchFilterOpts($scope, 'allOrdersSrc', 'allOrders', 'filters');\r\n            })\r\n        };\r\n\r\n\r\n        //$scope.loadOrders(-0.5, 1); //today's order\r\n\r\n\r\n\r\n        $scope.filterOpt={};\r\n        $scope.refreshFilter = function () {\r\n            $scope.search=$scope.search? $scope.search:'';\r\n            var searcKeyhArr=$scope.search.split(' '); //let filter match several keys\r\n            $scope.filters=angular.extend({}, $scope.filterOpt, searcKeyhArr);\r\n        };\r\n\r\n        $scope.$watch('filterOpt', function(){\r\n            $scope.refreshFilter();\r\n        }, true);\r\n\r\n\r\n        $scope.statusOptions = ['received', 'preparing', 'ready', 'picked-up'];\r\n        $scope.orderStatus = {};\r\n\r\n        $scope.changeOrderStatus = function (orderId, userId, changedStatus) {\r\n            console.log(orderId, userId, changedStatus);\r\n            var values = [\r\n                {\r\n                    refUrl: 'orders/' + orderId + '/orderStatus',\r\n                    value: changedStatus,\r\n                    set: true\r\n                },\r\n                {\r\n                    refUrl: 'users/' + userId + '/orderHistory/' + orderId + '/orderStatus',\r\n                    value: changedStatus,\r\n                    set: true\r\n                }\r\n            ];\r\n            $firebase.batchUpdate(values, true).then(angular.noop, $errorHandler({}));\r\n        };\r\n        $scope.calcSubTotal = customFn.calcSubTotal;\r\n\r\n\r\n        $scope.removeOrder = function (orderId, userId, reason) {\r\n            var values = [\r\n                {\r\n                    refUrl: 'users/' + userId + '/orderHistory/' + orderId,\r\n                    value: null,\r\n                    set: true\r\n                },\r\n                {\r\n                    refUrl: 'orders/' + orderId,\r\n                    value: null,\r\n                    set: true\r\n                }\r\n            ];\r\n            $firebase.batchUpdate(values, true).then(function(){\r\n                $scope.refreshFilter();\r\n            })\r\n        };\r\n    });\r\n\r\n\r\n\r\n})(angular);\r\n\r\n","(function (angular) {\r\n\r\n    var app = angular.module('pages.backEnd.productManager', []);\r\n\r\n    app.controller('ProductManager', /*@ngInject*/ function ($scope, $firebaseArray, $firebaseObject, customFn, $firebase, snippet, $errorHandler) {\r\n\r\n        //to add/remove new products\r\n        $scope.products=$firebaseObject($firebase.ref('products'));\r\n        $scope.addOpt=function(){\r\n            var arr=$scope.selectedProduct.options;\r\n            $scope.selectedProduct.options[arr.length]=''\r\n        };\r\n        $scope.removeOpt=function(){\r\n            var arr=$scope.selectedProduct.options;\r\n            if(arr.length===0) return;\r\n            $scope.selectedProduct.options.pop();\r\n        };\r\n        $scope.selectProduct=function(productId){\r\n            $scope.selectedProduct={};\r\n            $scope.selectedProduct=angular.extend({},$scope.products[productId]);\r\n            $scope.selectedProduct.options=$scope.selectedProduct.options||[]\r\n        };\r\n        $scope.updateProduct=function(){\r\n            $scope.products[$scope.selectedProduct.itemId]=$scope.selectedProduct;\r\n            $scope.products.$save();\r\n            $scope.selectedProduct={};\r\n        };\r\n        $scope.removeProduct=function(id){\r\n            $scope.products[id]=null;\r\n            $scope.products.$save();\r\n        };\r\n        $scope.createProduct=function(){\r\n            var randomId=(new Date()).getTime().toString(36);\r\n            $scope.selectedProduct={\r\n                itemId:randomId,\r\n                itemName:'',\r\n                image:'',\r\n                description:'',\r\n                listPrice:'',\r\n                price:'',\r\n                options:['']\r\n            }\r\n        };\r\n        $scope.clearProduct=function(){\r\n            $scope.selectedProduct={}\r\n        }\r\n    });\r\n\r\n\r\n\r\n})(angular);\r\n\r\n","(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state = 'test',\r\n        url='/test',\r\n        ctrlName = 'TestCtrl',\r\n        templateUrl = 'pages/test/test.html';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.test', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $state, $timeout, fbutil, $firebase) {\r\n        $scope.path='products';\r\n        $scope.id='bd_001';\r\n\r\n        $scope.loaded=function(value){\r\n            console.log(value);\r\n            $scope.isLoaded=true\r\n        };\r\n\r\n        $scope.from='https://lauchbox.firebaseio.com/products';\r\n        $scope.to='https://lauchbox2.firebaseio.com/products';\r\n\r\n        $scope.move=function(from,to){\r\n            $firebase.move(from,to)\r\n        };\r\n\r\n        $scope.updateDescription= function (firebaseObject) {\r\n            firebaseObject.$save();\r\n            //for full api, see $firebaseObject section in https://www.firebase.com/docs/web/libraries/angular/api.html\r\n        };\r\n\r\n        $scope.getMultipleRefVal= function () {\r\n            $firebase.getMultipleRefVal({\r\n                path1:'test/path1',\r\n                path2:'test/path2/&path1',\r\n                path3:'test/path3/&path1/&path2'\r\n            }).then(function(res){\r\n                $scope.result=res\r\n            })\r\n        };\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(function($stateProvider){\r\n            $stateProvider.state(state, {\r\n                templateUrl: templateUrl,\r\n                controller: ctrlName,\r\n                url:url\r\n            });\r\n        });\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state = 'test2',\r\n        url = '/test2',\r\n        ctrlName = 'Test2Ctrl',\r\n        templateUrl = 'pages/test2/test2.html',\r\n        directiveName = '';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.test2', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $state, $firebase, $rootScope) {\r\n\r\n        console.log($state.data);\r\n        $scope.changed=function(){\r\n            console.log('data changed to '+$scope.inputDelayTest)\r\n        };\r\n        var loadList = [\r\n            {\r\n                refUrl: 'products/bd_001'\r\n            },\r\n            {\r\n                refUrl: 'products/bd_002'\r\n            },\r\n            {\r\n                refUrl: 'products',\r\n                opt:{\r\n                    orderBy:'Key',\r\n                    limitToFirst:2\r\n                }\r\n            }\r\n        ];\r\n        $firebase.load(loadList).then(function(res){\r\n            console.log(res);\r\n        });\r\n\r\n\r\n        $scope.test=function(){\r\n            $state.go('home', {test:'test'})\r\n        }\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            url: url\r\n        });\r\n    }]);\r\n\r\n    if (directiveName) {\r\n        app.directive(directiveName, ['$controller', function ($controller) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '@'\r\n                },\r\n                link: function (scope, iElement, iAttrs) {\r\n                    scope.$watch('initparams', function () {\r\n                        $controller(ctrlName, {$scope: scope});\r\n                    })\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state='invoice',\r\n        url='/invoice/:orderId',\r\n        ctrlName='InvoiceCtrl',\r\n        templateUrl='pages/invoice/invoice.html';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.invoice', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $firebaseObject, $state, customFn) {\r\n        console.log($state.data);\r\n        $scope.invoice=$state.data;\r\n        //$scope.subTotal=customFn.calcSubTotal('', $stateParams.products);\r\n        $scope.date=new Date();\r\n        $scope.OK=function(){\r\n            $state.go('home')\r\n        }\r\n\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    }]);\r\n\r\n\r\n})(angular);","'use strict';\r\nconsole.log('app loaded');\r\nconsole.log(obsidian.getAppDependencies());\r\n// Declare app level module which depends on filters, and services\r\n//angular.module('myApp', obsidian.getAppDependencies())\r\n//\r\n//    .run(function ($rootScope, Auth, init) {\r\n//        // track status of authentication\r\n//        init.then(function(res){\r\n//        });\r\n//        //Auth.$onAuth(function (user) {\r\n//        //    $rootScope.user=user;\r\n//        //    $rootScope.loggedIn = !!user;\r\n//        //});\r\n//    });\r\n//\r\n//angular.bootstrap(document, ['myApp']);\r\n//obsidian.bootstrap();\r\n\r\n//angular.bootstrap(document, ['myApp']);\r\nangular.module('myApp', obsidian.getAppDependencies())\r\n    .run(/*@ngInject*/ function ($rootScope, Auth, init) {\r\n        // track status of authentication\r\n        console.log('myApp');\r\n        init.then(function(res){\r\n        });\r\n        //Auth.$onAuth(function (user) {\r\n        //    $rootScope.user=user;\r\n        //    $rootScope.loggedIn = !!user;\r\n        //});\r\n    });\r\nangular.bootstrap(document, ['myApp']);\r\n"],"sourceRoot":"/source/"}