{"version":3,"sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","app/app.js","bundle.js","app/components/appversion/appversion-directive.js","app/components/auth/auth.js","app/components/errorHandler/error.js","app/components/filters/filters.js","app/components/firebase.utils/firebase.utils.js","app/components/inputMask/ui-mask.js","app/components/ngFirebase/ngFirebase.js","app/components/ngcart/ngCart.js","app/components/ngcloak/ngcloak-decorator.js","app/components/notify/notify.js","app/components/scrollpoint/scrollpoint.js","app/components/security/security.js","app/components/socialLinks/socialLinks.js","app/core/$firebase.js","app/core/elasticSearch.js","app/core/init.js","app/core/linkFn.js","app/core/model.js","app/core/snippet.js","app/custom/directive.js","app/custom/filter.js","app/custom/service.js","app/pages/account/account.js","app/pages/backEnd/backEnd.js","app/pages/backEnd/orders/orders.js","app/pages/backEnd/productManager/productManager.js","app/pages/home/home.js","app/pages/invoice/invoice.js","app/pages/login/login.js","app/pages/myOrders/myOrders.js","app/pages/pageSeed/pageSeed.js","app/pages/productDetail/productDetail.js","app/pages/productList/productList.js","app/pages/shoppingCart/shoppingCart.js","app/pages/test2/test2.js","app/pages/test/test.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","console","log","obsidian","getAppDependencies","angular","run","$rootScope","Auth","init","then","res","bootstrap","document",2,"directive","version","scope","elm","text",3,"factory","$firebaseAuth","fbutil","$q","FBURL","snippet","$firebase","ref","checkIfAccountExistOnFb","authData","def","defer","reject","uid","once","snap","val","resolve","err","promise","createAccount","opt","undefined","handler","cb","set","basicAccountUserData","structure","rawData","flatten","flattenConfig","values","createBatchUpdateValues","JSON","stringify","batchUpdate","isConsecutive","errorHandler","provider","name","displayName","email","profileImageURL","firstPartOfEmail","password","basicUserInfo","createdTime","Firebase","ServerValue","TIMESTAMP","id","loginWithProvider","options","$authWithPassword","$authWithCustomToken","customToken","rememberMe","$authAnonymously","popup","$authWithOAuthRedirect","$authWithOAuthPopup","removeUserData","extraCallBack","remove",4,"mod","state","url","ctrlName","templateUrl","controller","$scope","$stateParams","error","config","$stateProvider","user","$waitForAuth","$state","openErrorPage","go","$$phase","$apply","_opt","type",5,"filter","items","slice","reverse","$filter","input","isReverse","_items","result","copy","forEach","value","key","trim","keyArray","split","keyObj","filterObj","data","filteredData","applyFilter","obj","fData","this","fObj","isArray","isDefined","concat","unique","uniqueList","push","$window","decimals","suffix","isNumber","isNaN","Math","round","pow",6,"pathRef","args","join","firebaseRef","path","Array","prototype","arguments","child","utils","fn","context",7,"maskDefinitions",9,"A","*","clearOnBlur","eventsToHandle","activeElement","hasFocus","href","tabIndex","priority","restrict","compile","y","F","d","h","R","m","v","j","z","p","$setValidity","c","$viewValue","required","$error","g","K","attr","removeAttr","N","$modelValue","Z","q","H","maxlength","E","$formatters","$render","I","bind","k","x","W","M","w","unbind","T","_","toString","P","replace","test","shift","charAt","substr","b","uiMaskPlaceholder","placeholder","$","pop","B","C","$setViewValue","V","D","S","which","shiftKey","O","indexOf","substring","selectionStart","selection","focus","createRange","moveStart","offsetWidth","offsetHeight","setSelectionRange","createTextRange","collapse","moveEnd","select","selectionEnd","uiOptions","$eval","isObject","Object","hasOwnProperty","extend","$observe","G","$watch","ngModel","assign","$parsers","TypeError","Number","floor","abs","max",8,"transclude","ngFirebase","loading","link","element","attrs","ctrl","transcludeFn","appendTransclude","dataOrError","empty","clone","trclScope","append","pure","pureValue","subValue","valueAs","$value","$firebaseObject","loaded","errorAs","$destroy","$object","$loaded","isRefUrlValid","$get","ngCart","ngCartItem","store","$on","$save","get","$restore","service","$cart","shipping","taxRate","tax","addItem","price","quantity","inCart","getItemById","setQuantity","newItem","$broadcast","itemId","getCart","build","item","getId","setShipping","getShipping","setTaxRate","parseFloat","toFixed","getTaxRate","getTax","getSubTotal","setCart","cart","getItems","getTotalItems","count","getQuantity","getTotalUniqueItems","total","getTotal","totalCost","removeItem","index","splice","removeItemById","localStorage","isEmpty","toObject","subTotal","storedCart","_self","_id","_name","_price","_quantity","_data","$log","setId","setName","setPrice","setData","getName","priceFloat","getPrice","relative","quantityInt","parseInt","info","getData","fromJson","parse","toJson","quantityMax","qtyOpt","fulfilmentProvider","checkout","setService","setSettings","settings","success","status","headers","statusCode","$injector","_obj","deferred","$http","post",10,"$provide","decorator","$delegate","_compile",11,"$timeout","$compile","$templateCache","startTop","verticalSpacing","defaultDuration","defaultTemplateUrl","position","container","body","maximumOpen","messageElements","openNotificationsScope","notify","message","duration","classes","$new","$position","$message","$classes","$messageTemplate","messageTemplate","numToClose","$close","cache","template","templateElement","propertyName","currentTarget","style","opacity","originalEvent","layoutMessages","messageTemplateElement","children","hasClass","$centerMargin","css","currentY","shadowHeight","height","top","retVal","close","defineProperty","isUndefined","closeAll","put",12,"getWindowScrollTop","pageYOffset","iebody","compatMode","documentElement","scrollTop","uiScrollpointTarget","onScroll","limit","absolute","uiScrollpoint","offsetTop","offset","$target","addClass","scrollpointGroup","group","getElementById","fixLimit","removeClass","$element","on","off",13,"securedStates","stateAuthenticated","stateObject","$requireAuth","$location","loginRedirectState","checkState","authStateRequired","current","$onAuth","event","toState","toParams","fromState","fromParams","preventDefault","transitionTo",14,"sharedScopeDefinition","urlFactory","getCurrentUrl","popupWinAttrs","socialWidth","customUrl","absUrl","nodeName","win","open","customHandler","$event","$url","linker","shareUrl","encodeURIComponent","media","description",15,"FbObj","refUrl","isDbOnline","keepOnline","db","_refUrl","databases","dbName","Name","dbUrl","Date","getTime","params","fbObj","queryRef","orderBy","startAt","endAt","equalTo","limitToFirst","limitToLast","objectRepo","load","loadList","defaultOpt","onComplete","defers","_defaultOpt","promises","loadObj","all","update","removePrev","refUrlParams","replacedRefUrl","replaceParamsInString","realKey","goOnline","apply","debug","goOffline","consecutive","isLast","nonConsecutive","_isConsecutive","move","from","to","sourceRef","targetRef","$communicate","request","resolveVal","response","resUrlArr","replaceParamsInObj","getResponse","refs","derfer","onSuccess","isRenew","onError","getMultipleRefVal","iterate","currentRefs","onGoingRef","indicator","waitUntil","refNum","keys","WaitUntil","activeRefUrl","pathArr","tPos",16,"doSearch","query","showResults","dat","$digest",17,"jsonp","preLoadList","stripeKey","Stripe","setPublishableKey","$mdSidenav","model","toggleSidenav","menuId","toggle","sideNavLogout","$unauth","loggedIn","$uid","phone",18,"$controller","pagePlusDirective","resolveObj","refresh","locals","condition","invoke","resolved","linkFn",19,"ModelObj","modelPath","modelPathArr","keyArrOrStr","valuePathArr","evalAssignment","action","view","eval",{"end":{"file":0,"comments_before":[],"nlb":false,"endpos":92481,"endcol":24,"endline":2213,"pos":92477,"col":20,"line":2213,"value":"data","type":"name","_comments_dumped":true},"start":{"file":0,"comments_before":[],"nlb":false,"endpos":92481,"endcol":24,"endline":2213,"pos":92477,"col":20,"line":2213,"value":"data","type":"name","_comments_dumped":true},"name":"data"},"_stateTransitionCache","activeStates","goWithData","clear","clearAgain",20,"someVar","randomString","chars","random","str","string","param","objString","replacedObj","paramReplacedKey","lhsArr","rhsArr","toPathArr","strOrArr","lhsPath","lhs","rhs","lhsPathArr","rhsPathArr","target","opts","step","object","prev","isarray","safe","isbuffer","isobject","newKey","delimiter","maxDepth","currentDepth","output","unflatten","getkey","parsedKey","overwrite","key1","key2","recipient","cloneObject","temp","constructor","filterRawData","rawDataObj","filterModel","isParam","paramHeader","prevKey","goDeeperOrStop","filterKey","nextLevelFilter","escape","useModelHeader","removeUndefined","fail","keyStr","structureClone","checkIfPropertyExist","arr","isExist","conditionNum","that","satisfiedCondition","ucfirst","toUpperCase","DelayExec","delay","DelayedFilter","source","delayedTime","reset","isObjEmpty","getOwnPropertyNames","customDelay","timeout","clearTimeout","setTimeout",21,22,"order","sum","products","watchFilterOpts","watchFilter","watchSource",23,"customFn",24,"directiveName","$mdDialog","resetMessages","msg","emailerr","emailmsg","profile","$bindTo","ub","closeDialog","hide","logout","cancel","changePassword","pass","confirm","newPass","$changePassword","oldPassword","newPassword","changeEmail","newEmail","oldEmail","$changeEmail","done","showAccount","parentEl","show","parent","targetEvent","clickOutsideToClose","stateParams",25,"app","$errorHandler","views","","controllerAs","content",26,"filterUtil","$firebaseArray","loadOrders","startDay","endDay","now","day","orderByChild","allOrdersSrc","unwatchFilter","filterOpt","refreshFilter","search","searcKeyhArr","filters","statusOptions","orderStatus","changeOrderStatus","orderId","userId","changedStatus","noop","calcSubTotal","removeOrder","reason",27,"addOpt","selectedProduct","removeOpt","selectProduct","productId","updateProduct","removeProduct","createProduct","randomId","itemName","image","listPrice","clearProduct",28,29,"invoice","date","OK",30,"redirectTo","showError","assertValidAccountProps","createMode","login","$createUser","showLogin",31,"myOrdersSrc",32,33,"pid",34,"showDetail",35,"updateContactInfo","isEmailChanged","clientEmail","isPhoneChanged","clientPhone","uploadList","isTimeValid","dt","getDay","alert","getPaymentData","payment","window","token","prepareOrderData","method","paymentMethod","clientName","clientId","note","schedule","shipment","uploadOrder","mainOrderStructure","$productId","selectedOption","mainOrderData","userOderReceiptStructure","userReceiptData","batchOrderData","isCharged","emptyCart","number","expiry","cvc","submitOrder","waiting","stripeCallback","hour","minute","minDate","maxDate","getFullYear","getMonth","getDate","changeDt","setHours","setMinutes","changeTime","refreshTotalItems","cartTotalItems",36,"changed","inputDelayTest","iElement","iAttrs",37,"isLoaded","updateDescription","firebaseObject","path1","path2","path3"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\nconsole.log('app loaded');\r\nconsole.log(obsidian.getAppDependencies());\r\n// Declare app level module which depends on filters, and services\r\n//angular.module('myApp', obsidian.getAppDependencies())\r\n//\r\n//    .run(function ($rootScope, Auth, init) {\r\n//        // track status of authentication\r\n//        init.then(function(res){\r\n//        });\r\n//        //Auth.$onAuth(function (user) {\r\n//        //    $rootScope.user=user;\r\n//        //    $rootScope.loggedIn = !!user;\r\n//        //});\r\n//    });\r\n//\r\n//angular.bootstrap(document, ['myApp']);\r\n//obsidian.bootstrap();\r\n\r\n//angular.bootstrap(document, ['myApp']);\r\nangular.module('myApp', obsidian.getAppDependencies())\r\n    .run(/*@ngInject*/ function ($rootScope, Auth, init) {\r\n        // track status of authentication\r\n        console.log('myApp');\r\n        init.then(function(res){\r\n        });\r\n        //Auth.$onAuth(function (user) {\r\n        //    $rootScope.user=user;\r\n        //    $rootScope.loggedIn = !!user;\r\n        //});\r\n    });\r\nangular.bootstrap(document, ['myApp']);\r\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\r\nconsole.log('app loaded');\r\nconsole.log(obsidian.getAppDependencies());\r\n// Declare app level module which depends on filters, and services\r\n//angular.module('myApp', obsidian.getAppDependencies())\r\n//\r\n//    .run(function ($rootScope, Auth, init) {\r\n//        // track status of authentication\r\n//        init.then(function(res){\r\n//        });\r\n//        //Auth.$onAuth(function (user) {\r\n//        //    $rootScope.user=user;\r\n//        //    $rootScope.loggedIn = !!user;\r\n//        //});\r\n//    });\r\n//\r\n//angular.bootstrap(document, ['myApp']);\r\n//obsidian.bootstrap();\r\n\r\n//angular.bootstrap(document, ['myApp']);\r\nangular.module('myApp', obsidian.getAppDependencies())\r\n    .run(/*@ngInject*/ function ($rootScope, Auth, init) {\r\n        // track status of authentication\r\n        console.log('myApp');\r\n        init.then(function(res){\r\n        });\r\n        //Auth.$onAuth(function (user) {\r\n        //    $rootScope.user=user;\r\n        //    $rootScope.loggedIn = !!user;\r\n        //});\r\n    });\r\nangular.bootstrap(document, ['myApp']);\r\n\n},{}],2:[function(require,module,exports){\n(function (angular) {\r\n    'use strict';\r\n\r\n    obsidian.module('myApp.appVersion', [])\r\n        .directive('appVersion', /*@ngInject*/ function (version) {\r\n            return function (scope, elm) {\r\n                elm.text(version);\r\n            };\r\n        });\r\n})(angular);\n},{}],3:[function(require,module,exports){\n(function (angular) {\r\n    'use strict';\r\n    obsidian.module('firebase.auth', ['firebase', 'firebase.utils'])\r\n        .factory('Auth', /*@ngInject*/ function ($firebaseAuth, fbutil, $q, FBURL, snippet, $firebase) {\r\n\r\n            var Auth = $firebaseAuth(fbutil.ref());\r\n\r\n            Auth.checkIfAccountExistOnFb = function (authData) {\r\n                var def = $q.defer();\r\n                if (!authData) def.reject('AUTH_NEEDED');\r\n                var ref = fbutil.ref('users', authData.uid, 'createdTime');\r\n                ref.once('value', function (snap) {\r\n                    if (snap.val() === null) {\r\n                        def.resolve(authData);\r\n                    }\r\n                }, function (err) {\r\n                    def.reject(err)\r\n                });\r\n                return def.promise\r\n            };\r\n\r\n            Auth.createAccount = function (authData, opt) {\r\n                if (!authData) return;\r\n                if (opt === undefined || (typeof opt !== 'object')) {\r\n                    var ref = fbutil.ref('users', authData.uid);\r\n                    return fbutil.handler(function (cb) {\r\n                        ref.set(Auth.basicAccountUserData(authData, opt), cb);\r\n                    })\r\n                } else {\r\n                    var def = $q.defer();\r\n                    if (!!opt.structure) {\r\n                        var rawData = snippet.flatten(authData, opt.flattenConfig);\r\n                        rawData.authData = authData;\r\n                        var values = snippet.createBatchUpdateValues(rawData, opt.structure);\r\n                        console.log(JSON.stringify(values));\r\n                        $firebase.batchUpdate(values, opt.isConsecutive).then(function () {\r\n                            def.resolve();\r\n                        }, opt.errorHandler);\r\n                    } else {\r\n                        def.reject('USERDATA_STRUCTURE_NEEDED')\r\n                    }\r\n                    return def.promise\r\n                }\r\n            };\r\n            //Example\r\n            //var opt={\r\n            //    structure:[\r\n            //        {\r\n            //            refUrl:'users/$uid',\r\n            //            value:'authData' //主要user acc, 將全部authData update 到此refUrl\r\n            //        },\r\n            //        {\r\n            //            refUrl:'userList/$uid', //產生一個只有 name和email 的list item\r\n            //            value:{\r\n            //                name:'password.name', //此string 代表authData.password.name\r\n            //                email:'password.email'\r\n            //            }\r\n            //        }\r\n            //    ]\r\n            //};\r\n\r\n            /*Auth.checkThenCreateAccount=function(authData){\r\n             var def=$q.defer();\r\n             Auth.checkIfAccountExistOnFb(authData).then(\r\n\r\n             function(snap){\r\n             if(snap===null) Auth.createAccount(authData).then(\r\n             function(authData){def.resolve(authData);},\r\n             function(err){def.reject(err)}\r\n             )},\r\n             function(err){\r\n             def.reject(err)\r\n             });\r\n             return def.promise\r\n             };*/\r\n\r\n            Auth.basicAccountUserData = function (authData) {\r\n                var provider = authData.provider,\r\n                    name = authData[provider].displayName || authData.uid,\r\n                    email = authData[provider].email || null,\r\n                    profileImageURL = authData[provider].profileImageURL || null;\r\n                if (provider === 'password') name = snippet.firstPartOfEmail(authData.password.email);\r\n                var basicUserInfo = {\r\n                    createdTime: Firebase.ServerValue.TIMESTAMP,\r\n                    name: name,\r\n                    email: email,\r\n                    profileImageURL: profileImageURL\r\n                };\r\n                basicUserInfo[provider] = {\r\n                    id: authData[provider].id || null\r\n                };\r\n                return basicUserInfo\r\n            };\r\n\r\n\r\n            Auth.loginWithProvider = function (provider, options) {\r\n                var opt = typeof options === 'object' ? options : {};\r\n                switch (provider) {\r\n                    case 'password':\r\n                        return Auth.$authWithPassword({email: opt.email, password: opt.password}, opt);\r\n                        break;\r\n                    case 'custom':\r\n                        return Auth.$authWithCustomToken(opt.customToken, opt);\r\n                        break;\r\n                    case 'anonymous':\r\n                        opt.rememberMe = opt.rememberMe || 'none';\r\n                        return Auth.$authAnonymously(opt);\r\n                        break;\r\n                    default:\r\n                        if (opt.popup === false) {\r\n                            return Auth.$authWithOAuthRedirect(provider, opt);\r\n                        } else {\r\n                            return Auth.$authWithOAuthPopup(provider, opt);\r\n                        }\r\n                        break;\r\n                }\r\n            };\r\n\r\n            Auth.removeUserData = function (authData, extraCallBack) {\r\n                var ref = new Firebase((FBURL + 'users/' + authData.uid));   //TODO: 𩄍惩撠滚𩄍firebase𩄍𣈲𩄍\r\n\r\n                ref.remove(function (err) {\r\n                    if (err) {\r\n                        console.log(err.code);\r\n                    } else {\r\n                        if (extraCallBack) extraCallBack(authData);\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n            return Auth;\r\n        });\r\n})(angular);\r\n\r\n\n},{}],4:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n    var mod = obsidian.module('myApp.errorHandler',[]),\r\n        state = 'error',\r\n        url = '/error/:errorId',\r\n        ctrlName = 'errorCtrl',\r\n        templateUrl = 'components/errorHandler/error.html';\r\n\r\n\r\n    mod.controller(ctrlName, /*@ngInject*/ function ($scope, $stateParams) {\r\n        //create your own controller here\r\n        $scope.error=$stateParams\r\n    });\r\n\r\n    mod.config(/*@ngInject*/ function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    });\r\n\r\n    mod.factory('$errorHandler', /*@ngInject*/ function ($state) {\r\n        var errorType={\r\n\r\n        };\r\n\r\n        function openErrorPage(opt) {\r\n            $state.go('error', opt);\r\n            if (!$scope.$$phase) $scope.$apply(); //確保成功轉換頁面\r\n        }\r\n\r\n        return function(opt){\r\n            var _opt=opt||{};\r\n            if(!_opt.type){\r\n                return function(error){\r\n                    console.log(JSON.stringify(error));\r\n                }\r\n            } else if(_opt.openErrorPage){\r\n                openErrorPage(_opt)\r\n            }\r\n        };\r\n    });\r\n})(angular);\n},{}],5:[function(require,module,exports){\n(function (angular) {\r\n    'use strict';\r\n    obsidian.module('myApp.filters', [])\r\n        .filter('reverse', /*@ngInject*/ function () {\r\n            return function (items) {\r\n                return items.slice().reverse();\r\n            }\r\n        })\r\n        .filter('consecutive', /*@ngInject*/ function ($filter, snippet) {\r\n            return function (items, input, isReverse) {\r\n                var _items = items || [];\r\n                var result = angular.copy(_items);\r\n\r\n                if (typeof input === 'object') {\r\n                    angular.forEach(input, function (value, key) {\r\n                        if (!value && value !== '') return;\r\n                        if (value === true) {\r\n                            result = $filter('filter')(result, key);\r\n                        } else {\r\n                            result = $filter('filter')(result, value);\r\n                        }\r\n                    });\r\n                } else if (typeof input === 'string') {\r\n                    input = input.trim();\r\n                    var keyArray = input.split(' ');\r\n                    for (var i = 0; i < keyArray.length; i++) {\r\n                        result = $filter('filter')(result, keyArray[i]);\r\n                    }\r\n                    result = input === '' ? _items : result\r\n                }\r\n                return isReverse ? result.slice().reverse() : result\r\n            }\r\n        })\r\n        ////see http://jsfiddle.net/nirmalkumar_86/9F89Q/5/\r\n        .filter('filterMultiple', /*@ngInject*/ function ($filter) {\r\n            return function (items, keyObj) {\r\n                var filterObj = {\r\n                    data: items,\r\n                    filteredData: [],\r\n                    applyFilter: function (obj, key) {\r\n                        var fData = [];\r\n                        if (this.filteredData.length == 0)\r\n                            this.filteredData = this.data;\r\n                        if (obj) {\r\n                            var fObj = {};\r\n                            if (!angular.isArray(obj)) {\r\n                                fObj[key] = obj;\r\n                                fData = fData.concat($filter('filter')(this.filteredData, fObj));\r\n                            } else if (angular.isArray(obj)) {\r\n                                if (obj.length > 0) {\r\n                                    for (var i = 0; i < obj.length; i++) {\r\n                                        if (angular.isDefined(obj[i])) {\r\n                                            fObj[key] = obj[i];\r\n                                            fData = fData.concat($filter('filter')(this.filteredData, fObj));\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                            if (fData.length > 0) {\r\n                                this.filteredData = fData;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                if (keyObj) {\r\n                    angular.forEach(keyObj, function (obj, key) {\r\n                        filterObj.applyFilter(obj, key);\r\n                    });\r\n                }\r\n\r\n                return filterObj.filteredData;\r\n            }\r\n        })\r\n        .filter('unique', /*@ngInject*/ function () {\r\n            return function (input, key) {\r\n                var unique = {};\r\n                var uniqueList = [];\r\n                for (var i = 0; i < input.length; i++) {\r\n                    if (typeof unique[input[i][key]] == \"undefined\") {\r\n                        unique[input[i][key]] = \"\";\r\n                        uniqueList.push(input[i]);\r\n                    }\r\n                }\r\n                return uniqueList;\r\n            };\r\n        })\r\n        //see https://github.com/vpegado/angular-percentage-filter\r\n        .filter('percentage', /*@ngInject*/ function ($window) {\r\n            return function (input, decimals, suffix) {\r\n                decimals = angular.isNumber(decimals) ? decimals : 3;\r\n                suffix = suffix || '%';\r\n                if ($window.isNaN(input)) {\r\n                    return '';\r\n                }\r\n                return Math.round(input * Math.pow(10, decimals + 2)) / Math.pow(10, decimals) + suffix\r\n            };\r\n        });\r\n})(angular);\n},{}],6:[function(require,module,exports){\n(function (angular) {\r\n    var mod = obsidian.module('firebase.utils', ['firebase', 'myApp.config']);\r\n\r\n// a simple wrapper on Firebase and AngularFire to simplify deps and keep things DRY\r\n    mod.factory('fbutil',/*@ngInject*/ function ($window, FBURL, $q) {\r\n        \"use strict\";\r\n\r\n        var utils = {\r\n            // convert a node or Firebase style callback to a future\r\n            handler: function (fn, context) {\r\n                return utils.defer(function (def) {\r\n                    fn.call(context, function (err, result) {\r\n                        if (err !== null) {\r\n                            def.reject(err);\r\n                        }\r\n                        else {\r\n                            def.resolve(result);\r\n                        }\r\n                    });\r\n                });\r\n            },\r\n\r\n            // abstract the process of creating a future/promise\r\n            defer: function (fn, context) {\r\n                var def = $q.defer();\r\n                fn.call(context, def);\r\n                return def.promise;\r\n            },\r\n\r\n            ref: firebaseRef\r\n        };\r\n\r\n        return utils;\r\n\r\n        function pathRef(args) {\r\n            for (var i = 0; i < args.length; i++) {\r\n                if (angular.isArray(args[i])) {\r\n                    args[i] = pathRef(args[i]);\r\n                }\r\n                else if (typeof args[i] !== 'string') {\r\n                    throw new Error('Argument ' + i + ' to firebaseRef is not a string: ' + args[i]);\r\n                }\r\n            }\r\n            return args.join('/');\r\n        }\r\n\r\n        /**\r\n         * Example:\r\n         * <code>\r\n         *    function(firebaseRef) {\r\n         *       var ref = firebaseRef('path/to/data');\r\n         *    }\r\n         * </code>\r\n         *\r\n         * @function\r\n         * @name firebaseRef\r\n         * @param {String|Array...} path relative path to the root folder in Firebase instance\r\n         * @return a Firebase instance\r\n         */\r\n        function firebaseRef(path) {\r\n            var ref = new $window.Firebase(FBURL);\r\n            var args = Array.prototype.slice.call(arguments);\r\n            if (args.length) {\r\n                ref = ref.child(pathRef(args));\r\n            }\r\n            return ref;\r\n        }\r\n    });\r\n})(angular);\n},{}],7:[function(require,module,exports){\n/*!\r\n * angular-ui-mask\r\n * https://github.com/angular-ui/ui-mask\r\n * Version: 1.4.3 - 2015-08-26T07:27:36.805Z\r\n * License: MIT\r\n */\r\n\r\n!function(){\"use strict\";angular.module(\"ui.mask\",[]).value(\"uiMaskConfig\",{maskDefinitions:{9:/\\d/,A:/[a-zA-Z]/,\"*\":/[a-zA-Z0-9]/},clearOnBlur:!0,eventsToHandle:[\"input\",\"keyup\",\"click\",\"focus\"]}).directive(\"uiMask\",[\"uiMaskConfig\",\"$parse\",function(e,n){function t(e){return e===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(e.type||e.href||~e.tabIndex)}return{priority:100,require:\"ngModel\",restrict:\"A\",compile:function(){var r=e;return function(e,i,u,a){function o(e){return angular.isDefined(e)?(y(e),F?(d(),h(),!0):f()):f()}function l(e){e&&(R=e,F&&i.val(m(v(i.val()))))}function s(e){return F?(j=v(e||\"\"),z=p(j),a.$setValidity(\"mask\",z),z&&j.length?m(j):void 0):e}function c(e){return F?(j=v(e||\"\"),z=p(j),a.$viewValue=j.length?m(j):\"\",a.$setValidity(\"mask\",z),\"\"===j&&u.required&&a.$setValidity(\"required\",!a.$error.required),z?j:void 0):e}function f(){return F=!1,g(),angular.isDefined(K)?i.attr(\"placeholder\",K):i.removeAttr(\"placeholder\"),angular.isDefined(N)?i.attr(\"maxlength\",N):i.removeAttr(\"maxlength\"),i.val(a.$modelValue),a.$viewValue=a.$modelValue,!1}function d(){j=Z=v(a.$modelValue||\"\"),q=H=m(j),z=p(j),u.maxlength&&i.attr(\"maxlength\",2*E[E.length-1]),K||i.attr(\"placeholder\",R);for(var e=a.$modelValue,n=a.$formatters.length;n--;)e=a.$formatters[n](e);a.$viewValue=e||\"\",a.$render()}function h(){I||(i.bind(\"blur\",k),i.bind(\"mousedown mouseup\",x),i.bind(W.eventsToHandle.join(\" \"),M),i.bind(\"paste\",w),I=!0)}function g(){I&&(i.unbind(\"blur\",k),i.unbind(\"mousedown\",x),i.unbind(\"mouseup\",x),i.unbind(\"input\",M),i.unbind(\"keyup\",M),i.unbind(\"click\",M),i.unbind(\"focus\",M),i.unbind(\"paste\",w),I=!1)}function p(e){return e.length?e.length>=T:!0}function v(e){var n=\"\",t=_.slice();return e=e.toString(),angular.forEach(P,function(n){e=e.replace(n,\"\")}),angular.forEach(e.split(\"\"),function(e){t.length&&t[0].test(e)&&(n+=e,t.shift())}),n}function m(e){var n=\"\",t=E.slice();return angular.forEach(R.split(\"\"),function(r,i){e.length&&i===t[0]?(n+=e.charAt(0)||\"_\",e=e.substr(1),t.shift()):n+=r}),n}function b(e){var n=angular.isDefined(u.uiMaskPlaceholder)?u.uiMaskPlaceholder:u.placeholder;return\"undefined\"!=typeof n&&n[e]?n[e]:\"_\"}function $(){return R.replace(/[_]+/g,\"_\").replace(/([^_]+)([a-zA-Z0-9])([^_])/g,\"$1$2_$3\").split(\"_\")}function y(e){var n=0;if(E=[],_=[],R=\"\",\"string\"==typeof e){T=0;var t=!1,r=0,i=e.split(\"\");angular.forEach(i,function(e,i){W.maskDefinitions[e]?(E.push(n),R+=b(i-r),_.push(W.maskDefinitions[e]),n++,t||T++):\"?\"===e?(t=!0,r++):(R+=e,n++)})}E.push(E.slice().pop()+1),P=$(),F=E.length>1?!0:!1}function k(){W.clearOnBlur&&(B=0,C=0,z&&0!==j.length||(q=\"\",i.val(\"\"),e.$apply(function(){a.$setViewValue(\"\")})))}function x(e){\"mousedown\"===e.type?i.bind(\"mouseout\",V):i.unbind(\"mouseout\",V)}function V(){C=D(this),i.unbind(\"mouseout\",V)}function w(){S(this,i.val().length)}function M(e){e=e||{};var n=e.which,t=e.type;if(16!==n&&91!==n){var r,u=i.val(),o=H,l=v(u),s=Z,c=A(this)||0,f=B||0,d=c-f,h=E[0],g=E[l.length]||E.slice().shift(),p=C||0,b=D(this)>0,$=p>0,y=u.length>o.length||p&&u.length>o.length-p,k=u.length<o.length||p&&u.length===o.length-p,x=n>=37&&40>=n&&e.shiftKey,V=37===n,w=8===n||\"keyup\"!==t&&k&&-1===d,M=46===n||\"keyup\"!==t&&k&&0===d&&!$,_=(V||w||\"click\"===t)&&c>h;if(C=D(this),!x&&(!b||\"click\"!==t&&\"keyup\"!==t)){if(\"input\"===t&&k&&!$&&l===s){for(;w&&c>h&&!O(c);)c--;for(;M&&g>c&&-1===E.indexOf(c);)c++;var R=E.indexOf(c);l=l.substring(0,R)+l.substring(R+1)}for(r=m(l),H=r,Z=l,i.val(r),a.$setViewValue(l),y&&h>=c&&(c=h+1),_&&c--,c=c>g?g:h>c?h:c;!O(c)&&c>h&&g>c;)c+=_?-1:1;(_&&g>c||y&&!O(f))&&c++,B=c,S(this,c)}}}function O(e){return E.indexOf(e)>-1}function A(e){if(!e)return 0;if(void 0!==e.selectionStart)return e.selectionStart;if(document.selection&&t(i[0])){e.focus();var n=document.selection.createRange();return n.moveStart(\"character\",e.value?-e.value.length:0),n.text.length}return 0}function S(e,n){if(!e)return 0;if(0!==e.offsetWidth&&0!==e.offsetHeight)if(e.setSelectionRange)t(i[0])&&(e.focus(),e.setSelectionRange(n,n));else if(e.createTextRange){var r=e.createTextRange();r.collapse(!0),r.moveEnd(\"character\",n),r.moveStart(\"character\",n),r.select()}}function D(e){return e?void 0!==e.selectionStart?e.selectionEnd-e.selectionStart:document.selection?document.selection.createRange().text.length:0:0}var E,_,R,P,T,j,q,z,H,Z,B,C,F=!1,I=!1,K=u.placeholder,N=u.maxlength,W={};u.uiOptions?(W=e.$eval(\"[\"+u.uiOptions+\"]\"),angular.isObject(W[0])&&(W=function(e,n){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(void 0===n[t]?n[t]=angular.copy(e[t]):angular.extend(n[t],e[t]));return n}(r,W[0]))):W=r,u.$observe(\"uiMask\",o),angular.isDefined(u.uiMaskPlaceholder)?u.$observe(\"uiMaskPlaceholder\",l):u.$observe(\"placeholder\",l);var G=!1;u.$observe(\"modelViewValue\",function(e){\"true\"===e&&(G=!0)}),e.$watch(u.ngModel,function(t){if(G&&t){var r=n(u.ngModel);r.assign(e,a.$viewValue)}}),a.$formatters.push(s),a.$parsers.push(c),i.bind(\"mousedown mouseup\",x),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(null===this)throw new TypeError;var n=Object(this),t=n.length>>>0;if(0===t)return-1;var r=0;if(arguments.length>1&&(r=Number(arguments[1]),r!==r?r=0:0!==r&&r!==1/0&&r!==-(1/0)&&(r=(r>0||-1)*Math.floor(Math.abs(r)))),r>=t)return-1;for(var i=r>=0?r:Math.max(t-Math.abs(r),0);t>i;i++)if(i in n&&n[i]===e)return i;return-1})}}}}])}();\n},{}],8:[function(require,module,exports){\n(function (angular) {\r\n    'use strict';\r\n    var mod = obsidian.module('ngFirebase', []);\r\n\r\n    mod.directive('ngFirebase', ['$firebase', function ($firebase) {\r\n        return {\r\n            restrict: 'A',\r\n            transclude: true,\r\n            scope: {\r\n                ngFirebase: '@',\r\n                loading: '@'\r\n            },\r\n            link: function (scope, element, attrs, ctrl, transcludeFn) {\r\n                function init() {\r\n                    var obj = $firebase.$object(scope.ngFirebase);\r\n                    element.append(scope.loading);\r\n                    obj.$loaded(appendTransclude, appendTransclude);\r\n\r\n                    var valueAs = attrs.valueAs || '$value',\r\n                        errorAs = attrs.errorAs || '$error';\r\n\r\n                    function appendTransclude(dataOrError) {\r\n                        element.empty();\r\n                        transcludeFn(function (clone, trclScope) {\r\n                            element.append(clone);\r\n                            if (dataOrError === obj) {\r\n                                if (attrs.pure) {\r\n                                    var pureValue = {};\r\n                                    angular.forEach(dataOrError, function (subValue, key) {\r\n                                        pureValue[key] = subValue\r\n                                    });\r\n                                    trclScope[valueAs] = dataOrError.$value ? dataOrError.$value : pureValue;\r\n                                } else {\r\n                                    trclScope[valueAs] = dataOrError.$value ? dataOrError.$value : dataOrError;\r\n                                }\r\n                                trclScope.$firebaseObject = dataOrError;\r\n                                trclScope.$eval(attrs.loaded);\r\n                            } else {\r\n                                trclScope[errorAs] = dataOrError;\r\n                                obj.$destroy();\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n\r\n                scope.$watch('ngFirebase', function () {\r\n                    if ($firebase.isRefUrlValid(scope.ngFirebase)) init();\r\n                });\r\n            }\r\n\r\n        };\r\n    }]);\r\n})(angular);\r\n\r\n\n},{}],9:[function(require,module,exports){\n(function (angular) {\r\n    'use strict';\r\n\r\n    angular.module('ngCart', ['ngCart.directives'])\r\n        .config([function () {\r\n\r\n        }])\r\n\r\n        .provider('$ngCart', function () {\r\n            this.$get = function () {\r\n            };\r\n        })\r\n\r\n        .run(['$rootScope', 'ngCart', 'ngCartItem', 'store', function ($rootScope, ngCart, ngCartItem, store) {\r\n\r\n            $rootScope.$on('ngCart:change', function () {\r\n                ngCart.$save();\r\n            });\r\n\r\n            if (angular.isObject(store.get('cart'))) {\r\n                ngCart.$restore(store.get('cart'));\r\n\r\n            } else {\r\n                ngCart.init();\r\n            }\r\n\r\n        }])\r\n\r\n        .service('ngCart', ['$rootScope', 'ngCartItem', 'store', function ($rootScope, ngCartItem, store) {\r\n\r\n            this.init = function () {\r\n                this.$cart = {\r\n                    shipping: null,\r\n                    taxRate: null,\r\n                    tax: null,\r\n                    items: []\r\n                };\r\n            };\r\n\r\n            this.addItem = function (id, name, price, quantity, data) {\r\n\r\n                var inCart = this.getItemById(id);\r\n\r\n                if (typeof inCart === 'object') {\r\n                    //Update quantity of an item if it's already in the cart\r\n                    inCart.setQuantity(quantity, false);\r\n                } else {\r\n                    var newItem = new ngCartItem(id, name, price, quantity, data);\r\n                    this.$cart.items.push(newItem);\r\n                    $rootScope.$broadcast('ngCart:itemAdded', newItem);\r\n                }\r\n\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n            };\r\n\r\n            this.getItemById = function (itemId) {\r\n                var items = this.getCart().items;\r\n                var build = false;\r\n\r\n                angular.forEach(items, function (item) {\r\n                    if (item.getId() === itemId) {\r\n                        build = item;\r\n                    }\r\n                });\r\n                return build;\r\n            };\r\n\r\n            this.setShipping = function (shipping) {\r\n                this.$cart.shipping = shipping;\r\n                return this.getShipping();\r\n            };\r\n\r\n            this.getShipping = function () {\r\n                if (this.getCart().items.length == 0) return 0;\r\n                return this.getCart().shipping;\r\n            };\r\n\r\n            this.setTaxRate = function (taxRate) {\r\n                this.$cart.taxRate = +parseFloat(taxRate).toFixed(2);\r\n                return this.getTaxRate();\r\n            };\r\n\r\n            this.getTaxRate = function () {\r\n                return this.$cart.taxRate\r\n            };\r\n\r\n            this.getTax = function () {\r\n                return +parseFloat(((this.getSubTotal() / 100) * this.getCart().taxRate )).toFixed(2);\r\n            };\r\n\r\n            this.setCart = function (cart) {\r\n                this.$cart = cart;\r\n                return this.getCart();\r\n            };\r\n\r\n            this.getCart = function () {\r\n                return this.$cart;\r\n            };\r\n\r\n            this.getItems = function () {\r\n                return this.getCart().items;\r\n            };\r\n\r\n            this.getTotalItems = function () {\r\n                var count = 0;\r\n                var items = this.getItems();\r\n                angular.forEach(items, function (item) {\r\n                    count += item.getQuantity();\r\n                });\r\n                return count;\r\n            };\r\n\r\n            this.getTotalUniqueItems = function () {\r\n                return this.getCart().items.length;\r\n            };\r\n\r\n            this.getSubTotal = function () {\r\n                var total = 0;\r\n                angular.forEach(this.getCart().items, function (item) {\r\n                    total += item.getTotal();\r\n                });\r\n                return +parseFloat(total).toFixed(2);\r\n            };\r\n\r\n            this.totalCost = function () {\r\n                return +parseFloat(this.getSubTotal() + this.getShipping() + this.getTax()).toFixed(2);\r\n            };\r\n\r\n            this.removeItem = function (index) {\r\n                this.$cart.items.splice(index, 1);\r\n                $rootScope.$broadcast('ngCart:itemRemoved', {});\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n\r\n            };\r\n\r\n            this.removeItemById = function (id) {\r\n                var cart = this.getCart();\r\n                angular.forEach(cart.items, function (item, index) {\r\n                    if (item.getId() === id) {\r\n                        cart.items.splice(index, 1);\r\n                    }\r\n                });\r\n                this.setCart(cart);\r\n                $rootScope.$broadcast('ngCart:itemRemoved', {});\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n            };\r\n\r\n            this.empty = function () {\r\n\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n                this.$cart.items = [];\r\n                localStorage.removeItem('cart');\r\n            };\r\n\r\n            this.isEmpty = function () {\r\n\r\n                return (this.$cart.items.length > 0 ? false : true);\r\n\r\n            };\r\n\r\n            this.toObject = function () {\r\n\r\n                if (this.getItems().length === 0) return false;\r\n\r\n                var items = [];\r\n                angular.forEach(this.getItems(), function (item) {\r\n                    items.push(item.toObject());\r\n                });\r\n\r\n                return {\r\n                    shipping: this.getShipping(),\r\n                    tax: this.getTax(),\r\n                    taxRate: this.getTaxRate(),\r\n                    subTotal: this.getSubTotal(),\r\n                    totalCost: this.totalCost(),\r\n                    items: items\r\n                }\r\n            };\r\n\r\n\r\n            this.$restore = function (storedCart) {\r\n                var _self = this;\r\n                _self.init();\r\n                _self.$cart.shipping = storedCart.shipping;\r\n                _self.$cart.tax = storedCart.tax;\r\n\r\n                angular.forEach(storedCart.items, function (item) {\r\n                    _self.$cart.items.push(new ngCartItem(item._id, item._name, item._price, item._quantity, item._data));\r\n                });\r\n                this.$save();\r\n            };\r\n\r\n            this.$save = function () {\r\n                return store.set('cart', JSON.stringify(this.getCart()));\r\n            }\r\n\r\n        }])\r\n\r\n        .factory('ngCartItem', ['$rootScope', '$log', function ($rootScope, $log) {\r\n\r\n            var item = function (id, name, price, quantity, data) {\r\n                this.setId(id);\r\n                this.setName(name);\r\n                this.setPrice(price);\r\n                this.setQuantity(quantity);\r\n                this.setData(data);\r\n            };\r\n\r\n\r\n            item.prototype.setId = function (id) {\r\n                if (id)  this._id = id;\r\n                else {\r\n                    $log.error('An ID must be provided');\r\n                }\r\n            };\r\n\r\n            item.prototype.getId = function () {\r\n                return this._id;\r\n            };\r\n\r\n\r\n            item.prototype.setName = function (name) {\r\n                if (name)  this._name = name;\r\n                else {\r\n                    $log.error('A name must be provided');\r\n                }\r\n            };\r\n            item.prototype.getName = function () {\r\n                return this._name;\r\n            };\r\n\r\n            item.prototype.setPrice = function (price) {\r\n                var priceFloat = parseFloat(price);\r\n                if (priceFloat) {\r\n                    if (priceFloat <= 0) {\r\n                        $log.error('A price must be over 0');\r\n                    } else {\r\n                        this._price = (priceFloat);\r\n                    }\r\n                } else {\r\n                    $log.error('A price must be provided');\r\n                }\r\n            };\r\n            item.prototype.getPrice = function () {\r\n                return this._price;\r\n            };\r\n\r\n\r\n            item.prototype.setQuantity = function (quantity, relative) {\r\n\r\n\r\n                var quantityInt = parseInt(quantity);\r\n                if (quantityInt % 1 === 0) {\r\n                    if (relative === true) {\r\n                        this._quantity += quantityInt;\r\n                    } else {\r\n                        this._quantity = quantityInt;\r\n                    }\r\n                    if (this._quantity < 1) this._quantity = 1;\r\n\r\n                } else {\r\n                    this._quantity = 1;\r\n                    $log.info('Quantity must be an integer and was defaulted to 1');\r\n                }\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n\r\n            };\r\n\r\n            item.prototype.getQuantity = function () {\r\n                return this._quantity;\r\n            };\r\n\r\n            item.prototype.setData = function (data) {\r\n                if (data) this._data = data;\r\n            };\r\n\r\n            item.prototype.getData = function () {\r\n                if (this._data) return this._data;\r\n                else $log.info('This item has no data');\r\n            };\r\n\r\n\r\n            item.prototype.getTotal = function () {\r\n                return +parseFloat(this.getQuantity() * this.getPrice()).toFixed(2);\r\n            };\r\n\r\n            item.prototype.toObject = function () {\r\n                return {\r\n                    id: this.getId(),\r\n                    name: this.getName(),\r\n                    price: this.getPrice(),\r\n                    quantity: this.getQuantity(),\r\n                    data: this.getData(),\r\n                    total: this.getTotal()\r\n                }\r\n            };\r\n\r\n            return item;\r\n\r\n        }])\r\n\r\n        .service('store', ['$window', function ($window) {\r\n\r\n            return {\r\n\r\n                get: function (key) {\r\n                    if ($window.localStorage [key]) {\r\n                        var cart = angular.fromJson($window.localStorage [key]);\r\n                        return JSON.parse(cart);\r\n                    }\r\n                    return false;\r\n\r\n                },\r\n\r\n\r\n                set: function (key, val) {\r\n\r\n                    if (val === undefined) {\r\n                        $window.localStorage.removeItem(key);\r\n                    } else {\r\n                        $window.localStorage [key] = angular.toJson(val);\r\n                    }\r\n                    return $window.localStorage [key];\r\n                }\r\n            }\r\n        }])\r\n\r\n        .controller('CartController', ['$scope', 'ngCart', function ($scope, ngCart) {\r\n            $scope.ngCart = ngCart;\r\n\r\n        }])\r\n\r\n        .value('version', '1.0.0');\r\n    'use strict';\r\n\r\n\r\n    angular.module('ngCart.directives', ['ngCart.fulfilment'])\r\n\r\n        .controller('CartController', ['$scope', 'ngCart', function ($scope, ngCart) {\r\n            $scope.ngCart = ngCart;\r\n        }])\r\n\r\n        .directive('ngcartAddtocart', ['ngCart', function (ngCart) {\r\n            return {\r\n                restrict: 'E',\r\n                controller: 'CartController',\r\n                scope: {\r\n                    id: '@',\r\n                    name: '@',\r\n                    quantity: '@',\r\n                    quantityMax: '@',\r\n                    price: '@',\r\n                    data: '='\r\n                },\r\n                transclude: true,\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'template/ngCart/addtocart.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                },\r\n                link: function (scope, element, attrs) {\r\n                    scope.attrs = attrs;\r\n                    scope.inCart = function () {\r\n                        return ngCart.getItemById(attrs.id);\r\n                    };\r\n\r\n                    if (scope.inCart()) {\r\n                        scope.q = ngCart.getItemById(attrs.id).getQuantity();\r\n                    } else {\r\n                        scope.q = parseInt(scope.quantity);\r\n                    }\r\n\r\n                    scope.qtyOpt = [];\r\n                    for (var i = 1; i <= scope.quantityMax; i++) {\r\n                        scope.qtyOpt.push(i);\r\n                    }\r\n\r\n                }\r\n\r\n            };\r\n        }])\r\n\r\n        .directive('ngcartCart', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                controller: 'CartController',\r\n                scope: {},\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'template/ngCart/cart.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                },\r\n                link: function (scope, element, attrs) {\r\n\r\n                }\r\n            };\r\n        }])\r\n\r\n        .directive('ngcartSummary', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                controller: 'CartController',\r\n                scope: {},\r\n                transclude: true,\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'template/ngCart/summary.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                }\r\n            };\r\n        }])\r\n\r\n        .directive('ngcartCheckout', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                controller: ('CartController', ['$rootScope', '$scope', 'ngCart', 'fulfilmentProvider', function ($rootScope, $scope, ngCart, fulfilmentProvider) {\r\n                    $scope.ngCart = ngCart;\r\n\r\n                    $scope.checkout = function () {\r\n                        fulfilmentProvider.setService($scope.service);\r\n                        fulfilmentProvider.setSettings($scope.settings);\r\n                        fulfilmentProvider.checkout()\r\n                            .success(function (data, status, headers, config) {\r\n                                $rootScope.$broadcast('ngCart:checkout_succeeded', data);\r\n                            })\r\n                            .error(function (data, status, headers, config) {\r\n                                $rootScope.$broadcast('ngCart:checkout_failed', {\r\n                                    statusCode: status,\r\n                                    error: data\r\n                                });\r\n                            });\r\n                    }\r\n                }]),\r\n                scope: {\r\n                    service: '@',\r\n                    settings: '='\r\n                },\r\n                transclude: true,\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'template/ngCart/checkout.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                }\r\n            };\r\n        }]);\r\n\r\n    angular.module('ngCart.fulfilment', [])\r\n        .service('fulfilmentProvider', ['$injector', function ($injector) {\r\n\r\n            this._obj = {\r\n                service: undefined,\r\n                settings: undefined\r\n            };\r\n\r\n            this.setService = function (service) {\r\n                this._obj.service = service;\r\n            };\r\n\r\n            this.setSettings = function (settings) {\r\n                this._obj.settings = settings;\r\n            };\r\n\r\n            this.checkout = function () {\r\n                var provider = $injector.get('ngCart.fulfilment.' + this._obj.service);\r\n                return provider.checkout(this._obj.settings);\r\n\r\n            }\r\n\r\n        }])\r\n\r\n\r\n        .service('ngCart.fulfilment.log', ['$q', '$log', 'ngCart', function ($q, $log, ngCart) {\r\n\r\n            this.checkout = function () {\r\n\r\n                var deferred = $q.defer();\r\n\r\n                $log.info(ngCart.toObject());\r\n                deferred.resolve({\r\n                    cart: ngCart.toObject()\r\n                });\r\n\r\n                return deferred.promise;\r\n\r\n            }\r\n\r\n        }])\r\n\r\n        .service('ngCart.fulfilment.http', ['$http', 'ngCart', function ($http, ngCart) {\r\n\r\n            this.checkout = function (settings) {\r\n                return $http.post(settings.url,\r\n                    {data: ngCart.toObject(), options: settings.options});\r\n            }\r\n        }])\r\n\r\n\r\n        .service('ngCart.fulfilment.paypal', ['$http', 'ngCart', function ($http, ngCart) {\r\n\r\n\r\n        }]);\r\n})(angular);\n},{}],10:[function(require,module,exports){\n(function (angular) {\r\n    /**\r\n     * Wraps ng-cloak so that, instead of simply waiting for Angular to compile, it waits until\r\n     * Auth resolves with the remote Firebase services.\r\n     *\r\n     * <code>\r\n     *    <div ng-cloak>Authentication has resolved.</div>\r\n     * </code>\r\n     */\r\n    var mod = obsidian.module('myApp.ngcloakDecorator', []);\r\n\r\n    mod.config(['$provide', function ($provide) {\r\n        // adapt ng-cloak to wait for auth before it does its magic\r\n        $provide.decorator('ngCloakDirective', ['$delegate', 'Auth',\r\n            function ($delegate, Auth) {\r\n                var directive = $delegate[0];\r\n                // make a copy of the old directive\r\n                var _compile = directive.compile;\r\n                directive.compile = function (element, attr) {\r\n                    Auth.$waitForAuth().then(function () {\r\n                        // after auth, run the original ng-cloak directive\r\n                        _compile.call(directive, element, attr);\r\n                    });\r\n                };\r\n                // return the modified directive\r\n                return $delegate;\r\n            }]);\r\n    }]);\r\n})(angular);\r\n\r\n\r\n\n},{}],11:[function(require,module,exports){\n(function (angular) {\r\n    // see https://github.com/cgross/angular-notify/blob/master/dist/angular-notify.js\r\n    var mod = angular.module('ngNotify', []);\r\n\r\n    mod.factory('ngNotify', ['$timeout', '$http', '$compile', '$templateCache', '$rootScope',\r\n        function ($timeout, $http, $compile, $templateCache, $rootScope) {\r\n\r\n            var startTop = 10;\r\n            var verticalSpacing = 15;\r\n            var defaultDuration = 10000;\r\n            var defaultTemplateUrl = 'angular-notify.html';\r\n            var position = 'center';\r\n            var container = document.body;\r\n            var maximumOpen = 0;\r\n\r\n            var messageElements = [];\r\n            var openNotificationsScope = [];\r\n\r\n            var notify = function (args) {\r\n\r\n                if (typeof args !== 'object') {\r\n                    args = {message: args};\r\n                }\r\n\r\n                args.duration = args.duration ? args.duration : defaultDuration;\r\n                args.templateUrl = args.templateUrl ? args.templateUrl : defaultTemplateUrl;\r\n                args.container = args.container ? args.container : container;\r\n                args.classes = args.classes ? args.classes : '';\r\n\r\n                var scope = args.scope ? args.scope.$new() : $rootScope.$new();\r\n                scope.$position = args.position ? args.position : position;\r\n                scope.$message = args.message;\r\n                scope.$classes = args.classes;\r\n                scope.$messageTemplate = args.messageTemplate;\r\n\r\n                if (maximumOpen > 0) {\r\n                    var numToClose = (openNotificationsScope.length + 1) - maximumOpen;\r\n                    for (var i = 0; i < numToClose; i++) {\r\n                        openNotificationsScope[i].$close();\r\n                    }\r\n                }\r\n\r\n                $http.get(args.templateUrl, {cache: $templateCache}).success(function (template) {\r\n\r\n                    var templateElement = $compile(template)(scope);\r\n                    templateElement.bind('webkitTransitionEnd oTransitionEnd otransitionend transitionend msTransitionEnd', function (e) {\r\n                        if (e.propertyName === 'opacity' || e.currentTarget.style.opacity === 0 ||\r\n                            (e.originalEvent && e.originalEvent.propertyName === 'opacity')) {\r\n\r\n                            templateElement.remove();\r\n                            messageElements.splice(messageElements.indexOf(templateElement), 1);\r\n                            openNotificationsScope.splice(openNotificationsScope.indexOf(scope), 1);\r\n                            layoutMessages();\r\n                        }\r\n                    });\r\n\r\n                    if (args.messageTemplate) {\r\n                        var messageTemplateElement;\r\n                        for (var i = 0; i < templateElement.children().length; i++) {\r\n                            if (angular.element(templateElement.children()[i]).hasClass('cg-notify-message-template')) {\r\n                                messageTemplateElement = angular.element(templateElement.children()[i]);\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (messageTemplateElement) {\r\n                            messageTemplateElement.append($compile(args.messageTemplate)(scope));\r\n                        } else {\r\n                            throw new Error('ngNotify could not find the .ng-notify-message-template element in ' + args.templateUrl + '.');\r\n                        }\r\n                    }\r\n\r\n                    angular.element(args.container).append(templateElement);\r\n                    messageElements.push(templateElement);\r\n\r\n                    if (scope.$position === 'center') {\r\n                        $timeout(function () {\r\n                            scope.$centerMargin = '-' + (templateElement[0].offsetWidth / 2) + 'px';\r\n                        });\r\n                    }\r\n\r\n                    scope.$close = function () {\r\n                        templateElement.css('opacity', 0).attr('data-closing', 'true');\r\n                        layoutMessages();\r\n                    };\r\n\r\n                    var layoutMessages = function () {\r\n                        var j = 0;\r\n                        var currentY = startTop;\r\n                        for (var i = messageElements.length - 1; i >= 0; i--) {\r\n                            var shadowHeight = 10;\r\n                            var element = messageElements[i];\r\n                            var height = element[0].offsetHeight;\r\n                            var top = currentY + height + shadowHeight;\r\n                            if (element.attr('data-closing')) {\r\n                                top += 20;\r\n                            } else {\r\n                                currentY += height + verticalSpacing;\r\n                            }\r\n                            element.css('top', top + 'px').css('margin-top', '-' + (height + shadowHeight) + 'px').css('visibility', 'visible');\r\n                            j++;\r\n                        }\r\n                    };\r\n\r\n                    $timeout(function () {\r\n                        layoutMessages();\r\n                    });\r\n\r\n                    if (args.duration > 0) {\r\n                        $timeout(function () {\r\n                            scope.$close();\r\n                        }, args.duration);\r\n                    }\r\n\r\n                }).error(function (data) {\r\n                    throw new Error('Template specified for ngNotify (' + args.templateUrl + ') could not be loaded. ' + data);\r\n                });\r\n\r\n                var retVal = {};\r\n\r\n                retVal.close = function () {\r\n                    if (scope.$close) {\r\n                        scope.$close();\r\n                    }\r\n                };\r\n\r\n                Object.defineProperty(retVal, 'message', {\r\n                    get: function () {\r\n                        return scope.$message;\r\n                    },\r\n                    set: function (val) {\r\n                        scope.$message = val;\r\n                    }\r\n                });\r\n\r\n                openNotificationsScope.push(scope);\r\n\r\n                return retVal;\r\n\r\n            };\r\n\r\n            notify.config = function (args) {\r\n                startTop = !angular.isUndefined(args.startTop) ? args.startTop : startTop;\r\n                verticalSpacing = !angular.isUndefined(args.verticalSpacing) ? args.verticalSpacing : verticalSpacing;\r\n                defaultDuration = !angular.isUndefined(args.duration) ? args.duration : defaultDuration;\r\n                defaultTemplateUrl = args.templateUrl ? args.templateUrl : defaultTemplateUrl;\r\n                position = !angular.isUndefined(args.position) ? args.position : position;\r\n                container = args.container ? args.container : container;\r\n                maximumOpen = args.maximumOpen ? args.maximumOpen : maximumOpen;\r\n            };\r\n\r\n            notify.closeAll = function () {\r\n                for (var i = messageElements.length - 1; i >= 0; i--) {\r\n                    var element = messageElements[i];\r\n                    element.css('opacity', 0);\r\n                }\r\n            };\r\n\r\n            return notify;\r\n        }\r\n    ]);\r\n\r\n    mod.run(['$templateCache', function ($templateCache) {\r\n        'use strict';\r\n\r\n        $templateCache.put('angular-notify.html',\r\n            \"<div class=\\\"cg-notify-message\\\" ng-class=\\\"[$classes, \\n\" +\r\n            \"    $position === 'center' ? 'cg-notify-message-center' : '',\\n\" +\r\n            \"    $position === 'left' ? 'cg-notify-message-left' : '',\\n\" +\r\n            \"    $position === 'right' ? 'cg-notify-message-right' : '']\\\"\\n\" +\r\n            \"    ng-style=\\\"{'margin-left': $centerMargin}\\\">\\n\" +\r\n            \"\\n\" +\r\n            \"    <div ng-show=\\\"!$messageTemplate\\\">\\n\" +\r\n            \"        {{$message}}\\n\" +\r\n            \"    </div>\\n\" +\r\n            \"\\n\" +\r\n            \"    <div ng-show=\\\"$messageTemplate\\\" class=\\\"cg-notify-message-template\\\">\\n\" +\r\n            \"        \\n\" +\r\n            \"    </div>\\n\" +\r\n            \"\\n\" +\r\n            \"    <button type=\\\"button\\\" class=\\\"cg-notify-close\\\" ng-click=\\\"$close()\\\">\\n\" +\r\n            \"        <span aria-hidden=\\\"true\\\">&times;</span>\\n\" +\r\n            \"        <span class=\\\"cg-notify-sr-only\\\">Close</span>\\n\" +\r\n            \"    </button>\\n\" +\r\n            \"\\n\" +\r\n            \"</div>\"\r\n        );\r\n\r\n    }]);\r\n})(angular);\r\n\r\n\n},{}],12:[function(require,module,exports){\n/*! this module is modified from angular-ui-scrollpoint\r\n * see  https://github.com/angular-ui/ui-scrollpoint\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n    /**\r\n     * Adds a 'ui-scrollpoint' class to the element when the page scrolls past it's position.\r\n     * @param [offset] {int} optional Y-offset to override the detected offset.\r\n     *   Takes 300 (absolute) or -300 or +300 (relative to detected)\r\n     */\r\n    angular.module('ui.scrollpoint', [])\r\n        .directive('uiScrollpoint', ['$window', function ($window) {\r\n\r\n            function getWindowScrollTop() {\r\n                if (angular.isDefined($window.pageYOffset)) {\r\n                    return $window.pageYOffset;\r\n                } else {\r\n                    var iebody = (document.compatMode && document.compatMode !== 'BackCompat') ? document.documentElement : document.body;\r\n                    return iebody.scrollTop;\r\n                }\r\n            }\r\n\r\n            return {\r\n                require: '^?uiScrollpointTarget',\r\n                link: function (scope, elm, attrs, uiScrollpointTarget) {\r\n                    var absolute = true,\r\n                        shift = 0,\r\n                        fixLimit,\r\n                        $target = uiScrollpointTarget && uiScrollpointTarget.$element || angular.element($window);\r\n\r\n                    if (!attrs.uiScrollpoint) {\r\n                        absolute = false;\r\n                    } else if (typeof (attrs.uiScrollpoint) === 'string') {\r\n                        // charAt is generally faster than indexOf: http://jsperf.com/indexof-vs-charat\r\n                        if (attrs.uiScrollpoint.charAt(0) === '-') {\r\n                            absolute = false;\r\n                            shift = -parseFloat(attrs.uiScrollpoint.substr(1));\r\n                        } else if (attrs.uiScrollpoint.charAt(0) === '+') {\r\n                            absolute = false;\r\n                            shift = parseFloat(attrs.uiScrollpoint.substr(1));\r\n                        }\r\n                    }\r\n\r\n                    fixLimit = absolute ? attrs.uiScrollpoint : elm[0].offsetTop + shift;\r\n\r\n                    function onScroll() {\r\n\r\n                        var limit = absolute ? attrs.uiScrollpoint : elm[0].offsetTop + shift;\r\n\r\n                        // if pageYOffset is defined use it, otherwise use other crap for IE\r\n                        var offset = uiScrollpointTarget ? $target[0].scrollTop : getWindowScrollTop();\r\n\r\n                        if (!elm.hasClass('ui-scrollpoint') && offset > limit) {\r\n                            elm.addClass('ui-scrollpoint');\r\n                            if (attrs.scrollpointGroup) {\r\n                                var group = attrs.scrollpointGroup.split(' ');\r\n                                for (var key in group) {\r\n                                    angular.element(document.getElementById(group[key])).addClass('ui-scrollpoint');\r\n                                }\r\n                            }\r\n                            fixLimit = limit;\r\n                        } else if (elm.hasClass('ui-scrollpoint') && offset < fixLimit) {\r\n                            elm.removeClass('ui-scrollpoint');\r\n                            if (attrs.scrollpointGroup) {\r\n                                var group = attrs.scrollpointGroup.split(' ');\r\n                                for (var key in group) {\r\n                                    angular.element(document.getElementById(group[key])).removeClass('ui-scrollpoint');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    $target.on('scroll', onScroll);\r\n                    onScroll(); // sets the initial state\r\n\r\n                    // Unbind scroll event handler when directive is removed\r\n                    scope.$on('$destroy', function () {\r\n                        $target.off('scroll', onScroll);\r\n                    });\r\n                }\r\n            };\r\n        }]).directive('uiScrollpointTarget', [function () {\r\n            return {\r\n                controller: ['$element', function ($element) {\r\n                    this.$element = $element;\r\n                }]\r\n            };\r\n        }]);\r\n\r\n}());\r\n\n},{}],13:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n    // when $routeProvider.whenAuthenticated() is called, the path is stored in this list\r\n// to be used by authRequired() in the services below\r\n    var securedStates = [];\r\n    var mod = obsidian.module('myApp.security', ['ui.router', 'firebase.auth', 'myApp.config']);\r\n\r\n//mod.config(function ($urlRouterProvider, config) {\r\n//    // routes which are not in our map are redirected to 'home'\r\n//    $urlRouterProvider.otherwise(config.redirectUrl);\r\n//})\r\n\r\n    /**\r\n     * Adds a special `whenAuthenticated` method onto $routeProvider. This special method,\r\n     * when called, waits for auth status to be resolved asynchronously, and then fails/redirects\r\n     * if the user is not properly authenticated.\r\n     *\r\n     * The promise either resolves to the authenticated user object and makes it available to\r\n     * dependency injection (see AuthCtrl), or rejects the promise if user is not logged in,\r\n     * forcing a redirect to the /login page\r\n     */\r\n    mod.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.stateAuthenticated = function (name, stateObject) {\r\n            securedStates.push(name);\r\n            stateObject.resolve = stateObject.resolve || {};\r\n            stateObject.resolve.authData = ['Auth', function (Auth) {\r\n                return Auth.$requireAuth();\r\n            }];\r\n            $stateProvider.state(name, stateObject);\r\n            return this;\r\n        }\r\n    }])\r\n\r\n    /**\r\n     * Apply some route security. Any route's resolve method can reject the promise with\r\n     * { authRequired: true } to force a redirect. This method enforces that and also watches\r\n     * for changes in auth status which might require us to navigate away from a path\r\n     * that we can no longer view.\r\n     */\r\n        .run(/*@ngInject*/ function ($rootScope, $location, $state, Auth, loginRedirectState) {\r\n            Auth.$onAuth(checkState);\r\n\r\n            function checkState(user) {\r\n                if (!user && authStateRequired($state.current.name)) {\r\n                    console.log('check failed', user, $location.path()); //debug\r\n                    $state.go(loginRedirectState);\r\n                }\r\n            }\r\n\r\n            $rootScope.$on('$stateChangeError',\r\n                function (event, toState, toParams, fromState, fromParams, error) {\r\n                    if (error === \"AUTH_REQUIRED\") {\r\n                        event.preventDefault();\r\n                        $state.transitionTo(loginRedirectState);\r\n                    }\r\n                });\r\n\r\n            function authStateRequired(name) {\r\n                console.log('authRequired?', name, securedStates.indexOf(name)); //debug\r\n                return securedStates.indexOf(name) !== -1;\r\n            }\r\n        }\r\n    );\r\n})(angular);\r\n\r\n\n},{}],14:[function(require,module,exports){\n(function (angular) {\r\n\r\n    var sharedScopeDefinition;\r\n\r\n    sharedScopeDefinition = {\r\n        handler: '&customHandler'\r\n    };\r\n\r\n    angular.module('socialLinks', [])\r\n        .factory('socialLinker', [\r\n            '$window', '$location', function ($window, $location) {\r\n                return function (urlFactory) {\r\n                    return function (scope, element, attrs) {\r\n                        var getCurrentUrl, handler, popupWinAttrs;\r\n                        popupWinAttrs = \"status=no, width=\" + (scope.socialWidth || 640) + \", height=\" + (scope.socialWidth || 480) + \", resizable=yes, toolbar=no, menubar=no, scrollbars=no, location=no, directories=no\";\r\n                        getCurrentUrl = function () {\r\n                            return attrs.customUrl || $location.absUrl();\r\n                        };\r\n                        attrs.$observe('customUrl', function () {\r\n                            var url;\r\n                            url = urlFactory(scope, getCurrentUrl());\r\n                            if (element[0].nodeName === 'A' && ((attrs.href == null) || attrs.href === '')) {\r\n                                return element.attr('href', url);\r\n                            }\r\n                        });\r\n                        element.attr('rel', 'nofollow');\r\n                        handler = function (e) {\r\n                            var url, win;\r\n                            e.preventDefault();\r\n                            url = urlFactory(scope, getCurrentUrl());\r\n                            return win = $window.open(url, 'popupwindow', popupWinAttrs).focus();\r\n                        };\r\n                        if (attrs.customHandler != null) {\r\n                            element.on('click', handler = function (event) {\r\n                                var url;\r\n                                url = urlFactory(scope, getCurrentUrl());\r\n                                element.attr('href', url);\r\n                                return scope.handler({\r\n                                    $event: event,\r\n                                    $url: url\r\n                                });\r\n                            });\r\n                        } else {\r\n                            element.on('click', handler);\r\n                        }\r\n                        return scope.$on('$destroy', function () {\r\n                            return element.off('click', handler);\r\n                        });\r\n                    };\r\n                };\r\n            }\r\n        ]).directive('socialFacebook', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        var shareUrl;\r\n                        shareUrl = [\"https://facebook.com/sharer.php?\"];\r\n                        shareUrl.push(\"u=\" + (encodeURIComponent(url)));\r\n                        return shareUrl.join('');\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialTwitter', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: angular.extend({\r\n                        status: '@status'\r\n                    }, sharedScopeDefinition),\r\n                    link: linker(function (scope, url) {\r\n                        scope.status || (scope.status = \"Check this out! - \" + url);\r\n                        return \"https://twitter.com/intent/tweet?text=\" + (encodeURIComponent(scope.status));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialGplus', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://plus.google.com/share?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialPinterest', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: angular.extend({\r\n                        media: '@media',\r\n                        description: '@description'\r\n                    }, sharedScopeDefinition),\r\n                    link: linker(function (scope, url) {\r\n                        return \"http://pinterest.com/pin/create/button/?url=\" + (encodeURIComponent(url)) + \"&amp;media=\" + (encodeURIComponent(scope.media)) + \"&amp;description=\" + (encodeURIComponent(scope.description));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialStumbleupon', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://stumbleupon.com/submit?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialLinkedin', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://linkedin.com/shareArticle?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialReddit', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://www.reddit.com/submit?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialVk', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"http://vkontakte.ru/share.php?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialOk', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"http://www.odnoklassniki.ru/dk?st.cmd=addShare&st._surl=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialXing', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://www.xing.com/spi/shares/new?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]);\r\n})(angular);\r\n\n},{}],15:[function(require,module,exports){\n(function () {\r\n    obsidian.module('core.$firebase', ['firebase'])\r\n        .factory('$firebase', /*@ngInject*/ function (FBURL, config, fbutil, $firebaseObject, $q, snippet) {\r\n            var $firebase = {\r\n                FbObj: FbObj,\r\n                update: update,\r\n                set: set,\r\n                batchUpdate: batchUpdate,\r\n                params: {},\r\n                databases: {},\r\n                ref: ref,\r\n                $communicate: $communicate,\r\n                $object: $object,\r\n                getMultipleRefVal: getMultipleRefVal,\r\n                isRefUrlValid: isRefUrlValid,\r\n                move: move,\r\n                load: load\r\n            };\r\n\r\n            var activeRefUrl = {};\r\n\r\n            function FbObj(refUrl, opt) {\r\n                var _opt = opt || {},\r\n                    _refUrl = refUrl || '',\r\n                    db = $firebase.databases[_refUrl.split(\"@\")[1]] || {};\r\n\r\n                function isDbOnline() {\r\n                    if (_opt.keepOnline !== undefined) return !!_opt.keepOnline;\r\n                    if (db.keepOnline !== undefined) return !!db.keepOnline;\r\n                    return true\r\n                }\r\n\r\n                this.dbName = db.Name || FBURL.split(\"//\")[1].split(\".fi\")[0];\r\n                this.dbUrl = \"https://\" + this.dbName + \".firebaseio.com\";\r\n                this.path = _refUrl.split(\"@\")[0];\r\n                this.url = this.dbUrl + \"/\" + this.path;\r\n                this.t = (new Date).getTime().toString();\r\n                this.params = _opt.params || {};\r\n                this.keepOnline = isDbOnline();\r\n            }\r\n\r\n            FbObj.prototype = {\r\n                ref: function () {\r\n                    var ref = new Firebase(this.dbUrl);\r\n                    if (this.path === '') return ref;\r\n                    var pathArr = this.path.split(\"/\");\r\n                    for (var i = 0; i < pathArr.length; i++) {\r\n                        if (pathArr[i].charAt(0) === \"$\") {\r\n                            ref = ref.push();\r\n                            this.params[pathArr[i]] = ref.key();\r\n                        } else {\r\n                            ref = ref.child(pathArr[i]);\r\n                        }\r\n                    }\r\n                    this.url = ref.toString();\r\n                    this.path = this.url.split(\".com/\")[1];\r\n                    return ref\r\n                },\r\n                goOnline: function () {\r\n                    if (activeRefUrl[this.dbUrl] === undefined) {\r\n                        activeRefUrl[this.dbUrl] = []\r\n                    }\r\n                    if (activeRefUrl[this.dbUrl].length === 0) {\r\n                        if (!this.keepOnline) {\r\n                            Firebase.goOnline(this.dbUrl);\r\n                            console.log(this.dbUrl, \"is online\", this.t)\r\n                        }\r\n                    }\r\n                    activeRefUrl[this.dbUrl].push(this.t);\r\n                    return this\r\n                },\r\n                goOffline: function () {\r\n                    if (this.keepOnline) return this;\r\n                    if (activeRefUrl[this.dbUrl] === undefined) {\r\n                        activeRefUrl[this.dbUrl] = []\r\n                    }\r\n                    if (activeRefUrl[this.dbUrl].length === 1) {\r\n                        if (!this.keepOnline) {\r\n                            Firebase.goOffline(this.dbUrl);\r\n                            console.log(this.dbUrl, \"is offline\", this.t)\r\n                        }\r\n                    }\r\n                    var tPos = activeRefUrl[this.dbUrl].indexOf(this.t);\r\n                    if (tPos != -1) {\r\n                        activeRefUrl[this.dbUrl].splice(tPos, 1);\r\n                    }\r\n                    return this\r\n                }\r\n            };\r\n\r\n            function ref(refUrl, opt) {\r\n                var fbObj = new FbObj(refUrl, opt);\r\n                return fbObj.ref()\r\n            }\r\n\r\n            function queryRef(refUrl, options) {\r\n                var opt = options || {},\r\n                    ref = $firebase.ref(refUrl);\r\n                if (opt.orderBy) {\r\n                    var orderBy = 'orderBy' + opt.orderBy.split(':')[0];\r\n                    if (orderBy === 'orderByChild') {\r\n                        ref = ref[orderBy](opt.orderBy.split(':')[1]); //ex {orderBy:'Child:name'}\r\n                    } else {\r\n                        ref = ref[orderBy]();\r\n                    }\r\n\r\n                } else {\r\n                    return ref\r\n                }\r\n                if (opt.startAt) {\r\n                    ref = ref['startAt'](opt.startAt);\r\n                }\r\n                if (opt.endAt) {\r\n                    ref = ref['endAt'](opt.endAt);\r\n                }\r\n                if (opt.equalTo) {\r\n                    ref = ref['equalTo'](opt.equalTo);\r\n                }\r\n                if (opt.limitToFirst) {\r\n                    ref = ref['limitToFirst'](opt.limitToFirst);\r\n                }\r\n                if (opt.limitToLast) {\r\n                    ref = ref['limitToLast'](opt.limitToLast);\r\n                }\r\n                return ref;\r\n            }\r\n\r\n            var objectRepo = {};\r\n\r\n            function $object(refUrl) {\r\n                if (objectRepo[refUrl]) {\r\n                    return objectRepo[refUrl]\r\n                } else {\r\n                    objectRepo[refUrl] = $firebaseObject(ref(refUrl));\r\n                    return objectRepo[refUrl]\r\n                }\r\n            }\r\n\r\n            function isRefUrlValid(refUrl) {\r\n                return (typeof refUrl === 'string') && (refUrl.split('/').indexOf('') === -1)\r\n            }\r\n\r\n            //TODO:用$q改寫\r\n            function Digest(scope, fbObj, isSync, delay) {\r\n                var timeout;\r\n                this.reset = function (callback, customDelay) {\r\n                    if (timeout != undefined) clearTimeout(timeout);\r\n                    timeout = setTimeout(function () {\r\n                        if (callback) callback.apply(null);\r\n                        if (!isSync) fbObj.goOffline();\r\n                        if (scope) scope.$digest();\r\n                    }, customDelay || delay);\r\n                }\r\n            }\r\n\r\n            function load(loadList, defaultOpt) {\r\n                var _defaultOpt = (typeof defaultOpt === 'object') ? defaultOpt : {},\r\n                    defers = {},\r\n                    promises = {};\r\n\r\n                function onComplete(key) {\r\n                    return function (snap) {\r\n                        defers[key].resolve(snap.val())\r\n                    }\r\n                }\r\n\r\n                for (var key in loadList) {\r\n                    if (loadList.hasOwnProperty(key)) {\r\n                        defers[key] = $q.defer();\r\n                        promises[key] = defers[key].promise;\r\n                        var loadObj = loadList[key],\r\n                            ref = queryRef(loadObj.refUrl, loadObj.opt || _defaultOpt);\r\n\r\n                        ref.once('value', onComplete(key))\r\n                    }\r\n                }\r\n                return $q.all(promises)\r\n            }\r\n\r\n            function update(refUrl, value, onComplete, removePrev, refUrlParams) {\r\n                var def = $q.defer();\r\n                var replacedRefUrl = snippet.replaceParamsInString(refUrl, refUrlParams);\r\n                var fbObj = new FbObj(replacedRefUrl), ref = fbObj.ref(), type = removePrev ? 'set' : 'update';\r\n\r\n                //將因push而自動生成的key值放到value內相對應的property中\r\n                var params = angular.extend({}, refUrlParams, fbObj.params);\r\n                //console.log(JSON.stringify(params));\r\n                if (typeof value === 'object' && value != null) {\r\n                    for (var key in params) {\r\n                        var realKey = key.split('$')[1];\r\n                        if (value[realKey] === undefined) continue;\r\n                        value[realKey] = params[key];\r\n                    }\r\n                } else if (typeof value === 'string') {\r\n                    for (var key in params) {\r\n                        value.replace(key, params[key]);\r\n                    }\r\n                }\r\n\r\n                fbObj.goOnline();\r\n\r\n                ref[type](value, function (error) {\r\n                    if (onComplete) onComplete.apply(null, [error]);\r\n                    if (error) {\r\n                        console.log(\"Update failed: \" + refUrl);\r\n                        def.reject(error);\r\n                    } else {\r\n                        if (config.debug) {\r\n                            console.log(\"Update success: \" + refUrl)\r\n                        }\r\n                        def.resolve();\r\n                    }\r\n                    fbObj.goOffline();\r\n                });\r\n\r\n                def.promise.params = fbObj.params;\r\n\r\n                return def.promise\r\n            }\r\n\r\n            function set(refUrl, value, onComplete, refUrlParams) {\r\n                update(refUrl, value, onComplete, true, refUrlParams);\r\n            }\r\n\r\n//TODO: Transaction\r\n\r\n            function batchUpdate(values, isConsecutive) {\r\n                var def = $q.defer(),\r\n                    refUrlParams = angular.extend({}, $firebase.params),\r\n                    _isConsecutive = (isConsecutive || isConsecutive === undefined);\r\n\r\n                function update(i) {\r\n                    var params = $firebase.update(values[i].refUrl, values[i].value, onComplete(i), values[i].set, refUrlParams).params;\r\n                    refUrlParams = angular.extend(refUrlParams, params);\r\n                }\r\n\r\n                function onComplete(i) {\r\n\r\n                    function consecutive(error) {  //防止最後實際執行onComplete時使用的是跑完loop後的j的值\r\n                        var isLast = i === (values.length - 1);\r\n\r\n                        if (values[i] && values[i].onComplete) values[i].onComplete.apply(null, [error]);\r\n                        if (error) {\r\n                            def.reject(error);\r\n                        } else {\r\n                            if (isLast) {\r\n                                def.resolve({params: refUrlParams});\r\n                            } else {\r\n                                update(i + 1);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    function nonConsecutive(error) {\r\n                        if (values[i] && values[i].onComplete) values[i].onComplete.apply(null, [error]);\r\n                        if (error) {\r\n                            defers[i].reject(error)\r\n                        } else {\r\n                            defers[i].resolve();\r\n                        }\r\n                    }\r\n\r\n                    return _isConsecutive ? consecutive : nonConsecutive\r\n                }\r\n\r\n                if (_isConsecutive) {\r\n                    update(0);\r\n                } else {\r\n                    var defers = [],\r\n                        promises = [];\r\n                    for (var i = 0; i < values.length; i++) {\r\n                        defers[i] = $q.defer();\r\n                        promises[i] = defers[i].promise;\r\n                        update(i);\r\n                    }\r\n                    $q.all(promises).then(function () {\r\n                        def.resolve({params: refUrlParams})\r\n                    }, function (error) {\r\n                        def.reject(error);\r\n                    });\r\n                }\r\n\r\n                return def.promise\r\n            }\r\n\r\n            function move(from, to) {\r\n                var sourceRef = new Firebase(from),\r\n                    targetRef = new Firebase(to);\r\n                sourceRef.once('value', function (snap) {\r\n                    targetRef.update(snap.val());\r\n                })\r\n            }\r\n\r\n            function $transfer(from, to) {\r\n                var sourceRef = new Firebase(from.refUrl),\r\n                    targetRef = new Firebase(to.refUrl),\r\n                    def = $q.defer();\r\n                sourceRef.once('value', function (snap) {\r\n                    var value = from.modifier && (typeof modifier === 'function') ? from.modifier(snap.val()) : snap.val();\r\n                    targetRef.update(value, function (error) {\r\n                        if (error) {\r\n                            def.reject(error);\r\n                        } else {\r\n                            def.resolve();\r\n                        }\r\n                    });\r\n                })\r\n            }\r\n\r\n            function $communicate(opt) {\r\n                var res = {}, def = $q.defer();\r\n                if (typeof opt !== 'object') return;\r\n\r\n                batchUpdate(opt.request, true).then(function (resolveVal) {\r\n                    if (!opt.response) {\r\n                        def.resolve(resolveVal);\r\n                        return\r\n                    }\r\n                    angular.extend(res, resolveVal);\r\n                    var resUrlArr = snippet.replaceParamsInObj(opt.response, resolveVal.params);\r\n\r\n                    getResponse(resUrlArr).then(function (response) {\r\n                        angular.extend(res, response);\r\n                        def.resolve(res);\r\n                    }, function (error) {\r\n                        def.reject(error);\r\n                    })\r\n                }, function (error) {\r\n                    def.reject(error);\r\n                });\r\n                return def.promise\r\n            }\r\n\r\n            function getResponse(refs) {\r\n                var isRenew = {}, promises = {};\r\n\r\n                function onComplete(key, refUrl) {\r\n                    var def = $q.derfer();\r\n                    promises[key] = def.promise;\r\n\r\n                    var onSuccess = function (snap) {\r\n                        if (isRenew[key] === true) {\r\n                            def.resolve(snap.val());\r\n                            ref(refUrl).off();\r\n                        } else {\r\n                            isRenew[key] = true; //server hasn't change the data.\r\n                        }\r\n                    };\r\n                    var onError = function (err) {\r\n                        def.reject(err)\r\n                    };\r\n\r\n                    return [onSuccess, onError]\r\n                }\r\n\r\n                for (var key in refs) {\r\n                    if (refs.hasOwnProperty(key)) ref(refs[key]).on('value', onComplete(key, refs[key])[0], onComplete(key, refs[key])[1]);\r\n                }\r\n                return $q.all(promises);\r\n            }\r\n\r\n            function getMultipleRefVal(refs, opt) {\r\n                var _opt = opt ? opt : {};\r\n\r\n                var res = {},\r\n                    params = {},\r\n                    onComplete = {},\r\n                    onGoingRef = {},\r\n                    def = $q.defer(),\r\n                    refNum = Object.keys(refs).length,\r\n                    indicator = _opt.indicator || '&',\r\n                    currentRefs = angular.extend({}, refs),\r\n                    waitUntil = new snippet.WaitUntil(refNum, function () {\r\n                        def.resolve(res)\r\n                    });\r\n\r\n                for (var key in refs) {\r\n                    onGoingRef[key] = false;\r\n                }\r\n\r\n                function iterate() {\r\n                    currentRefs = snippet.replaceParamsInObj(currentRefs, params);\r\n                    for (var key in onGoingRef) {\r\n                        if (onGoingRef.hasOwnProperty(key) && currentRefs[key].indexOf(indicator) === -1 && !onGoingRef[key]) {\r\n\r\n                            onComplete[key] = new (function (key) {\r\n                                return function (snap) {\r\n                                    if (typeof snap.val() === 'string') {\r\n                                        params[indicator + key] = snap.val();\r\n\r\n                                    }\r\n                                    res[key] = snap.val();\r\n                                    delete onGoingRef[key];\r\n                                    waitUntil.resolve();\r\n                                    iterate();\r\n                                }\r\n                            })(key);\r\n\r\n                            onGoingRef[key] = true;\r\n                            ref(currentRefs[key]).once('value', onComplete[key])\r\n                        }\r\n                    }\r\n                }\r\n\r\n                iterate();\r\n                return def.promise\r\n            }\r\n\r\n            return $firebase\r\n        });\r\n\r\n\r\n})();\r\n\n},{}],16:[function(require,module,exports){\n//credit to katowulf: https://github.com/firebase/flashlight\r\n(function () {\r\n    obsidian.module('core.elasticSearch', [])\r\n        .factory('elasticSearch', /*@ngInject*/ function (FBURL, Auth, $q, $rootScope) {\r\n            function doSearch(scope, index, type, query) {\r\n                scope = scope || $rootScope;\r\n                var ref = new Firebase(FBURL + '/search');\r\n                var key = ref.child('request').push({index: index, type: type, query: query}).key();\r\n                console.log('search', key, {index: index, type: type, query: query});\r\n                ref.child('response/' + key).on('value', showResults.bind(scope));\r\n            }\r\n\r\n            function showResults(snap) {\r\n                if (snap.val() === null) {\r\n                    return;\r\n                } // wait until we get data\r\n                var dat = snap.val();\r\n//      console.log('result', snap.name(), snap.val());\r\n                snap.ref().off('value', showResults);\r\n                snap.ref().remove();\r\n                this.result = dat;\r\n                this.$digest();\r\n            }\r\n\r\n            function buildQuery(term, words) {\r\n                // See this tut for more query options:\r\n                // http://okfnlabs.org/blog/2013/07/01/elasticsearch-query-tutorial.html#match-all--find-everything\r\n                return {\r\n                    'query_string': {query: makeTerm(term, words)}\r\n                };\r\n            }\r\n\r\n            function makeTerm(term, matchWholeWords) {\r\n                if (!matchWholeWords) {\r\n                    if (!term.match(/^\\*/)) {\r\n                        term = '*' + term;\r\n                    }\r\n                    if (!term.match(/\\*$/)) {\r\n                        term += '*';\r\n                    }\r\n                }\r\n                return term;\r\n            }\r\n\r\n            return doSearch\r\n        });\r\n// display search results\r\n})();\r\n\n},{}],17:[function(require,module,exports){\n(function () {\r\n    obsidian.module('core.init', ['firebase'])\r\n        .factory('init', /*@ngInject*/ function (Auth, $q, $http, $firebase, $rootScope) {\r\n            var def = $q.defer();\r\n            //function logInMain(){}\r\n            //function getDbName(){}\r\n            //function getIdentity(){}\r\n            //function logInOthersAnonymously(){}\r\n            ////compile viewLogic\r\n            //get geoip\r\n            $http.jsonp('http://www.telize.com/geoip?callback=JSON_CALLBACK').then(function (response) {\r\n                console.log(response)\r\n            });\r\n\r\n            var preLoadList = {\r\n                stripeKey: {\r\n                    refUrl: 'config/payment/stripe/publishable_key'\r\n                }\r\n            };\r\n\r\n            $firebase.load(preLoadList)\r\n                .then(function (res) {\r\n                    if (res.stripeKey && Stripe) Stripe.setPublishableKey(res.stripeKey);\r\n                    return res\r\n                })\r\n                .then(function (res) {\r\n                    def.resolve(res);\r\n                });\r\n\r\n            return def.promise\r\n        })\r\n        .run(/*@ngInject*/ function ($rootScope, $http, $state, $mdSidenav, $q, Auth, $firebase, model, init, snippet, config) {\r\n\r\n\r\n            $rootScope.debug = config.debug;\r\n            if (config.debug) console.log('debug mode');\r\n\r\n            $rootScope.toggleSidenav = function (menuId) {\r\n                $mdSidenav(menuId).toggle();\r\n            };\r\n\r\n            $rootScope.sideNavLogout = function (menuId) {\r\n                Auth.$unauth();\r\n                $mdSidenav(menuId).toggle();\r\n                $state.go('home');\r\n            };\r\n\r\n            //template\r\n\r\n\r\n            Auth.$onAuth(function (user) { //app.js也有同樣的用法\r\n                $rootScope.user = user;\r\n                $rootScope.loggedIn = !!user;\r\n\r\n                if (user) {\r\n                    $firebase.params = {\r\n                        '$uid': user.uid\r\n                    };\r\n                    $rootScope.loggedIn = !!user;\r\n\r\n                    var loadList = {\r\n                        profileImageURL: {\r\n                            refUrl: 'users/' + user.uid + '/profileImageURL'\r\n                        },\r\n                        email: {\r\n                            refUrl: 'users/' + user.uid + '/email'\r\n                        },\r\n                        phone: {\r\n                            refUrl: 'users/' + user.uid + '/phone'\r\n                        }\r\n                    };\r\n\r\n                    $firebase.load(loadList).then(function (res) {\r\n                        user.profileImageURL = res.profileImageURL;\r\n                        user.email = res.email;\r\n                        user.phone = res.phone;\r\n                        $rootScope.user = user;\r\n                        console.log($rootScope.user);\r\n                    });\r\n                    //Notification\r\n                    //_ref=$firebase.ref('users/'+user.uid+'/notification').orderByChild('unread').equalTo(true).limitToLast(10);\r\n                    //$rootScope.notification=$firebaseArray(_ref);\r\n                    //\r\n                    //$rootScope.$watch('notification',function(obj){\r\n                    //    var newNoti=$rootScope.notification.$getRecord(obj.key)||{};\r\n                    //    var orderStatus='your order('+obj.key+') is '+newNoti.orderStatus;\r\n                    //    ngNotify(orderStatus);\r\n                    //});\r\n                } else {\r\n                    console.log('no user', user);\r\n                    $firebase.params = {};\r\n                }\r\n            });\r\n        });\r\n})();\r\n\n},{}],18:[function(require,module,exports){\n(function () {\r\n    obsidian.module('core.linkFn', ['firebase'])\r\n        .factory('linkFn', /*@ngInject*/ function ($controller, $injector, $q, snippet, Auth) {\r\n            var linkFn = {\r\n                pagePlusDirective: pagePlusDirective\r\n            };\r\n\r\n            function pagePlusDirective(scope, ctrlName, resolveObj) { //TODO:讓不用$scope的controller也能用這個方法\r\n                function refresh() {\r\n                    var locals = {},\r\n                        condition = 0,\r\n                        resolve = resolveObj || {};\r\n                    if (scope['stateParams']) locals['$stateParams'] = scope['stateParams'];\r\n                    locals['$scope'] = scope;\r\n\r\n                    for (var key in resolve) {\r\n                        if (typeof $injector.invoke(resolve[key]).then !== 'function') {\r\n                            locals[key] = $injector.invoke(resolve[key])\r\n                        } else {\r\n                            condition++;\r\n                            $injector.invoke(resolve[key]).then(function (resolved) {\r\n                                locals[key] = resolved;\r\n                                waitUntil.resolve();\r\n                            })\r\n                        }\r\n                    }\r\n                    //init controller\r\n                    var waitUntil = new snippet.WaitUntil(condition, function () {\r\n                        $controller(ctrlName, locals);\r\n                    });\r\n                }\r\n\r\n                scope.$watch('stateParams', refresh);\r\n                Auth.$onAuth(refresh);\r\n\r\n            }\r\n\r\n            return linkFn\r\n        });\r\n})();\r\n\r\n\n},{}],19:[function(require,module,exports){\n(function () {\r\n    obsidian.module('core.model', ['firebase'])\r\n        .factory('model', /*@ngInject*/ function (config, fbutil, $q, snippet) {\r\n            var model = {\r\n                update: update,\r\n                ModelObj: ModelObj,\r\n                init: init,\r\n                action: {},\r\n                view: {}\r\n            };\r\n\r\n            function ModelObj(modelPath) {\r\n                this.modelPathArr = modelPath.split(\"|\");\r\n                this.pathArr = this.modelPathArr[0].split(\".\");\r\n                /*this.val=function(){\r\n                 var value={},\r\n                 modelPath=\"\";\r\n\r\n                 for(var j=0; j<that.pathArr.length; j++){\r\n                 modelPath=modelPath+\"['\"+that.pathArr[j]+\"']\"\r\n                 }\r\n                 for(var i=1; i<that.modelPathArr.length; i++){\r\n                 value[that.modelPathArr[i]]=eval(\"model\"+modelPath)[that.modelPathArr[i]];\r\n                 }\r\n\r\n                 if(JSON.stringify(value)===\"{}\"){\r\n                 eval(\"value=model\"+modelPath)\r\n                 }\r\n\r\n                 return value\r\n                 }*/\r\n            }\r\n\r\n            ModelObj.prototype = {\r\n                val: function () {\r\n                    var value = {},\r\n                        modelPath = \"\";\r\n\r\n                    for (var j = 0; j < this.pathArr.length; j++) {\r\n                        modelPath = modelPath + \"['\" + this.pathArr[j] + \"']\"\r\n                    }\r\n                    for (var i = 1; i < this.modelPathArr.length; i++) {\r\n                        value[this.modelPathArr[i]] = eval(\"model\" + modelPath)[this.modelPathArr[i]];\r\n                    }\r\n\r\n                    if (JSON.stringify(value) === \"{}\") {\r\n                        eval(\"value=model\" + modelPath)\r\n                    }\r\n                    return value\r\n                }\r\n            };\r\n\r\n            function init(scope, keyArrOrStr, refresh) {\r\n                if (typeof keyArrOrStr === 'string') {\r\n                    model[keyArrOrStr] = refresh ? {} : model[keyArrOrStr] || {};\r\n                    scope[keyArrOrStr] = model[keyArrOrStr];\r\n                    return\r\n                }\r\n                for (var i = 0; i < keyArrOrStr.length; i++) {\r\n                    model[keyArrOrStr[i]] = refresh ? {} : model[keyArrOrStr[i]] || {};\r\n                    scope[keyArrOrStr[i]] = model[keyArrOrStr[i]]\r\n                }\r\n            }\r\n\r\n            function update(path, value, valuePathArr) {\r\n                var pathArr = path.split(\".\");\r\n                if (valuePathArr != undefined) {\r\n                    snippet.evalAssignment([model, pathArr], valuePathArr);\r\n                } else {\r\n                    snippet.evalAssignment([model, pathArr], [value]);\r\n                }\r\n                //updateView(path)\r\n            }\r\n\r\n            return model\r\n        })\r\n        .factory('$stateData', /*@ngInject*/ function (model) {\r\n            var o = {\r\n                get data() {\r\n                    var cache = model._stateTransitionCache;\r\n                    delete model._stateTransitionCache;\r\n                    return cache;\r\n                }\r\n            };\r\n            return o.data\r\n        })\r\n        .run(/*@ngInject*/ function ($state, model, $rootScope) {\r\n            var activeStates = {};\r\n            $state.goWithData = function (to, params, data, options) {\r\n                var clear = $rootScope.$on('$stateChangeStart', function () {\r\n                    clear();\r\n                    activeStates[$state.href(to, params)] = {data: data};\r\n                    var clearAgain = $rootScope.$on('$stateChangeStart', function () {\r\n                        clearAgain();\r\n                        delete activeStates[$state.href(to, params)]\r\n                    })\r\n                });\r\n                return $state.go(to, params, options);\r\n            };\r\n\r\n            //define a getter so that user can retrieve data by using $state.data\r\n            Object.defineProperty($state, \"data\", {\r\n                get: function () {\r\n                    var state = activeStates[$state.href($state.current.name, $state.params)] || {};\r\n                    return state.data\r\n                }\r\n            });\r\n\r\n\r\n        });\r\n})();\r\n\r\n\n},{}],20:[function(require,module,exports){\n(function () {\r\n    obsidian.module('core.snippet', ['firebase'])\r\n        .factory('snippet', ['config', '$q', '$filter', function (config, $q, $filter) {\r\n            function isArray(someVar) {\r\n                return Object.prototype.toString.call(someVar) === '[object Array]'\r\n            }\r\n\r\n            function randomString(length) {\r\n                var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\r\n\r\n                if (!length) {\r\n                    length = Math.floor(Math.random() * chars.length);\r\n                }\r\n\r\n                var str = '';\r\n                for (var i = 0; i < length; i++) {\r\n                    str += chars[Math.floor(Math.random() * chars.length)];\r\n                }\r\n                return str;\r\n            }\r\n\r\n            function replaceParamsInString(string, params) {\r\n                for (var param in params) {\r\n                    if (params.hasOwnProperty(param)) string = string.replace(eval(\"/\\\\\" + param + \"/g\"), params[param]);\r\n                }\r\n                return string\r\n            }\r\n\r\n            function replaceParamsInObj(obj, params) {\r\n                var objString = JSON.stringify(obj);\r\n                objString = replaceParamsInString(objString, params);\r\n\r\n                var replacedObj = JSON.parse(objString);\r\n\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key) && (typeof obj[key] === 'function')) {\r\n                        var paramReplacedKey = replaceParamsInString(key, params);\r\n                        replacedObj[paramReplacedKey] = obj[key]\r\n                    }\r\n                }\r\n\r\n                return replacedObj\r\n            }\r\n\r\n            function evalAssignment(lhsArr, rhsArr) {\r\n\r\n                var lhsPath = \"\",\r\n                    lhs = lhsArr[0];\r\n\r\n                if (Object.prototype.toString.call(rhsArr) === '[object Array]') {\r\n                    var rhs = rhsArr[0];\r\n                }\r\n\r\n                function toPathArr(strOrArr) {\r\n                    return (typeof strOrArr === 'string') ? strOrArr.split('.') : strOrArr\r\n                }\r\n\r\n                if (lhsArr[1] != undefined) {\r\n                    var lhsPathArr = toPathArr(lhsArr[1]);\r\n\r\n                    for (var i = 0; i < lhsPathArr.length; i++) {\r\n                        lhsPath = lhsPath + \"['\" + lhsPathArr[i] + \"']\";\r\n                        if ((i + 1 < lhsPathArr.length) && typeof lhs[lhsPathArr[i]] != \"object\") {\r\n                            eval(\"lhsArr[0]\" + lhsPath + \"={}\")\r\n                        } else {\r\n                            lhs = lhs[lhsPathArr[i]];\r\n                        }\r\n                    }\r\n                }\r\n                if (!rhsArr) return eval(\"lhsArr[0]\" + lhsPath);\r\n                if (typeof rhsArr === 'function') {\r\n                    eval(\"rhs=rhsArr(lhsArr[0]\" + lhsPath + \")\");\r\n                } else {\r\n                    if (rhsArr[1] != undefined) {\r\n                        var rhsPathArr = toPathArr(rhsArr[1]);\r\n                        for (var j = 0; j < rhsPathArr.length; j++) {\r\n                            if (rhs[rhsPathArr[j]] === undefined) {\r\n                                rhs = undefined;\r\n                                break;\r\n                            }\r\n                            rhs = rhs[rhsPathArr[j]];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                eval(\"lhsArr[0]\" + lhsPath + \"=rhs\");\r\n\r\n\r\n                //console.log(lhsArr[0]); TODO:reomove debug code here\r\n                //console.log(\"lhsArr[0]\"+lhsPath+\"=\"+rhs);\r\n                //console.log(eval(\"lhsArr[0]\"+lhsPath));\r\n\r\n            }\r\n\r\n            //see https://github.com/hughsk/flat\r\n            function flatten(target, opts) {\r\n                opts = opts || {};\r\n\r\n                var delimiter = opts.delimiter || '.';\r\n                var maxDepth = opts.maxDepth;\r\n                var currentDepth = 1;\r\n                var output = {};\r\n\r\n                function step(object, prev) {\r\n                    Object.keys(object).forEach(function (key) {\r\n                        var value = object[key];\r\n                        var isarray = opts.safe && Array.isArray(value);\r\n                        var type = Object.prototype.toString.call(value);\r\n                        var isbuffer = false;\r\n                        var isobject = (\r\n                            type === \"[object Object]\" ||\r\n                            type === \"[object Array]\"\r\n                        );\r\n\r\n                        var newKey = prev\r\n                            ? prev + delimiter + key\r\n                            : key;\r\n\r\n                        if (!opts.maxDepth) {\r\n                            maxDepth = currentDepth + 1;\r\n                        }\r\n\r\n                        if (!isarray && !isbuffer && isobject && Object.keys(value).length && currentDepth < maxDepth) {\r\n                            ++currentDepth;\r\n                            return step(value, newKey)\r\n                        }\r\n\r\n                        output[newKey] = value\r\n                    })\r\n                }\r\n\r\n                step(target);\r\n\r\n                return output\r\n            }\r\n\r\n            function unflatten(target, opts) {\r\n                opts = opts || {};\r\n\r\n                var delimiter = opts.delimiter || '.';\r\n                var overwrite = opts.overwrite || false;\r\n                var result = {};\r\n\r\n                var isbuffer = false;\r\n                if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {\r\n                    return target\r\n                }\r\n\r\n                // safely ensure that the key is\r\n                // an integer.\r\n                function getkey(key) {\r\n                    var parsedKey = Number(key);\r\n\r\n                    return (\r\n                        isNaN(parsedKey) ||\r\n                        key.indexOf('.') !== -1\r\n                    ) ? key\r\n                        : parsedKey\r\n                }\r\n\r\n                Object.keys(target).forEach(function (key) {\r\n                    var split = key.split(delimiter);\r\n                    var key1 = getkey(split.shift());\r\n                    var key2 = getkey(split[0]);\r\n                    var recipient = result;\r\n\r\n                    while (key2 !== undefined) {\r\n                        var type = Object.prototype.toString.call(recipient[key1]);\r\n                        var isobject = (\r\n                            type === \"[object Object]\" ||\r\n                            type === \"[object Array]\"\r\n                        );\r\n\r\n                        if ((overwrite && !isobject) || (!overwrite && recipient[key1] === undefined)) {\r\n                            recipient[key1] = (\r\n                                typeof key2 === 'number' && !opts.object ? [] : {}\r\n                            )\r\n                        }\r\n\r\n                        recipient = recipient[key1];\r\n                        if (split.length > 0) {\r\n                            key1 = getkey(split.shift());\r\n                            key2 = getkey(split[0])\r\n                        }\r\n                    }\r\n\r\n                    // unflatten again for 'messy objects'\r\n                    recipient[key1] = unflatten(target[key], opts)\r\n                });\r\n\r\n                return result\r\n            }\r\n\r\n            function cloneObject(obj) {\r\n                // return angular.extend({},obj);\r\n                if (obj === null || typeof(obj) !== 'object' || 'isActiveClone' in obj) return obj;\r\n                var temp = obj.constructor(); // changed\r\n                for (var key in obj) {\r\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n                        obj['isActiveClone'] = null;\r\n                        temp[key] = cloneObject(obj[key]);\r\n                        delete obj['isActiveClone'];\r\n                    }\r\n                }\r\n                return temp;\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {object} rawDataObj - data that need to be shaped to fit the filter model.\r\n             * @param {object} filterModel - the structure of the returned value.\r\n             * @param {object} [opt] - options.\r\n             * @param {string} opt.paramHeader - if the key value inside the filter model start with this value, every corresponding key in raw data will be reserved.  (ex: $uid)\r\n             * @param {string} opt.useModelHeader - if the key value inside the filter model start with this value, the model data will be kept at this pos and the first character of the key will be removed\r\n             * @param {string} opt.escape - if the endpoint === opt.escape inside the filter model, this end point won't be processed (default='\"#\")\r\n             */\r\n            function filterRawData(rawDataObj, filterModel, opt) {\r\n                opt = opt || {};\r\n                if (typeof rawDataObj !== 'object' || typeof filterModel !== 'object') return rawDataObj === filterModel;\r\n                var res = isArray(rawDataObj) ? [] : {},\r\n                    fail = false;\r\n                iterate(rawDataObj, filterModel, res, 'none');\r\n                function isParam(key, opt) {\r\n                    var paramHeader = '$';\r\n                    if (typeof opt.paramHeader === 'string') paramHeader = opt.paramHeader;\r\n                    return key.charAt(0) === paramHeader;\r\n                }\r\n\r\n                function iterate(rawDataObj, filterModel, target, prevKey) {\r\n                    var useModelHeader = opt.useModelHeader || '_',\r\n                        escape = opt.escape || '#';\r\n\r\n                    if (useModelHeader && typeof filterModel === 'object' && typeof rawDataObj !== 'object') {\r\n                        console.log(prevKey);\r\n                        console.log(\"error: raw data doesn't fit the filter\", 'the key of the raw data is ' + prevKey);\r\n                        fail = true;\r\n                        return\r\n                    }\r\n\r\n                    function goDeeperOrStop(param, filterKey) {\r\n                        var nextLevelFilter = filterModel[param] || filterModel[filterKey];\r\n                        if (nextLevelFilter === escape) return;\r\n                        if (filterKey.charAt(0) === useModelHeader) {\r\n                            target[filterKey.slice(1)] = filterModel[filterKey];\r\n                        } else if (typeof nextLevelFilter !== 'object') {\r\n                            if (rawDataObj[param] === undefined && (opt.removeUndefined === undefined || opt.removeUndefined)) return;\r\n                            target[param] = cloneObject(rawDataObj[param])\r\n                        } else {\r\n                            target[param] = isArray(nextLevelFilter) ? [] : {};\r\n                            iterate(rawDataObj[param], nextLevelFilter, target[param], filterKey)\r\n                        }\r\n                    }\r\n\r\n                    if (typeof filterModel === 'object' && typeof rawDataObj === 'object') {\r\n                        for (var filterKey in filterModel) {\r\n                            if (isParam(filterKey, opt)) {\r\n                                for (var param in rawDataObj) {\r\n                                    goDeeperOrStop(param, filterKey);\r\n                                }\r\n                                break;\r\n                            } else {\r\n                                goDeeperOrStop(filterKey, filterKey)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return fail ? false : res\r\n            }\r\n\r\n            function createBatchUpdateValues(rawData, structure) {\r\n                var structureClone;\r\n                if (typeof structure !== 'object') {\r\n                    console.log('error: structure is not an object');\r\n                    return structure\r\n                }\r\n                structureClone = cloneObject(structure);\r\n\r\n                function iterate(obj) {\r\n                    for (var key in obj) {\r\n                        if (key === 'valueArr') {\r\n                            for (var i = 0; i < obj['valueArr'].length; i++) {\r\n                                var keyStr = obj['valueArr'][i];\r\n                                if (obj['value'] === undefined) obj['value'] = {};\r\n                                if (typeof keyStr === 'string') obj['value'][keyStr] = keyStr;\r\n                            }\r\n                            delete obj['valueArr'];\r\n                            continue;\r\n                        }\r\n                        if (obj.hasOwnProperty(key)) {\r\n                            if (typeof obj[key] === 'string') {\r\n                                if (rawData[obj[key]] === '') {\r\n                                    obj[key] = ''\r\n                                } else {\r\n                                    obj[key] = rawData[obj[key]] || obj[key];\r\n                                }\r\n                            } else if (typeof obj[key] === 'object') {\r\n                                iterate(obj[key])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                iterate(structureClone);\r\n                return structureClone\r\n            }\r\n\r\n            function checkIfPropertyExist(arr) {\r\n                var obj = arr[0],\r\n                    pathArr = arr[1],\r\n                    isExist = true;\r\n                for (var i = 0; i < pathArr.length; i++) {\r\n                    if (obj[pathArr[i]] === undefined || obj[pathArr[i]] === null) {\r\n                        isExist = false;\r\n                        break;\r\n                    }\r\n                    obj = obj[pathArr[i]]\r\n                }\r\n                return isExist\r\n            }\r\n\r\n            function WaitUntil(conditionNum, onComplete, context) {\r\n                var that = this;\r\n                this.satisfiedCondition = 0;\r\n                this.resolve = function () {\r\n                    that.satisfiedCondition++;\r\n                    if (that.satisfiedCondition === conditionNum) {\r\n                        onComplete.apply(context || null)\r\n                    }\r\n                };\r\n                if (conditionNum === 0) {\r\n                    onComplete.apply(context || null)\r\n                }\r\n            }\r\n\r\n            function firstPartOfEmail(email) {\r\n                return ucfirst(email.substr(0, email.indexOf('@')) || '');\r\n            }\r\n\r\n            function ucfirst(str) {\r\n                // inspired by: http://kevin.vanzonneveld.net\r\n                str += '';\r\n                var f = str.charAt(0).toUpperCase();\r\n                return f + str.substr(1);\r\n            }\r\n\r\n            function DelayExec(delay) {\r\n                this.delay = delay || 1000;\r\n            }\r\n\r\n            DelayExec.prototype = {\r\n                reset: function (onComplete, customDelay) {\r\n                    var that = this;\r\n                    if (this.timeout != undefined) clearTimeout(this.timeout);\r\n                    this.timeout = setTimeout(function () {\r\n                        onComplete.apply(null);\r\n                        that.timeout = undefined;\r\n                    }, customDelay || this.delay);\r\n                    this.onComplete = onComplete;\r\n                }\r\n            };\r\n\r\n            function DelayedFilter(scope, source, target, filter, isReverse, delayedTime) {\r\n                var delay = new DelayExec(delayedTime || 1000),\r\n                    that = this;\r\n\r\n                this.refresh = function () {\r\n                    delay.reset(function () {\r\n                        scope[filter] = scope[filter] ? scope[filter] : {};\r\n                        scope[target] = $filter('consecutive')(scope[source], scope[filter], isReverse);\r\n                        scope.$digest();\r\n                    })\r\n                };\r\n\r\n                scope.$watch(filter, function () {\r\n                    that.refresh();\r\n                });\r\n                scope.$watch(source, function () {\r\n                    that.refresh();\r\n                });\r\n            }\r\n\r\n            function isObjEmpty(obj) {\r\n                return !Object.getOwnPropertyNames(obj).length > 0\r\n            }\r\n\r\n\r\n            return {\r\n                DelayExec: DelayExec,\r\n                DelayedFilter: DelayedFilter,\r\n                flatten: flatten,\r\n                unflatten: unflatten,\r\n                isArray: isArray,\r\n                cloneObject: cloneObject,\r\n                evalAssignment: evalAssignment,\r\n                checkIfPropertyExist: checkIfPropertyExist,\r\n                WaitUntil: WaitUntil,\r\n                replaceParamsInObj: replaceParamsInObj,\r\n                replaceParamsInString: replaceParamsInString,\r\n                createBatchUpdateValues: createBatchUpdateValues,\r\n                filterRawData: filterRawData,\r\n                firstPartOfEmail: firstPartOfEmail,\r\n                ucfirst: ucfirst,\r\n                randomString: randomString,\r\n                isObjEmpty: isObjEmpty\r\n            }\r\n        }]);\r\n})();\r\n\r\n\n},{}],21:[function(require,module,exports){\n(function () {\r\n    var mod = obsidian.module('custom.directives', []);\r\n})();\r\n\r\n\n},{}],22:[function(require,module,exports){\n(function () {\r\n    //Step 1: name the new module or use a random id.\r\n    var mod = obsidian.module('custom.filters', []);\r\n\r\n\r\n//Step 2: replace 'serviceSeed' by the factory name you like.\r\n    mod.filter('orderSubTotal', function () {\r\n        return function (order) {\r\n            var sum = 0,\r\n                products = order.products || {};\r\n            for (var key in products) {\r\n                sum += products[key].price * products[key].quantity\r\n            }\r\n            return sum;\r\n        };\r\n    })\r\n        .factory('filterUtil', function ($filter) {\r\n            function watchFilterOpts(scope, source, target, filter, isReverse) {\r\n                scope[source] = scope[source] || [];\r\n                function refresh() {\r\n                    scope[filter] = scope[filter] ? scope[filter] : {};\r\n                    scope[target] = $filter('consecutive')(scope[source], scope[filter], isReverse);\r\n                    //scope.$digest();\r\n                }\r\n\r\n                var watchFilter = scope.$watch(filter, function () {\r\n                    refresh();\r\n                });\r\n                var watchSource = scope.$watch(source, function () {\r\n                    refresh();\r\n                });\r\n\r\n                return function () {\r\n                    watchFilter();\r\n                    watchSource();\r\n                }\r\n            }\r\n\r\n            return {\r\n                watchFilterOpts: watchFilterOpts\r\n            }\r\n        });\r\n})();\r\n\n},{}],23:[function(require,module,exports){\n(function () {\r\n    //Step 1: name the new module or use a random id.\r\n    var mod = obsidian.module('custom.services', []);\r\n\r\n\r\n//Step 2: replace 'serviceSeed' by the factory name you like.\r\n    mod.factory('customFn', ['FBURL', 'config', 'fbutil', '$firebaseObject', '$q', 'snippet', function (FBURL, config, fbutil, $firebaseObject, $q, snippet) {\r\n        var customFn = {};\r\n        return customFn\r\n    }]);\r\n})();\r\n\r\n\n},{}],24:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n    var mod = obsidian.module('pages.account', []),\r\n        state = 'account',\r\n        url = '/account',\r\n        ctrlName = 'AccountCtrl',\r\n        templateUrl = 'pages/account/account.html',\r\n        resolve = {\r\n            user: ['Auth', function (Auth) {\r\n                return Auth.$waitForAuth();\r\n            }]\r\n        },\r\n        directiveName = 'obAccount';\r\n\r\n    mod.controller(ctrlName, /*@ngInject*/ function ($rootScope, $scope, Auth, fbutil, user, $state, $firebaseObject, $mdDialog) {\r\n            var unbind;\r\n            // create a 3-way binding with the user profile object in Firebase\r\n            //$rootScope.showAcc=false;\r\n            var profile = $firebaseObject(fbutil.ref('users', user.uid));\r\n            profile.$bindTo($scope, 'profile').then(function (ub) {\r\n                unbind = ub;\r\n            });\r\n\r\n            $scope.closeDialog = function() {\r\n                $mdDialog.hide();\r\n            };\r\n\r\n            // expose logout function to scope\r\n            $scope.logout = function () {\r\n                if (unbind) {\r\n                    unbind();\r\n                }\r\n                profile.$destroy();\r\n                Auth.$unauth();\r\n                $mdDialog.cancel();\r\n                $state.go('home');\r\n            };\r\n            //$rootScope.logout = $scope.logout;\r\n\r\n            $scope.changePassword = function (pass, confirm, newPass) {\r\n                resetMessages();\r\n                if (!pass || !confirm || !newPass) {\r\n                    $scope.err = 'Please fill in all password fields';\r\n                }\r\n                else if (newPass !== confirm) {\r\n                    $scope.err = 'New pass and confirm do not match';\r\n                }\r\n                else {\r\n                    Auth.$changePassword({email: profile.email, oldPassword: pass, newPassword: newPass})\r\n                        .then(function () {\r\n                            $scope.msg = 'Password changed';\r\n                        }, function (err) {\r\n                            $scope.err = err;\r\n                        })\r\n                }\r\n            };\r\n\r\n            $scope.clear = resetMessages;\r\n\r\n            $scope.changeEmail = function (pass, newEmail) {\r\n                resetMessages();\r\n                var oldEmail = profile.email;\r\n                Auth.$changeEmail({oldEmail: oldEmail, newEmail: newEmail, password: pass})\r\n                    .then(function () {\r\n                        // store the new email address in the user's profile\r\n                        return fbutil.handler(function (done) {\r\n                            fbutil.ref('users', user.uid, 'email').set(newEmail, done);\r\n                        });\r\n                    })\r\n                    .then(function () {\r\n                        $scope.emailmsg = 'Email changed';\r\n                    }, function (err) {\r\n                        $scope.emailerr = err;\r\n                    });\r\n            };\r\n\r\n            function resetMessages() {\r\n                $scope.err = null;\r\n                $scope.msg = null;\r\n                $scope.emailerr = null;\r\n                $scope.emailmsg = null;\r\n            }\r\n        }\r\n    );\r\n\r\n    mod.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: resolve\r\n        });\r\n    }]);\r\n\r\n    mod.run(/*@ngInject*/ function ($rootScope, $mdDialog) {\r\n        $rootScope.showAccount = function ($event) {\r\n            var parentEl = angular.element(document.body);\r\n            $mdDialog.show({\r\n                parent: parentEl,\r\n                targetEvent: $event,\r\n                templateUrl: 'pages/account/accountDialog.html',\r\n                locals: {\r\n                    user: $rootScope.user\r\n                },\r\n                clickOutsideToClose: true,\r\n                controller: 'AccountCtrl'\r\n            });\r\n        };\r\n    });\r\n\r\n    if (directiveName) {\r\n        mod.directive(directiveName, ['linkFn', function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '&'\r\n                },\r\n                link: function(scope){\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n\r\n})(angular);\r\n\n},{}],25:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state = 'backEnd',\r\n        url = '/backEnd',\r\n        ctrlName = 'BackEndCtrl',\r\n        templateUrl = 'pages/backEnd/backEnd.html';\r\n\r\n\r\n    var app = obsidian.module('pages.backEnd', ['pages.backEnd.productManager', 'pages.backEnd.orders']);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $firebase, snippet, $errorHandler) {\r\n        this.test='1234'\r\n    });\r\n\r\n\r\n    app.config(function ($stateProvider) {\r\n        $stateProvider\r\n            .state(state, {\r\n                url: url,\r\n                views: {\r\n                    \"\": {\r\n                        templateUrl: templateUrl,\r\n                        controller: ctrlName,\r\n                        controllerAs:'be'\r\n                    }\r\n                }\r\n            })\r\n            .state(state + '.orders', {\r\n                url: '/orders',\r\n                views: {\r\n                    \"content\": {\r\n                        templateUrl: 'pages/backEnd/orders/orders.html',\r\n                        controller: 'Orders'\r\n                    }\r\n                }\r\n            })\r\n            .state(state + '.productManager', {\r\n                url: '/productManager',\r\n                views: {\r\n                    \"content\": {\r\n                        templateUrl: 'pages/backEnd/productManager/productManager.html',\r\n                        controller: 'ProductManager'\r\n                    }\r\n                }\r\n            });\r\n    });\r\n\r\n\r\n})(angular);\n},{}],26:[function(require,module,exports){\n(function (angular) {\r\n\r\n    var app = angular.module('pages.backEnd.orders', []);\r\n\r\n//Step 4: construct a controller. Notice that $scope is required, don't delete it.\r\n    app.controller('Orders', /*@ngInject*/ function ($scope, filterUtil, customFn, $firebaseArray, $firebase, snippet, $errorHandler) {\r\n        //to show orders\r\n        $scope.loadOrders = function (startDay, endDay) {\r\n            var now = (new Date).getTime(),\r\n                day = 24 * 60 * 60 * 1000;\r\n            var ref = $firebase.ref('orders').orderByChild('schedule').startAt(now + startDay * day).endAt(now + endDay * day);\r\n\r\n            //to prevent memory leak\r\n            if($scope.allOrdersSrc) $scope.allOrdersSrc.$destroy();\r\n            if($scope.unwatchFilter) $scope.unwatchFilter();\r\n\r\n            $scope.allOrdersSrc = $firebaseArray(ref);\r\n            $scope.allOrdersSrc.$loaded().then(function(){\r\n                $scope.unwatchFilter=filterUtil.watchFilterOpts($scope, 'allOrdersSrc', 'allOrders', 'filters');\r\n            })\r\n        };\r\n\r\n\r\n        //$scope.loadOrders(-0.5, 1); //today's order\r\n\r\n\r\n\r\n        $scope.filterOpt={};\r\n        $scope.refreshFilter = function () {\r\n            $scope.search=$scope.search? $scope.search:'';\r\n            var searcKeyhArr=$scope.search.split(' '); //let filter match several keys\r\n            $scope.filters=angular.extend({}, $scope.filterOpt, searcKeyhArr);\r\n        };\r\n\r\n        $scope.$watch('filterOpt', function(){\r\n            $scope.refreshFilter();\r\n        }, true);\r\n\r\n\r\n        $scope.statusOptions = ['received', 'preparing', 'ready', 'picked-up'];\r\n        $scope.orderStatus = {};\r\n\r\n        $scope.changeOrderStatus = function (orderId, userId, changedStatus) {\r\n            console.log(orderId, userId, changedStatus);\r\n            var values = [\r\n                {\r\n                    refUrl: 'orders/' + orderId + '/orderStatus',\r\n                    value: changedStatus,\r\n                    set: true\r\n                },\r\n                {\r\n                    refUrl: 'users/' + userId + '/orderHistory/' + orderId + '/orderStatus',\r\n                    value: changedStatus,\r\n                    set: true\r\n                }\r\n            ];\r\n            $firebase.batchUpdate(values, true).then(angular.noop, $errorHandler({}));\r\n        };\r\n        $scope.calcSubTotal = customFn.calcSubTotal;\r\n\r\n\r\n        $scope.removeOrder = function (orderId, userId, reason) {\r\n            var values = [\r\n                {\r\n                    refUrl: 'users/' + userId + '/orderHistory/' + orderId,\r\n                    value: null,\r\n                    set: true\r\n                },\r\n                {\r\n                    refUrl: 'orders/' + orderId,\r\n                    value: null,\r\n                    set: true\r\n                }\r\n            ];\r\n            $firebase.batchUpdate(values, true).then(function(){\r\n                $scope.refreshFilter();\r\n            })\r\n        };\r\n    });\r\n\r\n\r\n\r\n})(angular);\r\n\r\n\n},{}],27:[function(require,module,exports){\n(function (angular) {\r\n\r\n    var app = angular.module('pages.backEnd.productManager', []);\r\n\r\n    app.controller('ProductManager', /*@ngInject*/ function ($scope, $firebaseArray, $firebaseObject, customFn, $firebase, snippet, $errorHandler) {\r\n\r\n        //to add/remove new products\r\n        $scope.products=$firebaseObject($firebase.ref('products'));\r\n        $scope.addOpt=function(){\r\n            var arr=$scope.selectedProduct.options;\r\n            $scope.selectedProduct.options[arr.length]=''\r\n        };\r\n        $scope.removeOpt=function(){\r\n            var arr=$scope.selectedProduct.options;\r\n            if(arr.length===0) return;\r\n            $scope.selectedProduct.options.pop();\r\n        };\r\n        $scope.selectProduct=function(productId){\r\n            $scope.selectedProduct={};\r\n            $scope.selectedProduct=angular.extend({},$scope.products[productId]);\r\n            $scope.selectedProduct.options=$scope.selectedProduct.options||[]\r\n        };\r\n        $scope.updateProduct=function(){\r\n            $scope.products[$scope.selectedProduct.itemId]=$scope.selectedProduct;\r\n            $scope.products.$save();\r\n            $scope.selectedProduct={};\r\n        };\r\n        $scope.removeProduct=function(id){\r\n            $scope.products[id]=null;\r\n            $scope.products.$save();\r\n        };\r\n        $scope.createProduct=function(){\r\n            var randomId=(new Date()).getTime().toString(36);\r\n            $scope.selectedProduct={\r\n                itemId:randomId,\r\n                itemName:'',\r\n                image:'',\r\n                description:'',\r\n                listPrice:'',\r\n                price:'',\r\n                options:['']\r\n            }\r\n        };\r\n        $scope.clearProduct=function(){\r\n            $scope.selectedProduct={}\r\n        }\r\n    });\r\n\r\n\r\n\r\n})(angular);\r\n\r\n\n},{}],28:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state='home',\r\n        url='/home',\r\n        ctrlName='HomeCtrl',\r\n        templateUrl='pages/home/home.html';\r\n\r\n\r\n    var app = obsidian.module('pages.home', []);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $state) {\r\n        //\r\n        console.log($state.data);\r\n\r\n        $scope.test= function () {\r\n            $state.goWithData('test2',{},{a:'a',b:'b'})\r\n        }\r\n    });\r\n\r\n    app.config(['$stateProvider',function($stateProvider){\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName\r\n        });\r\n    }]);\r\n\r\n})(angular);\n},{}],29:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state='invoice',\r\n        url='/invoice/:orderId',\r\n        ctrlName='InvoiceCtrl',\r\n        templateUrl='pages/invoice/invoice.html';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.invoice', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $firebaseObject, $state, customFn) {\r\n        console.log($state.data);\r\n        $scope.invoice=$state.data;\r\n        //$scope.subTotal=customFn.calcSubTotal('', $stateParams.products);\r\n        $scope.date=new Date();\r\n        $scope.OK=function(){\r\n            $state.go('home')\r\n        }\r\n\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    }]);\r\n\r\n\r\n})(angular);\n},{}],30:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state='login',\r\n        url='/login',\r\n        ctrlName='LoginCtrl',\r\n        templateUrl='pages/login/login.html',\r\n        directiveName='obLogin',\r\n        resolve={};\r\n\r\n    var app = obsidian.module('pages.login', ['firebase.auth', 'firebase', 'firebase.utils', 'ui.router', 'core.model']);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function($rootScope, $scope, Auth, $state, fbutil, snippet, $mdDialog) {\r\n        $scope.closeDialog = function() {\r\n            $mdDialog.hide();\r\n        };\r\n\r\n        $scope.email = null;\r\n        $scope.pass = null;\r\n        $scope.confirm = null;\r\n        $scope.createMode = false;\r\n\r\n        function redirectTo(state){\r\n            $state.go(state);\r\n        }\r\n\r\n        function showError(err) {\r\n            $scope.err = angular.isObject(err) && err.code? err.code : err + '';\r\n        }\r\n\r\n        $scope.login = function(email, pass) {\r\n            console.log(email,pass);\r\n            $scope.err = null;\r\n            Auth.$authWithPassword({ email: email, password: pass }, {rememberMe: true})\r\n                .then(function(/* user */) {\r\n                    $mdDialog.hide();\r\n                    redirectTo('home');\r\n                }, showError);\r\n        };\r\n\r\n        $scope.createAccount = function() {\r\n            $scope.err = null;\r\n            if( assertValidAccountProps() ) {\r\n                var email = $scope.email;\r\n                var pass = $scope.pass;\r\n                // create user credentials in Firebase auth system\r\n                Auth.$createUser({email: email, password: pass})\r\n                    .then(function() {\r\n                        // authenticate so we have permission to write to Firebase\r\n                        return Auth.$authWithPassword({ email: email, password: pass });\r\n                    })\r\n                    .then(Auth.createAccount)\r\n                    .then(function(/* user */) {\r\n                        // redirect to home\r\n                        $mdDialog.hide();\r\n                        redirectTo('home');\r\n                    }, showError);\r\n            }\r\n        };\r\n\r\n        function assertValidAccountProps() {\r\n            if( !$scope.email ) {\r\n                $scope.err = 'Please enter an email address';\r\n            }\r\n            else if( !$scope.pass || !$scope.confirm ) {\r\n                $scope.err = 'Please enter a password';\r\n            }\r\n            else if( $scope.createMode && $scope.pass !== $scope.confirm ) {\r\n                $scope.err = 'Passwords do not match';\r\n            }\r\n            return !$scope.err;\r\n        }\r\n\r\n        $scope.loginWithProvider=function(provider, opt){\r\n            Auth.loginWithProvider(provider, opt)\r\n                .then(function(user) {\r\n                    $mdDialog.hide();\r\n                    redirectTo('home');\r\n                    return Auth.checkIfAccountExistOnFb(user)\r\n                }, showError)\r\n                .then(Auth.createAccount, showError)\r\n                .then(function(){}, showError)\r\n        }\r\n    });\r\n\r\n    app.config(['$stateProvider',function($stateProvider){\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName\r\n        });\r\n    }]);\r\n\r\n    app.run(/*@ngInject*/ function ($rootScope, $mdDialog) {\r\n        $rootScope.showLogin = function ($event) {\r\n            var parentEl = angular.element(document.body);\r\n            $mdDialog.show({\r\n                parent: parentEl,\r\n                targetEvent: $event,\r\n                templateUrl: 'pages/login/loginDialog.html',\r\n                clickOutsideToClose: true,\r\n                controller: 'LoginCtrl'\r\n            });\r\n        };\r\n    });\r\n\r\n    if (directiveName) {\r\n        app.directive(directiveName, ['linkFn', function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '@'\r\n                },\r\n                link: function(scope){\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n})(angular);\n},{}],31:[function(require,module,exports){\n//Step 1: name the new module.\r\n\r\n(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state='myOrders',\r\n        url='/myOrders',\r\n        ctrlName='MyOrdersCtrl',\r\n        templateUrl='pages/myOrders/myOrders.html';\r\n\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.myOrders', ['ui.router']);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function (user, $scope, filterUtil, $firebaseArray, $firebase) {\r\n\r\n        $scope.loadOrders = function (startDay, endDay) {\r\n            var now = (new Date).getTime(),\r\n                day = 24 * 60 * 60 * 1000;\r\n            var ref = $firebase.ref('users/'+user.uid+'/orderHistory').orderByChild('createdTime').startAt(now + startDay * day).endAt(now + endDay * day);\r\n\r\n            //to prevent memory leak\r\n            if($scope.myOrdersSrc) $scope.myOrdersSrc.$destroy();\r\n            if($scope.unwatchFilter) $scope.unwatchFilter();\r\n\r\n            $scope.myOrdersSrc = $firebaseArray(ref);\r\n            $scope.myOrdersSrc.$loaded().then(function(){\r\n                $scope.unwatchFilter=filterUtil.watchFilterOpts($scope, 'myOrdersSrc', 'myOrders', 'filters');\r\n            })\r\n        };\r\n\r\n        $scope.loadOrders(-65535, 65535); //today's order\r\n\r\n        $scope.filterOpt={};\r\n        $scope.refreshFilter = function () {\r\n            $scope.search=$scope.search? $scope.search:'';\r\n            var searcKeyhArr=$scope.search.split(' ');\r\n            $scope.filters=angular.extend({}, $scope.filterOpt, searcKeyhArr);\r\n        };\r\n\r\n        $scope.$watch('filterOpt', function(){\r\n            $scope.refreshFilter();\r\n        }, true);\r\n\r\n\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.stateAuthenticated(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    }]);\r\n\r\n})(angular);\n},{}],32:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n//Step 1: replace 'pageSeed' to any name you prefer.\r\n    var mod = obsidian.module('pageSeed', ['firebase.auth', 'firebase', 'firebase.utils', 'core.model']);\r\n\r\n//Step 2: simple configuration for the state.\r\n    var state = 'pageSeed',\r\n        url = '/pageSeed',\r\n        ctrlName = 'PageSeedCtrl',\r\n        templateUrl = 'pages/pageSeed/pageSeed.html',\r\n        directiveName = 'pageSeedDirective',\r\n        resolve = {\r\n            // forces the page to wait for this promise to resolve before controller is loaded\r\n            // the controller can then inject `user` as a dependency. This could also be done\r\n            // in the controller, but this makes things cleaner (controller doesn't need to worry\r\n            // about auth status or timing of accessing data or displaying elements)\r\n            user: ['Auth', function (Auth) {\r\n                return Auth.$waitForAuth();\r\n            }]\r\n        };\r\n\r\n//Step 3: config the state in detail if needed.\r\n    mod.config(/*@ngInject*/ function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: resolve\r\n        });\r\n    });\r\n\r\n//Step 4: build the controller.\r\n    mod.controller(ctrlName, /*@ngInject*/ function ($scope) {\r\n        //create your own controller here\r\n    });\r\n\r\n\r\n//Step 5: give a name for the directive in step 2 if you want put this state into a widget.\r\n    if (directiveName) {\r\n        mod.directive(directiveName, /*@ngInject*/ function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '@'\r\n                },\r\n                link: function (scope) {\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        });\r\n    }\r\n})(angular);\r\n\n},{}],33:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state = 'productDetail',\r\n        url = '/productDetail/:pid',\r\n        ctrlName = 'ProductDetailCtrl',\r\n        templateUrl = 'pages/productDetail/productDetail.html',\r\n        directiveName = 'productDetail',\r\n        resolve = {\r\n            user: ['Auth', function (Auth) {\r\n                return Auth.$waitForAuth();\r\n            }]\r\n        };\r\n\r\n    var app = obsidian.module('pages.productDetail', []);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $rootScope, user, $firebaseObject, $firebase, $location, $stateParams, $mdDialog) {\r\n        var productId = $stateParams.pid;\r\n        $scope.loggedIn=function(){return $rootScope.loggedIn};\r\n        $scope.id = productId;\r\n        $scope.user = user;\r\n        $scope.loaded = function (value) {\r\n            angular.extend(value, {\r\n                quantity: 1,\r\n                itemId: productId\r\n            })\r\n        };\r\n        $scope.cancel = function() {\r\n            $mdDialog.cancel();\r\n        };\r\n    });\r\n\r\n\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: resolve\r\n        });\r\n    }]);\r\n\r\n    if (directiveName) {\r\n        app.directive(directiveName, ['linkFn', function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '='\r\n                },\r\n                link: function(scope){\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n\r\n})(angular);\n},{}],34:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state='productList',\r\n        url='/productList',\r\n        ctrlName='ProductListCtrl',\r\n        templateUrl='pages/productList/productList.html';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.productList', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($rootScope, $scope, $mdDialog) {\r\n        $scope.showDetail= function($event, pid) {\r\n            var parentEl = angular.element(document.body);\r\n            $mdDialog.show({\r\n                parent: parentEl,\r\n                targetEvent: $event,\r\n                templateUrl:'pages/productDetail/productDetail.html',\r\n                locals: {\r\n                    $stateParams: {pid:pid},\r\n                    user: $rootScope.user\r\n                },\r\n                clickOutsideToClose: true,\r\n                controller: 'ProductDetailCtrl'\r\n            });\r\n        }\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider',function($stateProvider){\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName\r\n        });\r\n    }]);\r\n\r\n})(angular);\n},{}],35:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state = 'shoppingCart',\r\n        url = '/shoppingCart',\r\n        ctrlName = 'ShoppingCartCtrl',\r\n        templateUrl = 'pages/shoppingCart/shoppingCart.html';\r\n\r\n    var app = obsidian.module('pages.shoppingCart', []);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($q, config, user, $scope, $rootScope, $firebase, snippet, $state, ngCart) {\r\n        $scope.ngCart = ngCart;\r\n        var cart = {products: {}};\r\n\r\n        $scope.emptyCart = function () {\r\n            ngCart.empty();  //清空購物車, ngCart 要清兩次才會清空\r\n            ngCart.empty()\r\n        };\r\n\r\n        $scope.paymentMethod = 'uponPickup';\r\n        $scope.clientEmail=$rootScope.user? $rootScope.user.email:null;\r\n        $scope.clientPhone=$rootScope.user? $rootScope.user.phone:null;\r\n        $scope.clientName=$rootScope.user? (user[user.provider].displayName || user[user.provider].email):null;\r\n        $scope.uid=$rootScope.user? $rootScope.user.uid:null;\r\n\r\n\r\n\r\n\r\n        function updateContactInfo(){\r\n            if(!$rootScope.user) return;\r\n            var isEmailChanged=($scope.clientEmail===$rootScope.user.email),\r\n                isPhoneChanged=($scope.clientPhone===$rootScope.user.phone),\r\n                uploadList=[];\r\n            if(isEmailChanged) uploadList.push({\r\n                refUrl:'users/' + user.uid + '/email', value: $scope.clientEmail\r\n            });\r\n            if(isPhoneChanged) uploadList.push({\r\n                refUrl:'users/' + user.uid + '/phone', value: $scope.clientPhone\r\n            });\r\n            if(uploadList.length>0) $firebase.batchUpdate(uploadList);\r\n        }\r\n\r\n        if (config.debug) {\r\n            $scope.number = '4242424242424242';\r\n            $scope.expiry = '11/16';\r\n            $scope.cvc = '123';\r\n        }\r\n\r\n        function isTimeValid() {\r\n            if (( $scope.dt.getDay() === 0 || $scope.dt.getDay() === 6 )) {\r\n                alert('Please pick a weekday.');\r\n                return false\r\n            }\r\n            if ($scope.dt.getTime() < (new Date()).getTime() + 30 * 60 * 1000) {\r\n                alert('Please pick a time at least 30 minutes from now.');\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        }\r\n\r\n        $scope.submitOrder = function () {\r\n            //確保有足夠時間準備\r\n            if (!isTimeValid()) return;\r\n\r\n            $scope.waiting = true; //進入waiting畫面,得到token後stripeCallback會執行\r\n            if ($scope.paymentMethod === 'uponPickup') uploadOrder('uponPickup').then(function (res) {\r\n                var orderId = res.params['$orderId'];\r\n                $scope.invoice.orderId = orderId;\r\n                $state.goWithData('invoice', {orderId: orderId}, $scope.invoice); //成功後轉換至invoice頁面\r\n                $scope.emptyCart();\r\n                if (!$scope.$$phase) $scope.$apply(); //確保成功轉換頁面\r\n            });\r\n        };\r\n\r\n        function getPaymentData(code, result) {\r\n            $scope.payment = {};\r\n            if (result.error) {\r\n                window.alert('it failed! error: ' + result.error.message);\r\n            } else {\r\n                console.log('success! token: ' + result.id);\r\n                $scope.payment = {\r\n                    token: result.id,\r\n                    provider: 'stripe'\r\n                };\r\n            }\r\n        }\r\n\r\n        $scope.stripeCallback = function (code, result) {\r\n            if ($scope.paymentMethod === 'uponPickup' || !isTimeValid()) return;\r\n            getPaymentData(code, result);\r\n\r\n            //將payment provider取得的token加入其他資料一起上傳\r\n            uploadOrder('creditCard')\r\n                .then(function (res) {\r\n                    var orderId = res.params['$orderId'];\r\n                    console.log('orderId is ' + orderId);\r\n\r\n\r\n                    clearTimeout(timeout);\r\n\r\n                    if (res.isCharged === 'succeeded') {\r\n                        $state.go('invoice', $scope.invoice); //成功後轉換至invoice頁面\r\n                        console.log('transaction succeeded');\r\n                        $scope.emptyCart();\r\n                        if (!$scope.$$phase) $scope.$apply(); //確保成功轉換頁面\r\n                    } else {\r\n                        //TODO : errorHandler(errorId, 'transaction failed', res.isCharged);\r\n                    }\r\n                    $scope.waiting = false;\r\n\r\n\r\n                }, function (err) {\r\n                    console.log(JSON.stringify(err)); //上傳失敗產生警告\r\n                });\r\n        };\r\n\r\n        function prepareOrderData() {\r\n            angular.forEach(ngCart.getItems(), function (item) {\r\n                cart.products[item._id] = item._data;\r\n                cart.products[item._id].quantity = item._quantity;\r\n                cart.products[item._id].itemId = item._id;\r\n            });\r\n\r\n            var payment = $scope.payment || {};\r\n            payment.method = $scope.paymentMethod;\r\n\r\n            angular.extend(cart,\r\n                {\r\n                    clientName: $scope.clientName,\r\n                    clientId: $scope.uid,\r\n                    clientEmail: $scope.clientEmail,\r\n                    clientPhone: $scope.clientPhone,\r\n                    createdTime: Firebase.ServerValue.TIMESTAMP,\r\n                    note: $scope.note || null,\r\n                    schedule: $scope.dt.getTime(),\r\n                    orderStatus: 'received',\r\n                    payment: payment,\r\n                    shipment: {}//\r\n                }\r\n            );\r\n        }\r\n\r\n\r\n        function uploadOrder(type) {\r\n\r\n            updateContactInfo();\r\n            //整理order 資料\r\n            prepareOrderData();\r\n\r\n            //產生要存至主order資料庫的結構\r\n            var mainOrderStructure = {\r\n                clientName: '',\r\n                clientId: '',\r\n                clientEmail: '',\r\n                clientPhone: '',\r\n                createdTime: '',\r\n                orderStatus: '',\r\n                note: '',\r\n                //subTotal:'',        由主機端計算，防止人為竄改。\r\n                products: {\r\n                    $productId: {\r\n                        itemName: '',\r\n                        itemId: '',\r\n                        quantity: '',\r\n                        price: '',\r\n                        selectedOption: ''\r\n                    }\r\n                },\r\n                payment: '',\r\n                shipment: '',\r\n                schedule: ''\r\n            };\r\n\r\n            //產生要存至主order資料庫的資料\r\n\r\n            var mainOrderData = {\r\n                refUrl: 'orders/$orderId',\r\n                value: snippet.filterRawData(cart, mainOrderStructure)\r\n            };\r\n            //產生要存至user的order資料庫的結構\r\n            var userOderReceiptStructure = {\r\n                createdTime: '',\r\n                orderStatus: '',\r\n                note: '',\r\n                products: {\r\n                    $productId: {\r\n                        itemId: '',\r\n                        itemName: '',\r\n                        quantity: '',\r\n                        price: '',\r\n                        selectedOption: ''\r\n                    }\r\n                },\r\n                payment: '',\r\n                shipment: '',\r\n                schedule: ''\r\n            };\r\n\r\n            //產生要存至user的order資料庫的資料\r\n            var userReceiptData = {\r\n                refUrl: 'users/$uid/orderHistory/$orderId',\r\n                value: snippet.filterRawData(cart, userOderReceiptStructure)\r\n            };\r\n\r\n            //放到同一個array產生批次上傳資料\r\n            var batchOrderData = [mainOrderData, userReceiptData];\r\n\r\n            //產生收據\r\n            $scope.invoice = angular.extend({}, cart);\r\n\r\n            //批次上傳\r\n            return $firebase.$communicate({\r\n                request: batchOrderData,\r\n                response: type === 'uponPickup' ? false : {isCharged: 'users/$uid/orderHistory/$orderId/payment/status'}\r\n            });\r\n        }\r\n\r\n        //date picker\r\n\r\n        $scope.dt = new Date();\r\n        $scope.hour = 12;\r\n        $scope.minute = 0;\r\n        $scope.minDate = $scope.dt;\r\n        $scope.maxDate = new Date(\r\n            $scope.dt.getFullYear(),\r\n            $scope.dt.getMonth() + 2,\r\n            $scope.dt.getDate());\r\n\r\n        $scope.changeDt = function () {\r\n            $scope.hour = 12;\r\n            $scope.dt.setHours(12);\r\n            $scope.minute = 0;\r\n            $scope.dt.setMinutes(0);\r\n        };\r\n        $scope.changeDt();\r\n\r\n        $scope.changeTime = function () {\r\n            $scope.dt.setHours($scope.hour);\r\n            $scope.dt.setMinutes($scope.minute);\r\n        };\r\n    });\r\n\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    }]);\r\n\r\n    app.run(/*@ngInject*/ function ($rootScope, ngCart, config) {\r\n        ngCart.setShipping(config.shipping);\r\n        ngCart.setTaxRate(config.taxRate);\r\n\r\n        function refreshTotalItems() {\r\n            $rootScope.cartTotalItems = ngCart.getTotalItems()\r\n        }\r\n\r\n        $rootScope.$on('ngCart:change', refreshTotalItems);\r\n        refreshTotalItems();\r\n    });\r\n\r\n})(angular);\n},{}],36:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state = 'test2',\r\n        url = '/test2',\r\n        ctrlName = 'Test2Ctrl',\r\n        templateUrl = 'pages/test2/test2.html',\r\n        directiveName = '';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.test2', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $state, $firebase, $rootScope) {\r\n\r\n        console.log($state.data);\r\n        $scope.changed=function(){\r\n            console.log('data changed to '+$scope.inputDelayTest)\r\n        };\r\n        var loadList = [\r\n            {\r\n                refUrl: 'products/bd_001'\r\n            },\r\n            {\r\n                refUrl: 'products/bd_002'\r\n            },\r\n            {\r\n                refUrl: 'products',\r\n                opt:{\r\n                    orderBy:'Key',\r\n                    limitToFirst:2\r\n                }\r\n            }\r\n        ];\r\n        $firebase.load(loadList).then(function(res){\r\n            console.log(res);\r\n        });\r\n\r\n\r\n        $scope.test=function(){\r\n            $state.go('home', {test:'test'})\r\n        }\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            url: url\r\n        });\r\n    }]);\r\n\r\n    if (directiveName) {\r\n        app.directive(directiveName, ['$controller', function ($controller) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '@'\r\n                },\r\n                link: function (scope, iElement, iAttrs) {\r\n                    scope.$watch('initparams', function () {\r\n                        $controller(ctrlName, {$scope: scope});\r\n                    })\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n\r\n\r\n})(angular);\n},{}],37:[function(require,module,exports){\n(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state = 'test',\r\n        url='/test',\r\n        ctrlName = 'TestCtrl',\r\n        templateUrl = 'pages/test/test.html';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.test', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $state, $timeout, fbutil, $firebase) {\r\n        $scope.path='products';\r\n        $scope.id='bd_001';\r\n\r\n        $scope.loaded=function(value){\r\n            console.log(value);\r\n            $scope.isLoaded=true\r\n        };\r\n\r\n        $scope.from='https://lauchbox.firebaseio.com/products';\r\n        $scope.to='https://lauchbox2.firebaseio.com/products';\r\n\r\n        $scope.move=function(from,to){\r\n            $firebase.move(from,to)\r\n        };\r\n\r\n        $scope.updateDescription= function (firebaseObject) {\r\n            firebaseObject.$save();\r\n            //for full api, see $firebaseObject section in https://www.firebase.com/docs/web/libraries/angular/api.html\r\n        };\r\n\r\n        $scope.getMultipleRefVal= function () {\r\n            $firebase.getMultipleRefVal({\r\n                path1:'test/path1',\r\n                path2:'test/path2/&path1',\r\n                path3:'test/path3/&path1/&path2'\r\n            }).then(function(res){\r\n                $scope.result=res\r\n            })\r\n        };\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(function($stateProvider){\r\n            $stateProvider.state(state, {\r\n                templateUrl: templateUrl,\r\n                controller: ctrlName,\r\n                url:url\r\n            });\r\n        });\r\n\r\n})(angular);\n},{}]},{},[2,4,3,6,10,5,13,9,11,8,7,14,12,19,20,15,18,16,17,23,22,21,30,24,34,33,28,35,32,31,25,26,27,37,36,29,1])\n\n","(function (angular) {\r\n    'use strict';\r\n\r\n    obsidian.module('myApp.appVersion', [])\r\n        .directive('appVersion', /*@ngInject*/ function (version) {\r\n            return function (scope, elm) {\r\n                elm.text(version);\r\n            };\r\n        });\r\n})(angular);","(function (angular) {\r\n    'use strict';\r\n    obsidian.module('firebase.auth', ['firebase', 'firebase.utils'])\r\n        .factory('Auth', /*@ngInject*/ function ($firebaseAuth, fbutil, $q, FBURL, snippet, $firebase) {\r\n\r\n            var Auth = $firebaseAuth(fbutil.ref());\r\n\r\n            Auth.checkIfAccountExistOnFb = function (authData) {\r\n                var def = $q.defer();\r\n                if (!authData) def.reject('AUTH_NEEDED');\r\n                var ref = fbutil.ref('users', authData.uid, 'createdTime');\r\n                ref.once('value', function (snap) {\r\n                    if (snap.val() === null) {\r\n                        def.resolve(authData);\r\n                    }\r\n                }, function (err) {\r\n                    def.reject(err)\r\n                });\r\n                return def.promise\r\n            };\r\n\r\n            Auth.createAccount = function (authData, opt) {\r\n                if (!authData) return;\r\n                if (opt === undefined || (typeof opt !== 'object')) {\r\n                    var ref = fbutil.ref('users', authData.uid);\r\n                    return fbutil.handler(function (cb) {\r\n                        ref.set(Auth.basicAccountUserData(authData, opt), cb);\r\n                    })\r\n                } else {\r\n                    var def = $q.defer();\r\n                    if (!!opt.structure) {\r\n                        var rawData = snippet.flatten(authData, opt.flattenConfig);\r\n                        rawData.authData = authData;\r\n                        var values = snippet.createBatchUpdateValues(rawData, opt.structure);\r\n                        console.log(JSON.stringify(values));\r\n                        $firebase.batchUpdate(values, opt.isConsecutive).then(function () {\r\n                            def.resolve();\r\n                        }, opt.errorHandler);\r\n                    } else {\r\n                        def.reject('USERDATA_STRUCTURE_NEEDED')\r\n                    }\r\n                    return def.promise\r\n                }\r\n            };\r\n            //Example\r\n            //var opt={\r\n            //    structure:[\r\n            //        {\r\n            //            refUrl:'users/$uid',\r\n            //            value:'authData' //主要user acc, 將全部authData update 到此refUrl\r\n            //        },\r\n            //        {\r\n            //            refUrl:'userList/$uid', //產生一個只有 name和email 的list item\r\n            //            value:{\r\n            //                name:'password.name', //此string 代表authData.password.name\r\n            //                email:'password.email'\r\n            //            }\r\n            //        }\r\n            //    ]\r\n            //};\r\n\r\n            /*Auth.checkThenCreateAccount=function(authData){\r\n             var def=$q.defer();\r\n             Auth.checkIfAccountExistOnFb(authData).then(\r\n\r\n             function(snap){\r\n             if(snap===null) Auth.createAccount(authData).then(\r\n             function(authData){def.resolve(authData);},\r\n             function(err){def.reject(err)}\r\n             )},\r\n             function(err){\r\n             def.reject(err)\r\n             });\r\n             return def.promise\r\n             };*/\r\n\r\n            Auth.basicAccountUserData = function (authData) {\r\n                var provider = authData.provider,\r\n                    name = authData[provider].displayName || authData.uid,\r\n                    email = authData[provider].email || null,\r\n                    profileImageURL = authData[provider].profileImageURL || null;\r\n                if (provider === 'password') name = snippet.firstPartOfEmail(authData.password.email);\r\n                var basicUserInfo = {\r\n                    createdTime: Firebase.ServerValue.TIMESTAMP,\r\n                    name: name,\r\n                    email: email,\r\n                    profileImageURL: profileImageURL\r\n                };\r\n                basicUserInfo[provider] = {\r\n                    id: authData[provider].id || null\r\n                };\r\n                return basicUserInfo\r\n            };\r\n\r\n\r\n            Auth.loginWithProvider = function (provider, options) {\r\n                var opt = typeof options === 'object' ? options : {};\r\n                switch (provider) {\r\n                    case 'password':\r\n                        return Auth.$authWithPassword({email: opt.email, password: opt.password}, opt);\r\n                        break;\r\n                    case 'custom':\r\n                        return Auth.$authWithCustomToken(opt.customToken, opt);\r\n                        break;\r\n                    case 'anonymous':\r\n                        opt.rememberMe = opt.rememberMe || 'none';\r\n                        return Auth.$authAnonymously(opt);\r\n                        break;\r\n                    default:\r\n                        if (opt.popup === false) {\r\n                            return Auth.$authWithOAuthRedirect(provider, opt);\r\n                        } else {\r\n                            return Auth.$authWithOAuthPopup(provider, opt);\r\n                        }\r\n                        break;\r\n                }\r\n            };\r\n\r\n            Auth.removeUserData = function (authData, extraCallBack) {\r\n                var ref = new Firebase((FBURL + 'users/' + authData.uid));   //TODO: 𩄍惩撠滚𩄍firebase𩄍𣈲𩄍\r\n\r\n                ref.remove(function (err) {\r\n                    if (err) {\r\n                        console.log(err.code);\r\n                    } else {\r\n                        if (extraCallBack) extraCallBack(authData);\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n            return Auth;\r\n        });\r\n})(angular);\r\n\r\n","(function (angular) {\r\n    \"use strict\";\r\n    var mod = obsidian.module('myApp.errorHandler',[]),\r\n        state = 'error',\r\n        url = '/error/:errorId',\r\n        ctrlName = 'errorCtrl',\r\n        templateUrl = 'components/errorHandler/error.html';\r\n\r\n\r\n    mod.controller(ctrlName, /*@ngInject*/ function ($scope, $stateParams) {\r\n        //create your own controller here\r\n        $scope.error=$stateParams\r\n    });\r\n\r\n    mod.config(/*@ngInject*/ function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    });\r\n\r\n    mod.factory('$errorHandler', /*@ngInject*/ function ($state) {\r\n        var errorType={\r\n\r\n        };\r\n\r\n        function openErrorPage(opt) {\r\n            $state.go('error', opt);\r\n            if (!$scope.$$phase) $scope.$apply(); //確保成功轉換頁面\r\n        }\r\n\r\n        return function(opt){\r\n            var _opt=opt||{};\r\n            if(!_opt.type){\r\n                return function(error){\r\n                    console.log(JSON.stringify(error));\r\n                }\r\n            } else if(_opt.openErrorPage){\r\n                openErrorPage(_opt)\r\n            }\r\n        };\r\n    });\r\n})(angular);","(function (angular) {\r\n    'use strict';\r\n    obsidian.module('myApp.filters', [])\r\n        .filter('reverse', /*@ngInject*/ function () {\r\n            return function (items) {\r\n                return items.slice().reverse();\r\n            }\r\n        })\r\n        .filter('consecutive', /*@ngInject*/ function ($filter, snippet) {\r\n            return function (items, input, isReverse) {\r\n                var _items = items || [];\r\n                var result = angular.copy(_items);\r\n\r\n                if (typeof input === 'object') {\r\n                    angular.forEach(input, function (value, key) {\r\n                        if (!value && value !== '') return;\r\n                        if (value === true) {\r\n                            result = $filter('filter')(result, key);\r\n                        } else {\r\n                            result = $filter('filter')(result, value);\r\n                        }\r\n                    });\r\n                } else if (typeof input === 'string') {\r\n                    input = input.trim();\r\n                    var keyArray = input.split(' ');\r\n                    for (var i = 0; i < keyArray.length; i++) {\r\n                        result = $filter('filter')(result, keyArray[i]);\r\n                    }\r\n                    result = input === '' ? _items : result\r\n                }\r\n                return isReverse ? result.slice().reverse() : result\r\n            }\r\n        })\r\n        ////see http://jsfiddle.net/nirmalkumar_86/9F89Q/5/\r\n        .filter('filterMultiple', /*@ngInject*/ function ($filter) {\r\n            return function (items, keyObj) {\r\n                var filterObj = {\r\n                    data: items,\r\n                    filteredData: [],\r\n                    applyFilter: function (obj, key) {\r\n                        var fData = [];\r\n                        if (this.filteredData.length == 0)\r\n                            this.filteredData = this.data;\r\n                        if (obj) {\r\n                            var fObj = {};\r\n                            if (!angular.isArray(obj)) {\r\n                                fObj[key] = obj;\r\n                                fData = fData.concat($filter('filter')(this.filteredData, fObj));\r\n                            } else if (angular.isArray(obj)) {\r\n                                if (obj.length > 0) {\r\n                                    for (var i = 0; i < obj.length; i++) {\r\n                                        if (angular.isDefined(obj[i])) {\r\n                                            fObj[key] = obj[i];\r\n                                            fData = fData.concat($filter('filter')(this.filteredData, fObj));\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                            if (fData.length > 0) {\r\n                                this.filteredData = fData;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                if (keyObj) {\r\n                    angular.forEach(keyObj, function (obj, key) {\r\n                        filterObj.applyFilter(obj, key);\r\n                    });\r\n                }\r\n\r\n                return filterObj.filteredData;\r\n            }\r\n        })\r\n        .filter('unique', /*@ngInject*/ function () {\r\n            return function (input, key) {\r\n                var unique = {};\r\n                var uniqueList = [];\r\n                for (var i = 0; i < input.length; i++) {\r\n                    if (typeof unique[input[i][key]] == \"undefined\") {\r\n                        unique[input[i][key]] = \"\";\r\n                        uniqueList.push(input[i]);\r\n                    }\r\n                }\r\n                return uniqueList;\r\n            };\r\n        })\r\n        //see https://github.com/vpegado/angular-percentage-filter\r\n        .filter('percentage', /*@ngInject*/ function ($window) {\r\n            return function (input, decimals, suffix) {\r\n                decimals = angular.isNumber(decimals) ? decimals : 3;\r\n                suffix = suffix || '%';\r\n                if ($window.isNaN(input)) {\r\n                    return '';\r\n                }\r\n                return Math.round(input * Math.pow(10, decimals + 2)) / Math.pow(10, decimals) + suffix\r\n            };\r\n        });\r\n})(angular);","(function (angular) {\r\n    var mod = obsidian.module('firebase.utils', ['firebase', 'myApp.config']);\r\n\r\n// a simple wrapper on Firebase and AngularFire to simplify deps and keep things DRY\r\n    mod.factory('fbutil',/*@ngInject*/ function ($window, FBURL, $q) {\r\n        \"use strict\";\r\n\r\n        var utils = {\r\n            // convert a node or Firebase style callback to a future\r\n            handler: function (fn, context) {\r\n                return utils.defer(function (def) {\r\n                    fn.call(context, function (err, result) {\r\n                        if (err !== null) {\r\n                            def.reject(err);\r\n                        }\r\n                        else {\r\n                            def.resolve(result);\r\n                        }\r\n                    });\r\n                });\r\n            },\r\n\r\n            // abstract the process of creating a future/promise\r\n            defer: function (fn, context) {\r\n                var def = $q.defer();\r\n                fn.call(context, def);\r\n                return def.promise;\r\n            },\r\n\r\n            ref: firebaseRef\r\n        };\r\n\r\n        return utils;\r\n\r\n        function pathRef(args) {\r\n            for (var i = 0; i < args.length; i++) {\r\n                if (angular.isArray(args[i])) {\r\n                    args[i] = pathRef(args[i]);\r\n                }\r\n                else if (typeof args[i] !== 'string') {\r\n                    throw new Error('Argument ' + i + ' to firebaseRef is not a string: ' + args[i]);\r\n                }\r\n            }\r\n            return args.join('/');\r\n        }\r\n\r\n        /**\r\n         * Example:\r\n         * <code>\r\n         *    function(firebaseRef) {\r\n         *       var ref = firebaseRef('path/to/data');\r\n         *    }\r\n         * </code>\r\n         *\r\n         * @function\r\n         * @name firebaseRef\r\n         * @param {String|Array...} path relative path to the root folder in Firebase instance\r\n         * @return a Firebase instance\r\n         */\r\n        function firebaseRef(path) {\r\n            var ref = new $window.Firebase(FBURL);\r\n            var args = Array.prototype.slice.call(arguments);\r\n            if (args.length) {\r\n                ref = ref.child(pathRef(args));\r\n            }\r\n            return ref;\r\n        }\r\n    });\r\n})(angular);","/*!\r\n * angular-ui-mask\r\n * https://github.com/angular-ui/ui-mask\r\n * Version: 1.4.3 - 2015-08-26T07:27:36.805Z\r\n * License: MIT\r\n */\r\n\r\n!function(){\"use strict\";angular.module(\"ui.mask\",[]).value(\"uiMaskConfig\",{maskDefinitions:{9:/\\d/,A:/[a-zA-Z]/,\"*\":/[a-zA-Z0-9]/},clearOnBlur:!0,eventsToHandle:[\"input\",\"keyup\",\"click\",\"focus\"]}).directive(\"uiMask\",[\"uiMaskConfig\",\"$parse\",function(e,n){function t(e){return e===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(e.type||e.href||~e.tabIndex)}return{priority:100,require:\"ngModel\",restrict:\"A\",compile:function(){var r=e;return function(e,i,u,a){function o(e){return angular.isDefined(e)?(y(e),F?(d(),h(),!0):f()):f()}function l(e){e&&(R=e,F&&i.val(m(v(i.val()))))}function s(e){return F?(j=v(e||\"\"),z=p(j),a.$setValidity(\"mask\",z),z&&j.length?m(j):void 0):e}function c(e){return F?(j=v(e||\"\"),z=p(j),a.$viewValue=j.length?m(j):\"\",a.$setValidity(\"mask\",z),\"\"===j&&u.required&&a.$setValidity(\"required\",!a.$error.required),z?j:void 0):e}function f(){return F=!1,g(),angular.isDefined(K)?i.attr(\"placeholder\",K):i.removeAttr(\"placeholder\"),angular.isDefined(N)?i.attr(\"maxlength\",N):i.removeAttr(\"maxlength\"),i.val(a.$modelValue),a.$viewValue=a.$modelValue,!1}function d(){j=Z=v(a.$modelValue||\"\"),q=H=m(j),z=p(j),u.maxlength&&i.attr(\"maxlength\",2*E[E.length-1]),K||i.attr(\"placeholder\",R);for(var e=a.$modelValue,n=a.$formatters.length;n--;)e=a.$formatters[n](e);a.$viewValue=e||\"\",a.$render()}function h(){I||(i.bind(\"blur\",k),i.bind(\"mousedown mouseup\",x),i.bind(W.eventsToHandle.join(\" \"),M),i.bind(\"paste\",w),I=!0)}function g(){I&&(i.unbind(\"blur\",k),i.unbind(\"mousedown\",x),i.unbind(\"mouseup\",x),i.unbind(\"input\",M),i.unbind(\"keyup\",M),i.unbind(\"click\",M),i.unbind(\"focus\",M),i.unbind(\"paste\",w),I=!1)}function p(e){return e.length?e.length>=T:!0}function v(e){var n=\"\",t=_.slice();return e=e.toString(),angular.forEach(P,function(n){e=e.replace(n,\"\")}),angular.forEach(e.split(\"\"),function(e){t.length&&t[0].test(e)&&(n+=e,t.shift())}),n}function m(e){var n=\"\",t=E.slice();return angular.forEach(R.split(\"\"),function(r,i){e.length&&i===t[0]?(n+=e.charAt(0)||\"_\",e=e.substr(1),t.shift()):n+=r}),n}function b(e){var n=angular.isDefined(u.uiMaskPlaceholder)?u.uiMaskPlaceholder:u.placeholder;return\"undefined\"!=typeof n&&n[e]?n[e]:\"_\"}function $(){return R.replace(/[_]+/g,\"_\").replace(/([^_]+)([a-zA-Z0-9])([^_])/g,\"$1$2_$3\").split(\"_\")}function y(e){var n=0;if(E=[],_=[],R=\"\",\"string\"==typeof e){T=0;var t=!1,r=0,i=e.split(\"\");angular.forEach(i,function(e,i){W.maskDefinitions[e]?(E.push(n),R+=b(i-r),_.push(W.maskDefinitions[e]),n++,t||T++):\"?\"===e?(t=!0,r++):(R+=e,n++)})}E.push(E.slice().pop()+1),P=$(),F=E.length>1?!0:!1}function k(){W.clearOnBlur&&(B=0,C=0,z&&0!==j.length||(q=\"\",i.val(\"\"),e.$apply(function(){a.$setViewValue(\"\")})))}function x(e){\"mousedown\"===e.type?i.bind(\"mouseout\",V):i.unbind(\"mouseout\",V)}function V(){C=D(this),i.unbind(\"mouseout\",V)}function w(){S(this,i.val().length)}function M(e){e=e||{};var n=e.which,t=e.type;if(16!==n&&91!==n){var r,u=i.val(),o=H,l=v(u),s=Z,c=A(this)||0,f=B||0,d=c-f,h=E[0],g=E[l.length]||E.slice().shift(),p=C||0,b=D(this)>0,$=p>0,y=u.length>o.length||p&&u.length>o.length-p,k=u.length<o.length||p&&u.length===o.length-p,x=n>=37&&40>=n&&e.shiftKey,V=37===n,w=8===n||\"keyup\"!==t&&k&&-1===d,M=46===n||\"keyup\"!==t&&k&&0===d&&!$,_=(V||w||\"click\"===t)&&c>h;if(C=D(this),!x&&(!b||\"click\"!==t&&\"keyup\"!==t)){if(\"input\"===t&&k&&!$&&l===s){for(;w&&c>h&&!O(c);)c--;for(;M&&g>c&&-1===E.indexOf(c);)c++;var R=E.indexOf(c);l=l.substring(0,R)+l.substring(R+1)}for(r=m(l),H=r,Z=l,i.val(r),a.$setViewValue(l),y&&h>=c&&(c=h+1),_&&c--,c=c>g?g:h>c?h:c;!O(c)&&c>h&&g>c;)c+=_?-1:1;(_&&g>c||y&&!O(f))&&c++,B=c,S(this,c)}}}function O(e){return E.indexOf(e)>-1}function A(e){if(!e)return 0;if(void 0!==e.selectionStart)return e.selectionStart;if(document.selection&&t(i[0])){e.focus();var n=document.selection.createRange();return n.moveStart(\"character\",e.value?-e.value.length:0),n.text.length}return 0}function S(e,n){if(!e)return 0;if(0!==e.offsetWidth&&0!==e.offsetHeight)if(e.setSelectionRange)t(i[0])&&(e.focus(),e.setSelectionRange(n,n));else if(e.createTextRange){var r=e.createTextRange();r.collapse(!0),r.moveEnd(\"character\",n),r.moveStart(\"character\",n),r.select()}}function D(e){return e?void 0!==e.selectionStart?e.selectionEnd-e.selectionStart:document.selection?document.selection.createRange().text.length:0:0}var E,_,R,P,T,j,q,z,H,Z,B,C,F=!1,I=!1,K=u.placeholder,N=u.maxlength,W={};u.uiOptions?(W=e.$eval(\"[\"+u.uiOptions+\"]\"),angular.isObject(W[0])&&(W=function(e,n){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(void 0===n[t]?n[t]=angular.copy(e[t]):angular.extend(n[t],e[t]));return n}(r,W[0]))):W=r,u.$observe(\"uiMask\",o),angular.isDefined(u.uiMaskPlaceholder)?u.$observe(\"uiMaskPlaceholder\",l):u.$observe(\"placeholder\",l);var G=!1;u.$observe(\"modelViewValue\",function(e){\"true\"===e&&(G=!0)}),e.$watch(u.ngModel,function(t){if(G&&t){var r=n(u.ngModel);r.assign(e,a.$viewValue)}}),a.$formatters.push(s),a.$parsers.push(c),i.bind(\"mousedown mouseup\",x),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(null===this)throw new TypeError;var n=Object(this),t=n.length>>>0;if(0===t)return-1;var r=0;if(arguments.length>1&&(r=Number(arguments[1]),r!==r?r=0:0!==r&&r!==1/0&&r!==-(1/0)&&(r=(r>0||-1)*Math.floor(Math.abs(r)))),r>=t)return-1;for(var i=r>=0?r:Math.max(t-Math.abs(r),0);t>i;i++)if(i in n&&n[i]===e)return i;return-1})}}}}])}();","(function (angular) {\r\n    'use strict';\r\n    var mod = obsidian.module('ngFirebase', []);\r\n\r\n    mod.directive('ngFirebase', ['$firebase', function ($firebase) {\r\n        return {\r\n            restrict: 'A',\r\n            transclude: true,\r\n            scope: {\r\n                ngFirebase: '@',\r\n                loading: '@'\r\n            },\r\n            link: function (scope, element, attrs, ctrl, transcludeFn) {\r\n                function init() {\r\n                    var obj = $firebase.$object(scope.ngFirebase);\r\n                    element.append(scope.loading);\r\n                    obj.$loaded(appendTransclude, appendTransclude);\r\n\r\n                    var valueAs = attrs.valueAs || '$value',\r\n                        errorAs = attrs.errorAs || '$error';\r\n\r\n                    function appendTransclude(dataOrError) {\r\n                        element.empty();\r\n                        transcludeFn(function (clone, trclScope) {\r\n                            element.append(clone);\r\n                            if (dataOrError === obj) {\r\n                                if (attrs.pure) {\r\n                                    var pureValue = {};\r\n                                    angular.forEach(dataOrError, function (subValue, key) {\r\n                                        pureValue[key] = subValue\r\n                                    });\r\n                                    trclScope[valueAs] = dataOrError.$value ? dataOrError.$value : pureValue;\r\n                                } else {\r\n                                    trclScope[valueAs] = dataOrError.$value ? dataOrError.$value : dataOrError;\r\n                                }\r\n                                trclScope.$firebaseObject = dataOrError;\r\n                                trclScope.$eval(attrs.loaded);\r\n                            } else {\r\n                                trclScope[errorAs] = dataOrError;\r\n                                obj.$destroy();\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n\r\n                scope.$watch('ngFirebase', function () {\r\n                    if ($firebase.isRefUrlValid(scope.ngFirebase)) init();\r\n                });\r\n            }\r\n\r\n        };\r\n    }]);\r\n})(angular);\r\n\r\n","(function (angular) {\r\n    'use strict';\r\n\r\n    angular.module('ngCart', ['ngCart.directives'])\r\n        .config([function () {\r\n\r\n        }])\r\n\r\n        .provider('$ngCart', function () {\r\n            this.$get = function () {\r\n            };\r\n        })\r\n\r\n        .run(['$rootScope', 'ngCart', 'ngCartItem', 'store', function ($rootScope, ngCart, ngCartItem, store) {\r\n\r\n            $rootScope.$on('ngCart:change', function () {\r\n                ngCart.$save();\r\n            });\r\n\r\n            if (angular.isObject(store.get('cart'))) {\r\n                ngCart.$restore(store.get('cart'));\r\n\r\n            } else {\r\n                ngCart.init();\r\n            }\r\n\r\n        }])\r\n\r\n        .service('ngCart', ['$rootScope', 'ngCartItem', 'store', function ($rootScope, ngCartItem, store) {\r\n\r\n            this.init = function () {\r\n                this.$cart = {\r\n                    shipping: null,\r\n                    taxRate: null,\r\n                    tax: null,\r\n                    items: []\r\n                };\r\n            };\r\n\r\n            this.addItem = function (id, name, price, quantity, data) {\r\n\r\n                var inCart = this.getItemById(id);\r\n\r\n                if (typeof inCart === 'object') {\r\n                    //Update quantity of an item if it's already in the cart\r\n                    inCart.setQuantity(quantity, false);\r\n                } else {\r\n                    var newItem = new ngCartItem(id, name, price, quantity, data);\r\n                    this.$cart.items.push(newItem);\r\n                    $rootScope.$broadcast('ngCart:itemAdded', newItem);\r\n                }\r\n\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n            };\r\n\r\n            this.getItemById = function (itemId) {\r\n                var items = this.getCart().items;\r\n                var build = false;\r\n\r\n                angular.forEach(items, function (item) {\r\n                    if (item.getId() === itemId) {\r\n                        build = item;\r\n                    }\r\n                });\r\n                return build;\r\n            };\r\n\r\n            this.setShipping = function (shipping) {\r\n                this.$cart.shipping = shipping;\r\n                return this.getShipping();\r\n            };\r\n\r\n            this.getShipping = function () {\r\n                if (this.getCart().items.length == 0) return 0;\r\n                return this.getCart().shipping;\r\n            };\r\n\r\n            this.setTaxRate = function (taxRate) {\r\n                this.$cart.taxRate = +parseFloat(taxRate).toFixed(2);\r\n                return this.getTaxRate();\r\n            };\r\n\r\n            this.getTaxRate = function () {\r\n                return this.$cart.taxRate\r\n            };\r\n\r\n            this.getTax = function () {\r\n                return +parseFloat(((this.getSubTotal() / 100) * this.getCart().taxRate )).toFixed(2);\r\n            };\r\n\r\n            this.setCart = function (cart) {\r\n                this.$cart = cart;\r\n                return this.getCart();\r\n            };\r\n\r\n            this.getCart = function () {\r\n                return this.$cart;\r\n            };\r\n\r\n            this.getItems = function () {\r\n                return this.getCart().items;\r\n            };\r\n\r\n            this.getTotalItems = function () {\r\n                var count = 0;\r\n                var items = this.getItems();\r\n                angular.forEach(items, function (item) {\r\n                    count += item.getQuantity();\r\n                });\r\n                return count;\r\n            };\r\n\r\n            this.getTotalUniqueItems = function () {\r\n                return this.getCart().items.length;\r\n            };\r\n\r\n            this.getSubTotal = function () {\r\n                var total = 0;\r\n                angular.forEach(this.getCart().items, function (item) {\r\n                    total += item.getTotal();\r\n                });\r\n                return +parseFloat(total).toFixed(2);\r\n            };\r\n\r\n            this.totalCost = function () {\r\n                return +parseFloat(this.getSubTotal() + this.getShipping() + this.getTax()).toFixed(2);\r\n            };\r\n\r\n            this.removeItem = function (index) {\r\n                this.$cart.items.splice(index, 1);\r\n                $rootScope.$broadcast('ngCart:itemRemoved', {});\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n\r\n            };\r\n\r\n            this.removeItemById = function (id) {\r\n                var cart = this.getCart();\r\n                angular.forEach(cart.items, function (item, index) {\r\n                    if (item.getId() === id) {\r\n                        cart.items.splice(index, 1);\r\n                    }\r\n                });\r\n                this.setCart(cart);\r\n                $rootScope.$broadcast('ngCart:itemRemoved', {});\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n            };\r\n\r\n            this.empty = function () {\r\n\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n                this.$cart.items = [];\r\n                localStorage.removeItem('cart');\r\n            };\r\n\r\n            this.isEmpty = function () {\r\n\r\n                return (this.$cart.items.length > 0 ? false : true);\r\n\r\n            };\r\n\r\n            this.toObject = function () {\r\n\r\n                if (this.getItems().length === 0) return false;\r\n\r\n                var items = [];\r\n                angular.forEach(this.getItems(), function (item) {\r\n                    items.push(item.toObject());\r\n                });\r\n\r\n                return {\r\n                    shipping: this.getShipping(),\r\n                    tax: this.getTax(),\r\n                    taxRate: this.getTaxRate(),\r\n                    subTotal: this.getSubTotal(),\r\n                    totalCost: this.totalCost(),\r\n                    items: items\r\n                }\r\n            };\r\n\r\n\r\n            this.$restore = function (storedCart) {\r\n                var _self = this;\r\n                _self.init();\r\n                _self.$cart.shipping = storedCart.shipping;\r\n                _self.$cart.tax = storedCart.tax;\r\n\r\n                angular.forEach(storedCart.items, function (item) {\r\n                    _self.$cart.items.push(new ngCartItem(item._id, item._name, item._price, item._quantity, item._data));\r\n                });\r\n                this.$save();\r\n            };\r\n\r\n            this.$save = function () {\r\n                return store.set('cart', JSON.stringify(this.getCart()));\r\n            }\r\n\r\n        }])\r\n\r\n        .factory('ngCartItem', ['$rootScope', '$log', function ($rootScope, $log) {\r\n\r\n            var item = function (id, name, price, quantity, data) {\r\n                this.setId(id);\r\n                this.setName(name);\r\n                this.setPrice(price);\r\n                this.setQuantity(quantity);\r\n                this.setData(data);\r\n            };\r\n\r\n\r\n            item.prototype.setId = function (id) {\r\n                if (id)  this._id = id;\r\n                else {\r\n                    $log.error('An ID must be provided');\r\n                }\r\n            };\r\n\r\n            item.prototype.getId = function () {\r\n                return this._id;\r\n            };\r\n\r\n\r\n            item.prototype.setName = function (name) {\r\n                if (name)  this._name = name;\r\n                else {\r\n                    $log.error('A name must be provided');\r\n                }\r\n            };\r\n            item.prototype.getName = function () {\r\n                return this._name;\r\n            };\r\n\r\n            item.prototype.setPrice = function (price) {\r\n                var priceFloat = parseFloat(price);\r\n                if (priceFloat) {\r\n                    if (priceFloat <= 0) {\r\n                        $log.error('A price must be over 0');\r\n                    } else {\r\n                        this._price = (priceFloat);\r\n                    }\r\n                } else {\r\n                    $log.error('A price must be provided');\r\n                }\r\n            };\r\n            item.prototype.getPrice = function () {\r\n                return this._price;\r\n            };\r\n\r\n\r\n            item.prototype.setQuantity = function (quantity, relative) {\r\n\r\n\r\n                var quantityInt = parseInt(quantity);\r\n                if (quantityInt % 1 === 0) {\r\n                    if (relative === true) {\r\n                        this._quantity += quantityInt;\r\n                    } else {\r\n                        this._quantity = quantityInt;\r\n                    }\r\n                    if (this._quantity < 1) this._quantity = 1;\r\n\r\n                } else {\r\n                    this._quantity = 1;\r\n                    $log.info('Quantity must be an integer and was defaulted to 1');\r\n                }\r\n                $rootScope.$broadcast('ngCart:change', {});\r\n\r\n            };\r\n\r\n            item.prototype.getQuantity = function () {\r\n                return this._quantity;\r\n            };\r\n\r\n            item.prototype.setData = function (data) {\r\n                if (data) this._data = data;\r\n            };\r\n\r\n            item.prototype.getData = function () {\r\n                if (this._data) return this._data;\r\n                else $log.info('This item has no data');\r\n            };\r\n\r\n\r\n            item.prototype.getTotal = function () {\r\n                return +parseFloat(this.getQuantity() * this.getPrice()).toFixed(2);\r\n            };\r\n\r\n            item.prototype.toObject = function () {\r\n                return {\r\n                    id: this.getId(),\r\n                    name: this.getName(),\r\n                    price: this.getPrice(),\r\n                    quantity: this.getQuantity(),\r\n                    data: this.getData(),\r\n                    total: this.getTotal()\r\n                }\r\n            };\r\n\r\n            return item;\r\n\r\n        }])\r\n\r\n        .service('store', ['$window', function ($window) {\r\n\r\n            return {\r\n\r\n                get: function (key) {\r\n                    if ($window.localStorage [key]) {\r\n                        var cart = angular.fromJson($window.localStorage [key]);\r\n                        return JSON.parse(cart);\r\n                    }\r\n                    return false;\r\n\r\n                },\r\n\r\n\r\n                set: function (key, val) {\r\n\r\n                    if (val === undefined) {\r\n                        $window.localStorage.removeItem(key);\r\n                    } else {\r\n                        $window.localStorage [key] = angular.toJson(val);\r\n                    }\r\n                    return $window.localStorage [key];\r\n                }\r\n            }\r\n        }])\r\n\r\n        .controller('CartController', ['$scope', 'ngCart', function ($scope, ngCart) {\r\n            $scope.ngCart = ngCart;\r\n\r\n        }])\r\n\r\n        .value('version', '1.0.0');\r\n    'use strict';\r\n\r\n\r\n    angular.module('ngCart.directives', ['ngCart.fulfilment'])\r\n\r\n        .controller('CartController', ['$scope', 'ngCart', function ($scope, ngCart) {\r\n            $scope.ngCart = ngCart;\r\n        }])\r\n\r\n        .directive('ngcartAddtocart', ['ngCart', function (ngCart) {\r\n            return {\r\n                restrict: 'E',\r\n                controller: 'CartController',\r\n                scope: {\r\n                    id: '@',\r\n                    name: '@',\r\n                    quantity: '@',\r\n                    quantityMax: '@',\r\n                    price: '@',\r\n                    data: '='\r\n                },\r\n                transclude: true,\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'template/ngCart/addtocart.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                },\r\n                link: function (scope, element, attrs) {\r\n                    scope.attrs = attrs;\r\n                    scope.inCart = function () {\r\n                        return ngCart.getItemById(attrs.id);\r\n                    };\r\n\r\n                    if (scope.inCart()) {\r\n                        scope.q = ngCart.getItemById(attrs.id).getQuantity();\r\n                    } else {\r\n                        scope.q = parseInt(scope.quantity);\r\n                    }\r\n\r\n                    scope.qtyOpt = [];\r\n                    for (var i = 1; i <= scope.quantityMax; i++) {\r\n                        scope.qtyOpt.push(i);\r\n                    }\r\n\r\n                }\r\n\r\n            };\r\n        }])\r\n\r\n        .directive('ngcartCart', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                controller: 'CartController',\r\n                scope: {},\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'template/ngCart/cart.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                },\r\n                link: function (scope, element, attrs) {\r\n\r\n                }\r\n            };\r\n        }])\r\n\r\n        .directive('ngcartSummary', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                controller: 'CartController',\r\n                scope: {},\r\n                transclude: true,\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'template/ngCart/summary.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                }\r\n            };\r\n        }])\r\n\r\n        .directive('ngcartCheckout', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                controller: ('CartController', ['$rootScope', '$scope', 'ngCart', 'fulfilmentProvider', function ($rootScope, $scope, ngCart, fulfilmentProvider) {\r\n                    $scope.ngCart = ngCart;\r\n\r\n                    $scope.checkout = function () {\r\n                        fulfilmentProvider.setService($scope.service);\r\n                        fulfilmentProvider.setSettings($scope.settings);\r\n                        fulfilmentProvider.checkout()\r\n                            .success(function (data, status, headers, config) {\r\n                                $rootScope.$broadcast('ngCart:checkout_succeeded', data);\r\n                            })\r\n                            .error(function (data, status, headers, config) {\r\n                                $rootScope.$broadcast('ngCart:checkout_failed', {\r\n                                    statusCode: status,\r\n                                    error: data\r\n                                });\r\n                            });\r\n                    }\r\n                }]),\r\n                scope: {\r\n                    service: '@',\r\n                    settings: '='\r\n                },\r\n                transclude: true,\r\n                templateUrl: function (element, attrs) {\r\n                    if (typeof attrs.templateUrl == 'undefined') {\r\n                        return 'template/ngCart/checkout.html';\r\n                    } else {\r\n                        return attrs.templateUrl;\r\n                    }\r\n                }\r\n            };\r\n        }]);\r\n\r\n    angular.module('ngCart.fulfilment', [])\r\n        .service('fulfilmentProvider', ['$injector', function ($injector) {\r\n\r\n            this._obj = {\r\n                service: undefined,\r\n                settings: undefined\r\n            };\r\n\r\n            this.setService = function (service) {\r\n                this._obj.service = service;\r\n            };\r\n\r\n            this.setSettings = function (settings) {\r\n                this._obj.settings = settings;\r\n            };\r\n\r\n            this.checkout = function () {\r\n                var provider = $injector.get('ngCart.fulfilment.' + this._obj.service);\r\n                return provider.checkout(this._obj.settings);\r\n\r\n            }\r\n\r\n        }])\r\n\r\n\r\n        .service('ngCart.fulfilment.log', ['$q', '$log', 'ngCart', function ($q, $log, ngCart) {\r\n\r\n            this.checkout = function () {\r\n\r\n                var deferred = $q.defer();\r\n\r\n                $log.info(ngCart.toObject());\r\n                deferred.resolve({\r\n                    cart: ngCart.toObject()\r\n                });\r\n\r\n                return deferred.promise;\r\n\r\n            }\r\n\r\n        }])\r\n\r\n        .service('ngCart.fulfilment.http', ['$http', 'ngCart', function ($http, ngCart) {\r\n\r\n            this.checkout = function (settings) {\r\n                return $http.post(settings.url,\r\n                    {data: ngCart.toObject(), options: settings.options});\r\n            }\r\n        }])\r\n\r\n\r\n        .service('ngCart.fulfilment.paypal', ['$http', 'ngCart', function ($http, ngCart) {\r\n\r\n\r\n        }]);\r\n})(angular);","(function (angular) {\r\n    /**\r\n     * Wraps ng-cloak so that, instead of simply waiting for Angular to compile, it waits until\r\n     * Auth resolves with the remote Firebase services.\r\n     *\r\n     * <code>\r\n     *    <div ng-cloak>Authentication has resolved.</div>\r\n     * </code>\r\n     */\r\n    var mod = obsidian.module('myApp.ngcloakDecorator', []);\r\n\r\n    mod.config(['$provide', function ($provide) {\r\n        // adapt ng-cloak to wait for auth before it does its magic\r\n        $provide.decorator('ngCloakDirective', ['$delegate', 'Auth',\r\n            function ($delegate, Auth) {\r\n                var directive = $delegate[0];\r\n                // make a copy of the old directive\r\n                var _compile = directive.compile;\r\n                directive.compile = function (element, attr) {\r\n                    Auth.$waitForAuth().then(function () {\r\n                        // after auth, run the original ng-cloak directive\r\n                        _compile.call(directive, element, attr);\r\n                    });\r\n                };\r\n                // return the modified directive\r\n                return $delegate;\r\n            }]);\r\n    }]);\r\n})(angular);\r\n\r\n\r\n","(function (angular) {\r\n    // see https://github.com/cgross/angular-notify/blob/master/dist/angular-notify.js\r\n    var mod = angular.module('ngNotify', []);\r\n\r\n    mod.factory('ngNotify', ['$timeout', '$http', '$compile', '$templateCache', '$rootScope',\r\n        function ($timeout, $http, $compile, $templateCache, $rootScope) {\r\n\r\n            var startTop = 10;\r\n            var verticalSpacing = 15;\r\n            var defaultDuration = 10000;\r\n            var defaultTemplateUrl = 'angular-notify.html';\r\n            var position = 'center';\r\n            var container = document.body;\r\n            var maximumOpen = 0;\r\n\r\n            var messageElements = [];\r\n            var openNotificationsScope = [];\r\n\r\n            var notify = function (args) {\r\n\r\n                if (typeof args !== 'object') {\r\n                    args = {message: args};\r\n                }\r\n\r\n                args.duration = args.duration ? args.duration : defaultDuration;\r\n                args.templateUrl = args.templateUrl ? args.templateUrl : defaultTemplateUrl;\r\n                args.container = args.container ? args.container : container;\r\n                args.classes = args.classes ? args.classes : '';\r\n\r\n                var scope = args.scope ? args.scope.$new() : $rootScope.$new();\r\n                scope.$position = args.position ? args.position : position;\r\n                scope.$message = args.message;\r\n                scope.$classes = args.classes;\r\n                scope.$messageTemplate = args.messageTemplate;\r\n\r\n                if (maximumOpen > 0) {\r\n                    var numToClose = (openNotificationsScope.length + 1) - maximumOpen;\r\n                    for (var i = 0; i < numToClose; i++) {\r\n                        openNotificationsScope[i].$close();\r\n                    }\r\n                }\r\n\r\n                $http.get(args.templateUrl, {cache: $templateCache}).success(function (template) {\r\n\r\n                    var templateElement = $compile(template)(scope);\r\n                    templateElement.bind('webkitTransitionEnd oTransitionEnd otransitionend transitionend msTransitionEnd', function (e) {\r\n                        if (e.propertyName === 'opacity' || e.currentTarget.style.opacity === 0 ||\r\n                            (e.originalEvent && e.originalEvent.propertyName === 'opacity')) {\r\n\r\n                            templateElement.remove();\r\n                            messageElements.splice(messageElements.indexOf(templateElement), 1);\r\n                            openNotificationsScope.splice(openNotificationsScope.indexOf(scope), 1);\r\n                            layoutMessages();\r\n                        }\r\n                    });\r\n\r\n                    if (args.messageTemplate) {\r\n                        var messageTemplateElement;\r\n                        for (var i = 0; i < templateElement.children().length; i++) {\r\n                            if (angular.element(templateElement.children()[i]).hasClass('cg-notify-message-template')) {\r\n                                messageTemplateElement = angular.element(templateElement.children()[i]);\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (messageTemplateElement) {\r\n                            messageTemplateElement.append($compile(args.messageTemplate)(scope));\r\n                        } else {\r\n                            throw new Error('ngNotify could not find the .ng-notify-message-template element in ' + args.templateUrl + '.');\r\n                        }\r\n                    }\r\n\r\n                    angular.element(args.container).append(templateElement);\r\n                    messageElements.push(templateElement);\r\n\r\n                    if (scope.$position === 'center') {\r\n                        $timeout(function () {\r\n                            scope.$centerMargin = '-' + (templateElement[0].offsetWidth / 2) + 'px';\r\n                        });\r\n                    }\r\n\r\n                    scope.$close = function () {\r\n                        templateElement.css('opacity', 0).attr('data-closing', 'true');\r\n                        layoutMessages();\r\n                    };\r\n\r\n                    var layoutMessages = function () {\r\n                        var j = 0;\r\n                        var currentY = startTop;\r\n                        for (var i = messageElements.length - 1; i >= 0; i--) {\r\n                            var shadowHeight = 10;\r\n                            var element = messageElements[i];\r\n                            var height = element[0].offsetHeight;\r\n                            var top = currentY + height + shadowHeight;\r\n                            if (element.attr('data-closing')) {\r\n                                top += 20;\r\n                            } else {\r\n                                currentY += height + verticalSpacing;\r\n                            }\r\n                            element.css('top', top + 'px').css('margin-top', '-' + (height + shadowHeight) + 'px').css('visibility', 'visible');\r\n                            j++;\r\n                        }\r\n                    };\r\n\r\n                    $timeout(function () {\r\n                        layoutMessages();\r\n                    });\r\n\r\n                    if (args.duration > 0) {\r\n                        $timeout(function () {\r\n                            scope.$close();\r\n                        }, args.duration);\r\n                    }\r\n\r\n                }).error(function (data) {\r\n                    throw new Error('Template specified for ngNotify (' + args.templateUrl + ') could not be loaded. ' + data);\r\n                });\r\n\r\n                var retVal = {};\r\n\r\n                retVal.close = function () {\r\n                    if (scope.$close) {\r\n                        scope.$close();\r\n                    }\r\n                };\r\n\r\n                Object.defineProperty(retVal, 'message', {\r\n                    get: function () {\r\n                        return scope.$message;\r\n                    },\r\n                    set: function (val) {\r\n                        scope.$message = val;\r\n                    }\r\n                });\r\n\r\n                openNotificationsScope.push(scope);\r\n\r\n                return retVal;\r\n\r\n            };\r\n\r\n            notify.config = function (args) {\r\n                startTop = !angular.isUndefined(args.startTop) ? args.startTop : startTop;\r\n                verticalSpacing = !angular.isUndefined(args.verticalSpacing) ? args.verticalSpacing : verticalSpacing;\r\n                defaultDuration = !angular.isUndefined(args.duration) ? args.duration : defaultDuration;\r\n                defaultTemplateUrl = args.templateUrl ? args.templateUrl : defaultTemplateUrl;\r\n                position = !angular.isUndefined(args.position) ? args.position : position;\r\n                container = args.container ? args.container : container;\r\n                maximumOpen = args.maximumOpen ? args.maximumOpen : maximumOpen;\r\n            };\r\n\r\n            notify.closeAll = function () {\r\n                for (var i = messageElements.length - 1; i >= 0; i--) {\r\n                    var element = messageElements[i];\r\n                    element.css('opacity', 0);\r\n                }\r\n            };\r\n\r\n            return notify;\r\n        }\r\n    ]);\r\n\r\n    mod.run(['$templateCache', function ($templateCache) {\r\n        'use strict';\r\n\r\n        $templateCache.put('angular-notify.html',\r\n            \"<div class=\\\"cg-notify-message\\\" ng-class=\\\"[$classes, \\n\" +\r\n            \"    $position === 'center' ? 'cg-notify-message-center' : '',\\n\" +\r\n            \"    $position === 'left' ? 'cg-notify-message-left' : '',\\n\" +\r\n            \"    $position === 'right' ? 'cg-notify-message-right' : '']\\\"\\n\" +\r\n            \"    ng-style=\\\"{'margin-left': $centerMargin}\\\">\\n\" +\r\n            \"\\n\" +\r\n            \"    <div ng-show=\\\"!$messageTemplate\\\">\\n\" +\r\n            \"        {{$message}}\\n\" +\r\n            \"    </div>\\n\" +\r\n            \"\\n\" +\r\n            \"    <div ng-show=\\\"$messageTemplate\\\" class=\\\"cg-notify-message-template\\\">\\n\" +\r\n            \"        \\n\" +\r\n            \"    </div>\\n\" +\r\n            \"\\n\" +\r\n            \"    <button type=\\\"button\\\" class=\\\"cg-notify-close\\\" ng-click=\\\"$close()\\\">\\n\" +\r\n            \"        <span aria-hidden=\\\"true\\\">&times;</span>\\n\" +\r\n            \"        <span class=\\\"cg-notify-sr-only\\\">Close</span>\\n\" +\r\n            \"    </button>\\n\" +\r\n            \"\\n\" +\r\n            \"</div>\"\r\n        );\r\n\r\n    }]);\r\n})(angular);\r\n\r\n","/*! this module is modified from angular-ui-scrollpoint\r\n * see  https://github.com/angular-ui/ui-scrollpoint\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n    /**\r\n     * Adds a 'ui-scrollpoint' class to the element when the page scrolls past it's position.\r\n     * @param [offset] {int} optional Y-offset to override the detected offset.\r\n     *   Takes 300 (absolute) or -300 or +300 (relative to detected)\r\n     */\r\n    angular.module('ui.scrollpoint', [])\r\n        .directive('uiScrollpoint', ['$window', function ($window) {\r\n\r\n            function getWindowScrollTop() {\r\n                if (angular.isDefined($window.pageYOffset)) {\r\n                    return $window.pageYOffset;\r\n                } else {\r\n                    var iebody = (document.compatMode && document.compatMode !== 'BackCompat') ? document.documentElement : document.body;\r\n                    return iebody.scrollTop;\r\n                }\r\n            }\r\n\r\n            return {\r\n                require: '^?uiScrollpointTarget',\r\n                link: function (scope, elm, attrs, uiScrollpointTarget) {\r\n                    var absolute = true,\r\n                        shift = 0,\r\n                        fixLimit,\r\n                        $target = uiScrollpointTarget && uiScrollpointTarget.$element || angular.element($window);\r\n\r\n                    if (!attrs.uiScrollpoint) {\r\n                        absolute = false;\r\n                    } else if (typeof (attrs.uiScrollpoint) === 'string') {\r\n                        // charAt is generally faster than indexOf: http://jsperf.com/indexof-vs-charat\r\n                        if (attrs.uiScrollpoint.charAt(0) === '-') {\r\n                            absolute = false;\r\n                            shift = -parseFloat(attrs.uiScrollpoint.substr(1));\r\n                        } else if (attrs.uiScrollpoint.charAt(0) === '+') {\r\n                            absolute = false;\r\n                            shift = parseFloat(attrs.uiScrollpoint.substr(1));\r\n                        }\r\n                    }\r\n\r\n                    fixLimit = absolute ? attrs.uiScrollpoint : elm[0].offsetTop + shift;\r\n\r\n                    function onScroll() {\r\n\r\n                        var limit = absolute ? attrs.uiScrollpoint : elm[0].offsetTop + shift;\r\n\r\n                        // if pageYOffset is defined use it, otherwise use other crap for IE\r\n                        var offset = uiScrollpointTarget ? $target[0].scrollTop : getWindowScrollTop();\r\n\r\n                        if (!elm.hasClass('ui-scrollpoint') && offset > limit) {\r\n                            elm.addClass('ui-scrollpoint');\r\n                            if (attrs.scrollpointGroup) {\r\n                                var group = attrs.scrollpointGroup.split(' ');\r\n                                for (var key in group) {\r\n                                    angular.element(document.getElementById(group[key])).addClass('ui-scrollpoint');\r\n                                }\r\n                            }\r\n                            fixLimit = limit;\r\n                        } else if (elm.hasClass('ui-scrollpoint') && offset < fixLimit) {\r\n                            elm.removeClass('ui-scrollpoint');\r\n                            if (attrs.scrollpointGroup) {\r\n                                var group = attrs.scrollpointGroup.split(' ');\r\n                                for (var key in group) {\r\n                                    angular.element(document.getElementById(group[key])).removeClass('ui-scrollpoint');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    $target.on('scroll', onScroll);\r\n                    onScroll(); // sets the initial state\r\n\r\n                    // Unbind scroll event handler when directive is removed\r\n                    scope.$on('$destroy', function () {\r\n                        $target.off('scroll', onScroll);\r\n                    });\r\n                }\r\n            };\r\n        }]).directive('uiScrollpointTarget', [function () {\r\n            return {\r\n                controller: ['$element', function ($element) {\r\n                    this.$element = $element;\r\n                }]\r\n            };\r\n        }]);\r\n\r\n}());\r\n","(function (angular) {\r\n    \"use strict\";\r\n    // when $routeProvider.whenAuthenticated() is called, the path is stored in this list\r\n// to be used by authRequired() in the services below\r\n    var securedStates = [];\r\n    var mod = obsidian.module('myApp.security', ['ui.router', 'firebase.auth', 'myApp.config']);\r\n\r\n//mod.config(function ($urlRouterProvider, config) {\r\n//    // routes which are not in our map are redirected to 'home'\r\n//    $urlRouterProvider.otherwise(config.redirectUrl);\r\n//})\r\n\r\n    /**\r\n     * Adds a special `whenAuthenticated` method onto $routeProvider. This special method,\r\n     * when called, waits for auth status to be resolved asynchronously, and then fails/redirects\r\n     * if the user is not properly authenticated.\r\n     *\r\n     * The promise either resolves to the authenticated user object and makes it available to\r\n     * dependency injection (see AuthCtrl), or rejects the promise if user is not logged in,\r\n     * forcing a redirect to the /login page\r\n     */\r\n    mod.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.stateAuthenticated = function (name, stateObject) {\r\n            securedStates.push(name);\r\n            stateObject.resolve = stateObject.resolve || {};\r\n            stateObject.resolve.authData = ['Auth', function (Auth) {\r\n                return Auth.$requireAuth();\r\n            }];\r\n            $stateProvider.state(name, stateObject);\r\n            return this;\r\n        }\r\n    }])\r\n\r\n    /**\r\n     * Apply some route security. Any route's resolve method can reject the promise with\r\n     * { authRequired: true } to force a redirect. This method enforces that and also watches\r\n     * for changes in auth status which might require us to navigate away from a path\r\n     * that we can no longer view.\r\n     */\r\n        .run(/*@ngInject*/ function ($rootScope, $location, $state, Auth, loginRedirectState) {\r\n            Auth.$onAuth(checkState);\r\n\r\n            function checkState(user) {\r\n                if (!user && authStateRequired($state.current.name)) {\r\n                    console.log('check failed', user, $location.path()); //debug\r\n                    $state.go(loginRedirectState);\r\n                }\r\n            }\r\n\r\n            $rootScope.$on('$stateChangeError',\r\n                function (event, toState, toParams, fromState, fromParams, error) {\r\n                    if (error === \"AUTH_REQUIRED\") {\r\n                        event.preventDefault();\r\n                        $state.transitionTo(loginRedirectState);\r\n                    }\r\n                });\r\n\r\n            function authStateRequired(name) {\r\n                console.log('authRequired?', name, securedStates.indexOf(name)); //debug\r\n                return securedStates.indexOf(name) !== -1;\r\n            }\r\n        }\r\n    );\r\n})(angular);\r\n\r\n","(function (angular) {\r\n\r\n    var sharedScopeDefinition;\r\n\r\n    sharedScopeDefinition = {\r\n        handler: '&customHandler'\r\n    };\r\n\r\n    angular.module('socialLinks', [])\r\n        .factory('socialLinker', [\r\n            '$window', '$location', function ($window, $location) {\r\n                return function (urlFactory) {\r\n                    return function (scope, element, attrs) {\r\n                        var getCurrentUrl, handler, popupWinAttrs;\r\n                        popupWinAttrs = \"status=no, width=\" + (scope.socialWidth || 640) + \", height=\" + (scope.socialWidth || 480) + \", resizable=yes, toolbar=no, menubar=no, scrollbars=no, location=no, directories=no\";\r\n                        getCurrentUrl = function () {\r\n                            return attrs.customUrl || $location.absUrl();\r\n                        };\r\n                        attrs.$observe('customUrl', function () {\r\n                            var url;\r\n                            url = urlFactory(scope, getCurrentUrl());\r\n                            if (element[0].nodeName === 'A' && ((attrs.href == null) || attrs.href === '')) {\r\n                                return element.attr('href', url);\r\n                            }\r\n                        });\r\n                        element.attr('rel', 'nofollow');\r\n                        handler = function (e) {\r\n                            var url, win;\r\n                            e.preventDefault();\r\n                            url = urlFactory(scope, getCurrentUrl());\r\n                            return win = $window.open(url, 'popupwindow', popupWinAttrs).focus();\r\n                        };\r\n                        if (attrs.customHandler != null) {\r\n                            element.on('click', handler = function (event) {\r\n                                var url;\r\n                                url = urlFactory(scope, getCurrentUrl());\r\n                                element.attr('href', url);\r\n                                return scope.handler({\r\n                                    $event: event,\r\n                                    $url: url\r\n                                });\r\n                            });\r\n                        } else {\r\n                            element.on('click', handler);\r\n                        }\r\n                        return scope.$on('$destroy', function () {\r\n                            return element.off('click', handler);\r\n                        });\r\n                    };\r\n                };\r\n            }\r\n        ]).directive('socialFacebook', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        var shareUrl;\r\n                        shareUrl = [\"https://facebook.com/sharer.php?\"];\r\n                        shareUrl.push(\"u=\" + (encodeURIComponent(url)));\r\n                        return shareUrl.join('');\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialTwitter', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: angular.extend({\r\n                        status: '@status'\r\n                    }, sharedScopeDefinition),\r\n                    link: linker(function (scope, url) {\r\n                        scope.status || (scope.status = \"Check this out! - \" + url);\r\n                        return \"https://twitter.com/intent/tweet?text=\" + (encodeURIComponent(scope.status));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialGplus', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://plus.google.com/share?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialPinterest', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: angular.extend({\r\n                        media: '@media',\r\n                        description: '@description'\r\n                    }, sharedScopeDefinition),\r\n                    link: linker(function (scope, url) {\r\n                        return \"http://pinterest.com/pin/create/button/?url=\" + (encodeURIComponent(url)) + \"&amp;media=\" + (encodeURIComponent(scope.media)) + \"&amp;description=\" + (encodeURIComponent(scope.description));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialStumbleupon', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://stumbleupon.com/submit?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialLinkedin', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://linkedin.com/shareArticle?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialReddit', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://www.reddit.com/submit?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialVk', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"http://vkontakte.ru/share.php?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialOk', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"http://www.odnoklassniki.ru/dk?st.cmd=addShare&st._surl=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]).directive('socialXing', [\r\n            'socialLinker', function (linker) {\r\n                return {\r\n                    restrict: 'ACEM',\r\n                    scope: sharedScopeDefinition,\r\n                    link: linker(function (scope, url) {\r\n                        return \"https://www.xing.com/spi/shares/new?url=\" + (encodeURIComponent(url));\r\n                    })\r\n                };\r\n            }\r\n        ]);\r\n})(angular);\r\n","(function () {\r\n    obsidian.module('core.$firebase', ['firebase'])\r\n        .factory('$firebase', /*@ngInject*/ function (FBURL, config, fbutil, $firebaseObject, $q, snippet) {\r\n            var $firebase = {\r\n                FbObj: FbObj,\r\n                update: update,\r\n                set: set,\r\n                batchUpdate: batchUpdate,\r\n                params: {},\r\n                databases: {},\r\n                ref: ref,\r\n                $communicate: $communicate,\r\n                $object: $object,\r\n                getMultipleRefVal: getMultipleRefVal,\r\n                isRefUrlValid: isRefUrlValid,\r\n                move: move,\r\n                load: load\r\n            };\r\n\r\n            var activeRefUrl = {};\r\n\r\n            function FbObj(refUrl, opt) {\r\n                var _opt = opt || {},\r\n                    _refUrl = refUrl || '',\r\n                    db = $firebase.databases[_refUrl.split(\"@\")[1]] || {};\r\n\r\n                function isDbOnline() {\r\n                    if (_opt.keepOnline !== undefined) return !!_opt.keepOnline;\r\n                    if (db.keepOnline !== undefined) return !!db.keepOnline;\r\n                    return true\r\n                }\r\n\r\n                this.dbName = db.Name || FBURL.split(\"//\")[1].split(\".fi\")[0];\r\n                this.dbUrl = \"https://\" + this.dbName + \".firebaseio.com\";\r\n                this.path = _refUrl.split(\"@\")[0];\r\n                this.url = this.dbUrl + \"/\" + this.path;\r\n                this.t = (new Date).getTime().toString();\r\n                this.params = _opt.params || {};\r\n                this.keepOnline = isDbOnline();\r\n            }\r\n\r\n            FbObj.prototype = {\r\n                ref: function () {\r\n                    var ref = new Firebase(this.dbUrl);\r\n                    if (this.path === '') return ref;\r\n                    var pathArr = this.path.split(\"/\");\r\n                    for (var i = 0; i < pathArr.length; i++) {\r\n                        if (pathArr[i].charAt(0) === \"$\") {\r\n                            ref = ref.push();\r\n                            this.params[pathArr[i]] = ref.key();\r\n                        } else {\r\n                            ref = ref.child(pathArr[i]);\r\n                        }\r\n                    }\r\n                    this.url = ref.toString();\r\n                    this.path = this.url.split(\".com/\")[1];\r\n                    return ref\r\n                },\r\n                goOnline: function () {\r\n                    if (activeRefUrl[this.dbUrl] === undefined) {\r\n                        activeRefUrl[this.dbUrl] = []\r\n                    }\r\n                    if (activeRefUrl[this.dbUrl].length === 0) {\r\n                        if (!this.keepOnline) {\r\n                            Firebase.goOnline(this.dbUrl);\r\n                            console.log(this.dbUrl, \"is online\", this.t)\r\n                        }\r\n                    }\r\n                    activeRefUrl[this.dbUrl].push(this.t);\r\n                    return this\r\n                },\r\n                goOffline: function () {\r\n                    if (this.keepOnline) return this;\r\n                    if (activeRefUrl[this.dbUrl] === undefined) {\r\n                        activeRefUrl[this.dbUrl] = []\r\n                    }\r\n                    if (activeRefUrl[this.dbUrl].length === 1) {\r\n                        if (!this.keepOnline) {\r\n                            Firebase.goOffline(this.dbUrl);\r\n                            console.log(this.dbUrl, \"is offline\", this.t)\r\n                        }\r\n                    }\r\n                    var tPos = activeRefUrl[this.dbUrl].indexOf(this.t);\r\n                    if (tPos != -1) {\r\n                        activeRefUrl[this.dbUrl].splice(tPos, 1);\r\n                    }\r\n                    return this\r\n                }\r\n            };\r\n\r\n            function ref(refUrl, opt) {\r\n                var fbObj = new FbObj(refUrl, opt);\r\n                return fbObj.ref()\r\n            }\r\n\r\n            function queryRef(refUrl, options) {\r\n                var opt = options || {},\r\n                    ref = $firebase.ref(refUrl);\r\n                if (opt.orderBy) {\r\n                    var orderBy = 'orderBy' + opt.orderBy.split(':')[0];\r\n                    if (orderBy === 'orderByChild') {\r\n                        ref = ref[orderBy](opt.orderBy.split(':')[1]); //ex {orderBy:'Child:name'}\r\n                    } else {\r\n                        ref = ref[orderBy]();\r\n                    }\r\n\r\n                } else {\r\n                    return ref\r\n                }\r\n                if (opt.startAt) {\r\n                    ref = ref['startAt'](opt.startAt);\r\n                }\r\n                if (opt.endAt) {\r\n                    ref = ref['endAt'](opt.endAt);\r\n                }\r\n                if (opt.equalTo) {\r\n                    ref = ref['equalTo'](opt.equalTo);\r\n                }\r\n                if (opt.limitToFirst) {\r\n                    ref = ref['limitToFirst'](opt.limitToFirst);\r\n                }\r\n                if (opt.limitToLast) {\r\n                    ref = ref['limitToLast'](opt.limitToLast);\r\n                }\r\n                return ref;\r\n            }\r\n\r\n            var objectRepo = {};\r\n\r\n            function $object(refUrl) {\r\n                if (objectRepo[refUrl]) {\r\n                    return objectRepo[refUrl]\r\n                } else {\r\n                    objectRepo[refUrl] = $firebaseObject(ref(refUrl));\r\n                    return objectRepo[refUrl]\r\n                }\r\n            }\r\n\r\n            function isRefUrlValid(refUrl) {\r\n                return (typeof refUrl === 'string') && (refUrl.split('/').indexOf('') === -1)\r\n            }\r\n\r\n            //TODO:用$q改寫\r\n            function Digest(scope, fbObj, isSync, delay) {\r\n                var timeout;\r\n                this.reset = function (callback, customDelay) {\r\n                    if (timeout != undefined) clearTimeout(timeout);\r\n                    timeout = setTimeout(function () {\r\n                        if (callback) callback.apply(null);\r\n                        if (!isSync) fbObj.goOffline();\r\n                        if (scope) scope.$digest();\r\n                    }, customDelay || delay);\r\n                }\r\n            }\r\n\r\n            function load(loadList, defaultOpt) {\r\n                var _defaultOpt = (typeof defaultOpt === 'object') ? defaultOpt : {},\r\n                    defers = {},\r\n                    promises = {};\r\n\r\n                function onComplete(key) {\r\n                    return function (snap) {\r\n                        defers[key].resolve(snap.val())\r\n                    }\r\n                }\r\n\r\n                for (var key in loadList) {\r\n                    if (loadList.hasOwnProperty(key)) {\r\n                        defers[key] = $q.defer();\r\n                        promises[key] = defers[key].promise;\r\n                        var loadObj = loadList[key],\r\n                            ref = queryRef(loadObj.refUrl, loadObj.opt || _defaultOpt);\r\n\r\n                        ref.once('value', onComplete(key))\r\n                    }\r\n                }\r\n                return $q.all(promises)\r\n            }\r\n\r\n            function update(refUrl, value, onComplete, removePrev, refUrlParams) {\r\n                var def = $q.defer();\r\n                var replacedRefUrl = snippet.replaceParamsInString(refUrl, refUrlParams);\r\n                var fbObj = new FbObj(replacedRefUrl), ref = fbObj.ref(), type = removePrev ? 'set' : 'update';\r\n\r\n                //將因push而自動生成的key值放到value內相對應的property中\r\n                var params = angular.extend({}, refUrlParams, fbObj.params);\r\n                //console.log(JSON.stringify(params));\r\n                if (typeof value === 'object' && value != null) {\r\n                    for (var key in params) {\r\n                        var realKey = key.split('$')[1];\r\n                        if (value[realKey] === undefined) continue;\r\n                        value[realKey] = params[key];\r\n                    }\r\n                } else if (typeof value === 'string') {\r\n                    for (var key in params) {\r\n                        value.replace(key, params[key]);\r\n                    }\r\n                }\r\n\r\n                fbObj.goOnline();\r\n\r\n                ref[type](value, function (error) {\r\n                    if (onComplete) onComplete.apply(null, [error]);\r\n                    if (error) {\r\n                        console.log(\"Update failed: \" + refUrl);\r\n                        def.reject(error);\r\n                    } else {\r\n                        if (config.debug) {\r\n                            console.log(\"Update success: \" + refUrl)\r\n                        }\r\n                        def.resolve();\r\n                    }\r\n                    fbObj.goOffline();\r\n                });\r\n\r\n                def.promise.params = fbObj.params;\r\n\r\n                return def.promise\r\n            }\r\n\r\n            function set(refUrl, value, onComplete, refUrlParams) {\r\n                update(refUrl, value, onComplete, true, refUrlParams);\r\n            }\r\n\r\n//TODO: Transaction\r\n\r\n            function batchUpdate(values, isConsecutive) {\r\n                var def = $q.defer(),\r\n                    refUrlParams = angular.extend({}, $firebase.params),\r\n                    _isConsecutive = (isConsecutive || isConsecutive === undefined);\r\n\r\n                function update(i) {\r\n                    var params = $firebase.update(values[i].refUrl, values[i].value, onComplete(i), values[i].set, refUrlParams).params;\r\n                    refUrlParams = angular.extend(refUrlParams, params);\r\n                }\r\n\r\n                function onComplete(i) {\r\n\r\n                    function consecutive(error) {  //防止最後實際執行onComplete時使用的是跑完loop後的j的值\r\n                        var isLast = i === (values.length - 1);\r\n\r\n                        if (values[i] && values[i].onComplete) values[i].onComplete.apply(null, [error]);\r\n                        if (error) {\r\n                            def.reject(error);\r\n                        } else {\r\n                            if (isLast) {\r\n                                def.resolve({params: refUrlParams});\r\n                            } else {\r\n                                update(i + 1);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    function nonConsecutive(error) {\r\n                        if (values[i] && values[i].onComplete) values[i].onComplete.apply(null, [error]);\r\n                        if (error) {\r\n                            defers[i].reject(error)\r\n                        } else {\r\n                            defers[i].resolve();\r\n                        }\r\n                    }\r\n\r\n                    return _isConsecutive ? consecutive : nonConsecutive\r\n                }\r\n\r\n                if (_isConsecutive) {\r\n                    update(0);\r\n                } else {\r\n                    var defers = [],\r\n                        promises = [];\r\n                    for (var i = 0; i < values.length; i++) {\r\n                        defers[i] = $q.defer();\r\n                        promises[i] = defers[i].promise;\r\n                        update(i);\r\n                    }\r\n                    $q.all(promises).then(function () {\r\n                        def.resolve({params: refUrlParams})\r\n                    }, function (error) {\r\n                        def.reject(error);\r\n                    });\r\n                }\r\n\r\n                return def.promise\r\n            }\r\n\r\n            function move(from, to) {\r\n                var sourceRef = new Firebase(from),\r\n                    targetRef = new Firebase(to);\r\n                sourceRef.once('value', function (snap) {\r\n                    targetRef.update(snap.val());\r\n                })\r\n            }\r\n\r\n            function $transfer(from, to) {\r\n                var sourceRef = new Firebase(from.refUrl),\r\n                    targetRef = new Firebase(to.refUrl),\r\n                    def = $q.defer();\r\n                sourceRef.once('value', function (snap) {\r\n                    var value = from.modifier && (typeof modifier === 'function') ? from.modifier(snap.val()) : snap.val();\r\n                    targetRef.update(value, function (error) {\r\n                        if (error) {\r\n                            def.reject(error);\r\n                        } else {\r\n                            def.resolve();\r\n                        }\r\n                    });\r\n                })\r\n            }\r\n\r\n            function $communicate(opt) {\r\n                var res = {}, def = $q.defer();\r\n                if (typeof opt !== 'object') return;\r\n\r\n                batchUpdate(opt.request, true).then(function (resolveVal) {\r\n                    if (!opt.response) {\r\n                        def.resolve(resolveVal);\r\n                        return\r\n                    }\r\n                    angular.extend(res, resolveVal);\r\n                    var resUrlArr = snippet.replaceParamsInObj(opt.response, resolveVal.params);\r\n\r\n                    getResponse(resUrlArr).then(function (response) {\r\n                        angular.extend(res, response);\r\n                        def.resolve(res);\r\n                    }, function (error) {\r\n                        def.reject(error);\r\n                    })\r\n                }, function (error) {\r\n                    def.reject(error);\r\n                });\r\n                return def.promise\r\n            }\r\n\r\n            function getResponse(refs) {\r\n                var isRenew = {}, promises = {};\r\n\r\n                function onComplete(key, refUrl) {\r\n                    var def = $q.derfer();\r\n                    promises[key] = def.promise;\r\n\r\n                    var onSuccess = function (snap) {\r\n                        if (isRenew[key] === true) {\r\n                            def.resolve(snap.val());\r\n                            ref(refUrl).off();\r\n                        } else {\r\n                            isRenew[key] = true; //server hasn't change the data.\r\n                        }\r\n                    };\r\n                    var onError = function (err) {\r\n                        def.reject(err)\r\n                    };\r\n\r\n                    return [onSuccess, onError]\r\n                }\r\n\r\n                for (var key in refs) {\r\n                    if (refs.hasOwnProperty(key)) ref(refs[key]).on('value', onComplete(key, refs[key])[0], onComplete(key, refs[key])[1]);\r\n                }\r\n                return $q.all(promises);\r\n            }\r\n\r\n            function getMultipleRefVal(refs, opt) {\r\n                var _opt = opt ? opt : {};\r\n\r\n                var res = {},\r\n                    params = {},\r\n                    onComplete = {},\r\n                    onGoingRef = {},\r\n                    def = $q.defer(),\r\n                    refNum = Object.keys(refs).length,\r\n                    indicator = _opt.indicator || '&',\r\n                    currentRefs = angular.extend({}, refs),\r\n                    waitUntil = new snippet.WaitUntil(refNum, function () {\r\n                        def.resolve(res)\r\n                    });\r\n\r\n                for (var key in refs) {\r\n                    onGoingRef[key] = false;\r\n                }\r\n\r\n                function iterate() {\r\n                    currentRefs = snippet.replaceParamsInObj(currentRefs, params);\r\n                    for (var key in onGoingRef) {\r\n                        if (onGoingRef.hasOwnProperty(key) && currentRefs[key].indexOf(indicator) === -1 && !onGoingRef[key]) {\r\n\r\n                            onComplete[key] = new (function (key) {\r\n                                return function (snap) {\r\n                                    if (typeof snap.val() === 'string') {\r\n                                        params[indicator + key] = snap.val();\r\n\r\n                                    }\r\n                                    res[key] = snap.val();\r\n                                    delete onGoingRef[key];\r\n                                    waitUntil.resolve();\r\n                                    iterate();\r\n                                }\r\n                            })(key);\r\n\r\n                            onGoingRef[key] = true;\r\n                            ref(currentRefs[key]).once('value', onComplete[key])\r\n                        }\r\n                    }\r\n                }\r\n\r\n                iterate();\r\n                return def.promise\r\n            }\r\n\r\n            return $firebase\r\n        });\r\n\r\n\r\n})();\r\n","//credit to katowulf: https://github.com/firebase/flashlight\r\n(function () {\r\n    obsidian.module('core.elasticSearch', [])\r\n        .factory('elasticSearch', /*@ngInject*/ function (FBURL, Auth, $q, $rootScope) {\r\n            function doSearch(scope, index, type, query) {\r\n                scope = scope || $rootScope;\r\n                var ref = new Firebase(FBURL + '/search');\r\n                var key = ref.child('request').push({index: index, type: type, query: query}).key();\r\n                console.log('search', key, {index: index, type: type, query: query});\r\n                ref.child('response/' + key).on('value', showResults.bind(scope));\r\n            }\r\n\r\n            function showResults(snap) {\r\n                if (snap.val() === null) {\r\n                    return;\r\n                } // wait until we get data\r\n                var dat = snap.val();\r\n//      console.log('result', snap.name(), snap.val());\r\n                snap.ref().off('value', showResults);\r\n                snap.ref().remove();\r\n                this.result = dat;\r\n                this.$digest();\r\n            }\r\n\r\n            function buildQuery(term, words) {\r\n                // See this tut for more query options:\r\n                // http://okfnlabs.org/blog/2013/07/01/elasticsearch-query-tutorial.html#match-all--find-everything\r\n                return {\r\n                    'query_string': {query: makeTerm(term, words)}\r\n                };\r\n            }\r\n\r\n            function makeTerm(term, matchWholeWords) {\r\n                if (!matchWholeWords) {\r\n                    if (!term.match(/^\\*/)) {\r\n                        term = '*' + term;\r\n                    }\r\n                    if (!term.match(/\\*$/)) {\r\n                        term += '*';\r\n                    }\r\n                }\r\n                return term;\r\n            }\r\n\r\n            return doSearch\r\n        });\r\n// display search results\r\n})();\r\n","(function () {\r\n    obsidian.module('core.init', ['firebase'])\r\n        .factory('init', /*@ngInject*/ function (Auth, $q, $http, $firebase, $rootScope) {\r\n            var def = $q.defer();\r\n            //function logInMain(){}\r\n            //function getDbName(){}\r\n            //function getIdentity(){}\r\n            //function logInOthersAnonymously(){}\r\n            ////compile viewLogic\r\n            //get geoip\r\n            $http.jsonp('http://www.telize.com/geoip?callback=JSON_CALLBACK').then(function (response) {\r\n                console.log(response)\r\n            });\r\n\r\n            var preLoadList = {\r\n                stripeKey: {\r\n                    refUrl: 'config/payment/stripe/publishable_key'\r\n                }\r\n            };\r\n\r\n            $firebase.load(preLoadList)\r\n                .then(function (res) {\r\n                    if (res.stripeKey && Stripe) Stripe.setPublishableKey(res.stripeKey);\r\n                    return res\r\n                })\r\n                .then(function (res) {\r\n                    def.resolve(res);\r\n                });\r\n\r\n            return def.promise\r\n        })\r\n        .run(/*@ngInject*/ function ($rootScope, $http, $state, $mdSidenav, $q, Auth, $firebase, model, init, snippet, config) {\r\n\r\n\r\n            $rootScope.debug = config.debug;\r\n            if (config.debug) console.log('debug mode');\r\n\r\n            $rootScope.toggleSidenav = function (menuId) {\r\n                $mdSidenav(menuId).toggle();\r\n            };\r\n\r\n            $rootScope.sideNavLogout = function (menuId) {\r\n                Auth.$unauth();\r\n                $mdSidenav(menuId).toggle();\r\n                $state.go('home');\r\n            };\r\n\r\n            //template\r\n\r\n\r\n            Auth.$onAuth(function (user) { //app.js也有同樣的用法\r\n                $rootScope.user = user;\r\n                $rootScope.loggedIn = !!user;\r\n\r\n                if (user) {\r\n                    $firebase.params = {\r\n                        '$uid': user.uid\r\n                    };\r\n                    $rootScope.loggedIn = !!user;\r\n\r\n                    var loadList = {\r\n                        profileImageURL: {\r\n                            refUrl: 'users/' + user.uid + '/profileImageURL'\r\n                        },\r\n                        email: {\r\n                            refUrl: 'users/' + user.uid + '/email'\r\n                        },\r\n                        phone: {\r\n                            refUrl: 'users/' + user.uid + '/phone'\r\n                        }\r\n                    };\r\n\r\n                    $firebase.load(loadList).then(function (res) {\r\n                        user.profileImageURL = res.profileImageURL;\r\n                        user.email = res.email;\r\n                        user.phone = res.phone;\r\n                        $rootScope.user = user;\r\n                        console.log($rootScope.user);\r\n                    });\r\n                    //Notification\r\n                    //_ref=$firebase.ref('users/'+user.uid+'/notification').orderByChild('unread').equalTo(true).limitToLast(10);\r\n                    //$rootScope.notification=$firebaseArray(_ref);\r\n                    //\r\n                    //$rootScope.$watch('notification',function(obj){\r\n                    //    var newNoti=$rootScope.notification.$getRecord(obj.key)||{};\r\n                    //    var orderStatus='your order('+obj.key+') is '+newNoti.orderStatus;\r\n                    //    ngNotify(orderStatus);\r\n                    //});\r\n                } else {\r\n                    console.log('no user', user);\r\n                    $firebase.params = {};\r\n                }\r\n            });\r\n        });\r\n})();\r\n","(function () {\r\n    obsidian.module('core.linkFn', ['firebase'])\r\n        .factory('linkFn', /*@ngInject*/ function ($controller, $injector, $q, snippet, Auth) {\r\n            var linkFn = {\r\n                pagePlusDirective: pagePlusDirective\r\n            };\r\n\r\n            function pagePlusDirective(scope, ctrlName, resolveObj) { //TODO:讓不用$scope的controller也能用這個方法\r\n                function refresh() {\r\n                    var locals = {},\r\n                        condition = 0,\r\n                        resolve = resolveObj || {};\r\n                    if (scope['stateParams']) locals['$stateParams'] = scope['stateParams'];\r\n                    locals['$scope'] = scope;\r\n\r\n                    for (var key in resolve) {\r\n                        if (typeof $injector.invoke(resolve[key]).then !== 'function') {\r\n                            locals[key] = $injector.invoke(resolve[key])\r\n                        } else {\r\n                            condition++;\r\n                            $injector.invoke(resolve[key]).then(function (resolved) {\r\n                                locals[key] = resolved;\r\n                                waitUntil.resolve();\r\n                            })\r\n                        }\r\n                    }\r\n                    //init controller\r\n                    var waitUntil = new snippet.WaitUntil(condition, function () {\r\n                        $controller(ctrlName, locals);\r\n                    });\r\n                }\r\n\r\n                scope.$watch('stateParams', refresh);\r\n                Auth.$onAuth(refresh);\r\n\r\n            }\r\n\r\n            return linkFn\r\n        });\r\n})();\r\n\r\n","(function () {\r\n    obsidian.module('core.model', ['firebase'])\r\n        .factory('model', /*@ngInject*/ function (config, fbutil, $q, snippet) {\r\n            var model = {\r\n                update: update,\r\n                ModelObj: ModelObj,\r\n                init: init,\r\n                action: {},\r\n                view: {}\r\n            };\r\n\r\n            function ModelObj(modelPath) {\r\n                this.modelPathArr = modelPath.split(\"|\");\r\n                this.pathArr = this.modelPathArr[0].split(\".\");\r\n                /*this.val=function(){\r\n                 var value={},\r\n                 modelPath=\"\";\r\n\r\n                 for(var j=0; j<that.pathArr.length; j++){\r\n                 modelPath=modelPath+\"['\"+that.pathArr[j]+\"']\"\r\n                 }\r\n                 for(var i=1; i<that.modelPathArr.length; i++){\r\n                 value[that.modelPathArr[i]]=eval(\"model\"+modelPath)[that.modelPathArr[i]];\r\n                 }\r\n\r\n                 if(JSON.stringify(value)===\"{}\"){\r\n                 eval(\"value=model\"+modelPath)\r\n                 }\r\n\r\n                 return value\r\n                 }*/\r\n            }\r\n\r\n            ModelObj.prototype = {\r\n                val: function () {\r\n                    var value = {},\r\n                        modelPath = \"\";\r\n\r\n                    for (var j = 0; j < this.pathArr.length; j++) {\r\n                        modelPath = modelPath + \"['\" + this.pathArr[j] + \"']\"\r\n                    }\r\n                    for (var i = 1; i < this.modelPathArr.length; i++) {\r\n                        value[this.modelPathArr[i]] = eval(\"model\" + modelPath)[this.modelPathArr[i]];\r\n                    }\r\n\r\n                    if (JSON.stringify(value) === \"{}\") {\r\n                        eval(\"value=model\" + modelPath)\r\n                    }\r\n                    return value\r\n                }\r\n            };\r\n\r\n            function init(scope, keyArrOrStr, refresh) {\r\n                if (typeof keyArrOrStr === 'string') {\r\n                    model[keyArrOrStr] = refresh ? {} : model[keyArrOrStr] || {};\r\n                    scope[keyArrOrStr] = model[keyArrOrStr];\r\n                    return\r\n                }\r\n                for (var i = 0; i < keyArrOrStr.length; i++) {\r\n                    model[keyArrOrStr[i]] = refresh ? {} : model[keyArrOrStr[i]] || {};\r\n                    scope[keyArrOrStr[i]] = model[keyArrOrStr[i]]\r\n                }\r\n            }\r\n\r\n            function update(path, value, valuePathArr) {\r\n                var pathArr = path.split(\".\");\r\n                if (valuePathArr != undefined) {\r\n                    snippet.evalAssignment([model, pathArr], valuePathArr);\r\n                } else {\r\n                    snippet.evalAssignment([model, pathArr], [value]);\r\n                }\r\n                //updateView(path)\r\n            }\r\n\r\n            return model\r\n        })\r\n        .factory('$stateData', /*@ngInject*/ function (model) {\r\n            var o = {\r\n                get data() {\r\n                    var cache = model._stateTransitionCache;\r\n                    delete model._stateTransitionCache;\r\n                    return cache;\r\n                }\r\n            };\r\n            return o.data\r\n        })\r\n        .run(/*@ngInject*/ function ($state, model, $rootScope) {\r\n            var activeStates = {};\r\n            $state.goWithData = function (to, params, data, options) {\r\n                var clear = $rootScope.$on('$stateChangeStart', function () {\r\n                    clear();\r\n                    activeStates[$state.href(to, params)] = {data: data};\r\n                    var clearAgain = $rootScope.$on('$stateChangeStart', function () {\r\n                        clearAgain();\r\n                        delete activeStates[$state.href(to, params)]\r\n                    })\r\n                });\r\n                return $state.go(to, params, options);\r\n            };\r\n\r\n            //define a getter so that user can retrieve data by using $state.data\r\n            Object.defineProperty($state, \"data\", {\r\n                get: function () {\r\n                    var state = activeStates[$state.href($state.current.name, $state.params)] || {};\r\n                    return state.data\r\n                }\r\n            });\r\n\r\n\r\n        });\r\n})();\r\n\r\n","(function () {\r\n    obsidian.module('core.snippet', ['firebase'])\r\n        .factory('snippet', ['config', '$q', '$filter', function (config, $q, $filter) {\r\n            function isArray(someVar) {\r\n                return Object.prototype.toString.call(someVar) === '[object Array]'\r\n            }\r\n\r\n            function randomString(length) {\r\n                var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\r\n\r\n                if (!length) {\r\n                    length = Math.floor(Math.random() * chars.length);\r\n                }\r\n\r\n                var str = '';\r\n                for (var i = 0; i < length; i++) {\r\n                    str += chars[Math.floor(Math.random() * chars.length)];\r\n                }\r\n                return str;\r\n            }\r\n\r\n            function replaceParamsInString(string, params) {\r\n                for (var param in params) {\r\n                    if (params.hasOwnProperty(param)) string = string.replace(eval(\"/\\\\\" + param + \"/g\"), params[param]);\r\n                }\r\n                return string\r\n            }\r\n\r\n            function replaceParamsInObj(obj, params) {\r\n                var objString = JSON.stringify(obj);\r\n                objString = replaceParamsInString(objString, params);\r\n\r\n                var replacedObj = JSON.parse(objString);\r\n\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key) && (typeof obj[key] === 'function')) {\r\n                        var paramReplacedKey = replaceParamsInString(key, params);\r\n                        replacedObj[paramReplacedKey] = obj[key]\r\n                    }\r\n                }\r\n\r\n                return replacedObj\r\n            }\r\n\r\n            function evalAssignment(lhsArr, rhsArr) {\r\n\r\n                var lhsPath = \"\",\r\n                    lhs = lhsArr[0];\r\n\r\n                if (Object.prototype.toString.call(rhsArr) === '[object Array]') {\r\n                    var rhs = rhsArr[0];\r\n                }\r\n\r\n                function toPathArr(strOrArr) {\r\n                    return (typeof strOrArr === 'string') ? strOrArr.split('.') : strOrArr\r\n                }\r\n\r\n                if (lhsArr[1] != undefined) {\r\n                    var lhsPathArr = toPathArr(lhsArr[1]);\r\n\r\n                    for (var i = 0; i < lhsPathArr.length; i++) {\r\n                        lhsPath = lhsPath + \"['\" + lhsPathArr[i] + \"']\";\r\n                        if ((i + 1 < lhsPathArr.length) && typeof lhs[lhsPathArr[i]] != \"object\") {\r\n                            eval(\"lhsArr[0]\" + lhsPath + \"={}\")\r\n                        } else {\r\n                            lhs = lhs[lhsPathArr[i]];\r\n                        }\r\n                    }\r\n                }\r\n                if (!rhsArr) return eval(\"lhsArr[0]\" + lhsPath);\r\n                if (typeof rhsArr === 'function') {\r\n                    eval(\"rhs=rhsArr(lhsArr[0]\" + lhsPath + \")\");\r\n                } else {\r\n                    if (rhsArr[1] != undefined) {\r\n                        var rhsPathArr = toPathArr(rhsArr[1]);\r\n                        for (var j = 0; j < rhsPathArr.length; j++) {\r\n                            if (rhs[rhsPathArr[j]] === undefined) {\r\n                                rhs = undefined;\r\n                                break;\r\n                            }\r\n                            rhs = rhs[rhsPathArr[j]];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                eval(\"lhsArr[0]\" + lhsPath + \"=rhs\");\r\n\r\n\r\n                //console.log(lhsArr[0]); TODO:reomove debug code here\r\n                //console.log(\"lhsArr[0]\"+lhsPath+\"=\"+rhs);\r\n                //console.log(eval(\"lhsArr[0]\"+lhsPath));\r\n\r\n            }\r\n\r\n            //see https://github.com/hughsk/flat\r\n            function flatten(target, opts) {\r\n                opts = opts || {};\r\n\r\n                var delimiter = opts.delimiter || '.';\r\n                var maxDepth = opts.maxDepth;\r\n                var currentDepth = 1;\r\n                var output = {};\r\n\r\n                function step(object, prev) {\r\n                    Object.keys(object).forEach(function (key) {\r\n                        var value = object[key];\r\n                        var isarray = opts.safe && Array.isArray(value);\r\n                        var type = Object.prototype.toString.call(value);\r\n                        var isbuffer = false;\r\n                        var isobject = (\r\n                            type === \"[object Object]\" ||\r\n                            type === \"[object Array]\"\r\n                        );\r\n\r\n                        var newKey = prev\r\n                            ? prev + delimiter + key\r\n                            : key;\r\n\r\n                        if (!opts.maxDepth) {\r\n                            maxDepth = currentDepth + 1;\r\n                        }\r\n\r\n                        if (!isarray && !isbuffer && isobject && Object.keys(value).length && currentDepth < maxDepth) {\r\n                            ++currentDepth;\r\n                            return step(value, newKey)\r\n                        }\r\n\r\n                        output[newKey] = value\r\n                    })\r\n                }\r\n\r\n                step(target);\r\n\r\n                return output\r\n            }\r\n\r\n            function unflatten(target, opts) {\r\n                opts = opts || {};\r\n\r\n                var delimiter = opts.delimiter || '.';\r\n                var overwrite = opts.overwrite || false;\r\n                var result = {};\r\n\r\n                var isbuffer = false;\r\n                if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {\r\n                    return target\r\n                }\r\n\r\n                // safely ensure that the key is\r\n                // an integer.\r\n                function getkey(key) {\r\n                    var parsedKey = Number(key);\r\n\r\n                    return (\r\n                        isNaN(parsedKey) ||\r\n                        key.indexOf('.') !== -1\r\n                    ) ? key\r\n                        : parsedKey\r\n                }\r\n\r\n                Object.keys(target).forEach(function (key) {\r\n                    var split = key.split(delimiter);\r\n                    var key1 = getkey(split.shift());\r\n                    var key2 = getkey(split[0]);\r\n                    var recipient = result;\r\n\r\n                    while (key2 !== undefined) {\r\n                        var type = Object.prototype.toString.call(recipient[key1]);\r\n                        var isobject = (\r\n                            type === \"[object Object]\" ||\r\n                            type === \"[object Array]\"\r\n                        );\r\n\r\n                        if ((overwrite && !isobject) || (!overwrite && recipient[key1] === undefined)) {\r\n                            recipient[key1] = (\r\n                                typeof key2 === 'number' && !opts.object ? [] : {}\r\n                            )\r\n                        }\r\n\r\n                        recipient = recipient[key1];\r\n                        if (split.length > 0) {\r\n                            key1 = getkey(split.shift());\r\n                            key2 = getkey(split[0])\r\n                        }\r\n                    }\r\n\r\n                    // unflatten again for 'messy objects'\r\n                    recipient[key1] = unflatten(target[key], opts)\r\n                });\r\n\r\n                return result\r\n            }\r\n\r\n            function cloneObject(obj) {\r\n                // return angular.extend({},obj);\r\n                if (obj === null || typeof(obj) !== 'object' || 'isActiveClone' in obj) return obj;\r\n                var temp = obj.constructor(); // changed\r\n                for (var key in obj) {\r\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n                        obj['isActiveClone'] = null;\r\n                        temp[key] = cloneObject(obj[key]);\r\n                        delete obj['isActiveClone'];\r\n                    }\r\n                }\r\n                return temp;\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {object} rawDataObj - data that need to be shaped to fit the filter model.\r\n             * @param {object} filterModel - the structure of the returned value.\r\n             * @param {object} [opt] - options.\r\n             * @param {string} opt.paramHeader - if the key value inside the filter model start with this value, every corresponding key in raw data will be reserved.  (ex: $uid)\r\n             * @param {string} opt.useModelHeader - if the key value inside the filter model start with this value, the model data will be kept at this pos and the first character of the key will be removed\r\n             * @param {string} opt.escape - if the endpoint === opt.escape inside the filter model, this end point won't be processed (default='\"#\")\r\n             */\r\n            function filterRawData(rawDataObj, filterModel, opt) {\r\n                opt = opt || {};\r\n                if (typeof rawDataObj !== 'object' || typeof filterModel !== 'object') return rawDataObj === filterModel;\r\n                var res = isArray(rawDataObj) ? [] : {},\r\n                    fail = false;\r\n                iterate(rawDataObj, filterModel, res, 'none');\r\n                function isParam(key, opt) {\r\n                    var paramHeader = '$';\r\n                    if (typeof opt.paramHeader === 'string') paramHeader = opt.paramHeader;\r\n                    return key.charAt(0) === paramHeader;\r\n                }\r\n\r\n                function iterate(rawDataObj, filterModel, target, prevKey) {\r\n                    var useModelHeader = opt.useModelHeader || '_',\r\n                        escape = opt.escape || '#';\r\n\r\n                    if (useModelHeader && typeof filterModel === 'object' && typeof rawDataObj !== 'object') {\r\n                        console.log(prevKey);\r\n                        console.log(\"error: raw data doesn't fit the filter\", 'the key of the raw data is ' + prevKey);\r\n                        fail = true;\r\n                        return\r\n                    }\r\n\r\n                    function goDeeperOrStop(param, filterKey) {\r\n                        var nextLevelFilter = filterModel[param] || filterModel[filterKey];\r\n                        if (nextLevelFilter === escape) return;\r\n                        if (filterKey.charAt(0) === useModelHeader) {\r\n                            target[filterKey.slice(1)] = filterModel[filterKey];\r\n                        } else if (typeof nextLevelFilter !== 'object') {\r\n                            if (rawDataObj[param] === undefined && (opt.removeUndefined === undefined || opt.removeUndefined)) return;\r\n                            target[param] = cloneObject(rawDataObj[param])\r\n                        } else {\r\n                            target[param] = isArray(nextLevelFilter) ? [] : {};\r\n                            iterate(rawDataObj[param], nextLevelFilter, target[param], filterKey)\r\n                        }\r\n                    }\r\n\r\n                    if (typeof filterModel === 'object' && typeof rawDataObj === 'object') {\r\n                        for (var filterKey in filterModel) {\r\n                            if (isParam(filterKey, opt)) {\r\n                                for (var param in rawDataObj) {\r\n                                    goDeeperOrStop(param, filterKey);\r\n                                }\r\n                                break;\r\n                            } else {\r\n                                goDeeperOrStop(filterKey, filterKey)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return fail ? false : res\r\n            }\r\n\r\n            function createBatchUpdateValues(rawData, structure) {\r\n                var structureClone;\r\n                if (typeof structure !== 'object') {\r\n                    console.log('error: structure is not an object');\r\n                    return structure\r\n                }\r\n                structureClone = cloneObject(structure);\r\n\r\n                function iterate(obj) {\r\n                    for (var key in obj) {\r\n                        if (key === 'valueArr') {\r\n                            for (var i = 0; i < obj['valueArr'].length; i++) {\r\n                                var keyStr = obj['valueArr'][i];\r\n                                if (obj['value'] === undefined) obj['value'] = {};\r\n                                if (typeof keyStr === 'string') obj['value'][keyStr] = keyStr;\r\n                            }\r\n                            delete obj['valueArr'];\r\n                            continue;\r\n                        }\r\n                        if (obj.hasOwnProperty(key)) {\r\n                            if (typeof obj[key] === 'string') {\r\n                                if (rawData[obj[key]] === '') {\r\n                                    obj[key] = ''\r\n                                } else {\r\n                                    obj[key] = rawData[obj[key]] || obj[key];\r\n                                }\r\n                            } else if (typeof obj[key] === 'object') {\r\n                                iterate(obj[key])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                iterate(structureClone);\r\n                return structureClone\r\n            }\r\n\r\n            function checkIfPropertyExist(arr) {\r\n                var obj = arr[0],\r\n                    pathArr = arr[1],\r\n                    isExist = true;\r\n                for (var i = 0; i < pathArr.length; i++) {\r\n                    if (obj[pathArr[i]] === undefined || obj[pathArr[i]] === null) {\r\n                        isExist = false;\r\n                        break;\r\n                    }\r\n                    obj = obj[pathArr[i]]\r\n                }\r\n                return isExist\r\n            }\r\n\r\n            function WaitUntil(conditionNum, onComplete, context) {\r\n                var that = this;\r\n                this.satisfiedCondition = 0;\r\n                this.resolve = function () {\r\n                    that.satisfiedCondition++;\r\n                    if (that.satisfiedCondition === conditionNum) {\r\n                        onComplete.apply(context || null)\r\n                    }\r\n                };\r\n                if (conditionNum === 0) {\r\n                    onComplete.apply(context || null)\r\n                }\r\n            }\r\n\r\n            function firstPartOfEmail(email) {\r\n                return ucfirst(email.substr(0, email.indexOf('@')) || '');\r\n            }\r\n\r\n            function ucfirst(str) {\r\n                // inspired by: http://kevin.vanzonneveld.net\r\n                str += '';\r\n                var f = str.charAt(0).toUpperCase();\r\n                return f + str.substr(1);\r\n            }\r\n\r\n            function DelayExec(delay) {\r\n                this.delay = delay || 1000;\r\n            }\r\n\r\n            DelayExec.prototype = {\r\n                reset: function (onComplete, customDelay) {\r\n                    var that = this;\r\n                    if (this.timeout != undefined) clearTimeout(this.timeout);\r\n                    this.timeout = setTimeout(function () {\r\n                        onComplete.apply(null);\r\n                        that.timeout = undefined;\r\n                    }, customDelay || this.delay);\r\n                    this.onComplete = onComplete;\r\n                }\r\n            };\r\n\r\n            function DelayedFilter(scope, source, target, filter, isReverse, delayedTime) {\r\n                var delay = new DelayExec(delayedTime || 1000),\r\n                    that = this;\r\n\r\n                this.refresh = function () {\r\n                    delay.reset(function () {\r\n                        scope[filter] = scope[filter] ? scope[filter] : {};\r\n                        scope[target] = $filter('consecutive')(scope[source], scope[filter], isReverse);\r\n                        scope.$digest();\r\n                    })\r\n                };\r\n\r\n                scope.$watch(filter, function () {\r\n                    that.refresh();\r\n                });\r\n                scope.$watch(source, function () {\r\n                    that.refresh();\r\n                });\r\n            }\r\n\r\n            function isObjEmpty(obj) {\r\n                return !Object.getOwnPropertyNames(obj).length > 0\r\n            }\r\n\r\n\r\n            return {\r\n                DelayExec: DelayExec,\r\n                DelayedFilter: DelayedFilter,\r\n                flatten: flatten,\r\n                unflatten: unflatten,\r\n                isArray: isArray,\r\n                cloneObject: cloneObject,\r\n                evalAssignment: evalAssignment,\r\n                checkIfPropertyExist: checkIfPropertyExist,\r\n                WaitUntil: WaitUntil,\r\n                replaceParamsInObj: replaceParamsInObj,\r\n                replaceParamsInString: replaceParamsInString,\r\n                createBatchUpdateValues: createBatchUpdateValues,\r\n                filterRawData: filterRawData,\r\n                firstPartOfEmail: firstPartOfEmail,\r\n                ucfirst: ucfirst,\r\n                randomString: randomString,\r\n                isObjEmpty: isObjEmpty\r\n            }\r\n        }]);\r\n})();\r\n\r\n","(function () {\r\n    var mod = obsidian.module('custom.directives', []);\r\n})();\r\n\r\n","(function () {\r\n    //Step 1: name the new module or use a random id.\r\n    var mod = obsidian.module('custom.filters', []);\r\n\r\n\r\n//Step 2: replace 'serviceSeed' by the factory name you like.\r\n    mod.filter('orderSubTotal', function () {\r\n        return function (order) {\r\n            var sum = 0,\r\n                products = order.products || {};\r\n            for (var key in products) {\r\n                sum += products[key].price * products[key].quantity\r\n            }\r\n            return sum;\r\n        };\r\n    })\r\n        .factory('filterUtil', function ($filter) {\r\n            function watchFilterOpts(scope, source, target, filter, isReverse) {\r\n                scope[source] = scope[source] || [];\r\n                function refresh() {\r\n                    scope[filter] = scope[filter] ? scope[filter] : {};\r\n                    scope[target] = $filter('consecutive')(scope[source], scope[filter], isReverse);\r\n                    //scope.$digest();\r\n                }\r\n\r\n                var watchFilter = scope.$watch(filter, function () {\r\n                    refresh();\r\n                });\r\n                var watchSource = scope.$watch(source, function () {\r\n                    refresh();\r\n                });\r\n\r\n                return function () {\r\n                    watchFilter();\r\n                    watchSource();\r\n                }\r\n            }\r\n\r\n            return {\r\n                watchFilterOpts: watchFilterOpts\r\n            }\r\n        });\r\n})();\r\n","(function () {\r\n    //Step 1: name the new module or use a random id.\r\n    var mod = obsidian.module('custom.services', []);\r\n\r\n\r\n//Step 2: replace 'serviceSeed' by the factory name you like.\r\n    mod.factory('customFn', ['FBURL', 'config', 'fbutil', '$firebaseObject', '$q', 'snippet', function (FBURL, config, fbutil, $firebaseObject, $q, snippet) {\r\n        var customFn = {};\r\n        return customFn\r\n    }]);\r\n})();\r\n\r\n","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var mod = obsidian.module('pages.account', []),\r\n        state = 'account',\r\n        url = '/account',\r\n        ctrlName = 'AccountCtrl',\r\n        templateUrl = 'pages/account/account.html',\r\n        resolve = {\r\n            user: ['Auth', function (Auth) {\r\n                return Auth.$waitForAuth();\r\n            }]\r\n        },\r\n        directiveName = 'obAccount';\r\n\r\n    mod.controller(ctrlName, /*@ngInject*/ function ($rootScope, $scope, Auth, fbutil, user, $state, $firebaseObject, $mdDialog) {\r\n            var unbind;\r\n            // create a 3-way binding with the user profile object in Firebase\r\n            //$rootScope.showAcc=false;\r\n            var profile = $firebaseObject(fbutil.ref('users', user.uid));\r\n            profile.$bindTo($scope, 'profile').then(function (ub) {\r\n                unbind = ub;\r\n            });\r\n\r\n            $scope.closeDialog = function() {\r\n                $mdDialog.hide();\r\n            };\r\n\r\n            // expose logout function to scope\r\n            $scope.logout = function () {\r\n                if (unbind) {\r\n                    unbind();\r\n                }\r\n                profile.$destroy();\r\n                Auth.$unauth();\r\n                $mdDialog.cancel();\r\n                $state.go('home');\r\n            };\r\n            //$rootScope.logout = $scope.logout;\r\n\r\n            $scope.changePassword = function (pass, confirm, newPass) {\r\n                resetMessages();\r\n                if (!pass || !confirm || !newPass) {\r\n                    $scope.err = 'Please fill in all password fields';\r\n                }\r\n                else if (newPass !== confirm) {\r\n                    $scope.err = 'New pass and confirm do not match';\r\n                }\r\n                else {\r\n                    Auth.$changePassword({email: profile.email, oldPassword: pass, newPassword: newPass})\r\n                        .then(function () {\r\n                            $scope.msg = 'Password changed';\r\n                        }, function (err) {\r\n                            $scope.err = err;\r\n                        })\r\n                }\r\n            };\r\n\r\n            $scope.clear = resetMessages;\r\n\r\n            $scope.changeEmail = function (pass, newEmail) {\r\n                resetMessages();\r\n                var oldEmail = profile.email;\r\n                Auth.$changeEmail({oldEmail: oldEmail, newEmail: newEmail, password: pass})\r\n                    .then(function () {\r\n                        // store the new email address in the user's profile\r\n                        return fbutil.handler(function (done) {\r\n                            fbutil.ref('users', user.uid, 'email').set(newEmail, done);\r\n                        });\r\n                    })\r\n                    .then(function () {\r\n                        $scope.emailmsg = 'Email changed';\r\n                    }, function (err) {\r\n                        $scope.emailerr = err;\r\n                    });\r\n            };\r\n\r\n            function resetMessages() {\r\n                $scope.err = null;\r\n                $scope.msg = null;\r\n                $scope.emailerr = null;\r\n                $scope.emailmsg = null;\r\n            }\r\n        }\r\n    );\r\n\r\n    mod.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: resolve\r\n        });\r\n    }]);\r\n\r\n    mod.run(/*@ngInject*/ function ($rootScope, $mdDialog) {\r\n        $rootScope.showAccount = function ($event) {\r\n            var parentEl = angular.element(document.body);\r\n            $mdDialog.show({\r\n                parent: parentEl,\r\n                targetEvent: $event,\r\n                templateUrl: 'pages/account/accountDialog.html',\r\n                locals: {\r\n                    user: $rootScope.user\r\n                },\r\n                clickOutsideToClose: true,\r\n                controller: 'AccountCtrl'\r\n            });\r\n        };\r\n    });\r\n\r\n    if (directiveName) {\r\n        mod.directive(directiveName, ['linkFn', function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '&'\r\n                },\r\n                link: function(scope){\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n\r\n})(angular);\r\n","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state = 'backEnd',\r\n        url = '/backEnd',\r\n        ctrlName = 'BackEndCtrl',\r\n        templateUrl = 'pages/backEnd/backEnd.html';\r\n\r\n\r\n    var app = obsidian.module('pages.backEnd', ['pages.backEnd.productManager', 'pages.backEnd.orders']);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $firebase, snippet, $errorHandler) {\r\n        this.test='1234'\r\n    });\r\n\r\n\r\n    app.config(function ($stateProvider) {\r\n        $stateProvider\r\n            .state(state, {\r\n                url: url,\r\n                views: {\r\n                    \"\": {\r\n                        templateUrl: templateUrl,\r\n                        controller: ctrlName,\r\n                        controllerAs:'be'\r\n                    }\r\n                }\r\n            })\r\n            .state(state + '.orders', {\r\n                url: '/orders',\r\n                views: {\r\n                    \"content\": {\r\n                        templateUrl: 'pages/backEnd/orders/orders.html',\r\n                        controller: 'Orders'\r\n                    }\r\n                }\r\n            })\r\n            .state(state + '.productManager', {\r\n                url: '/productManager',\r\n                views: {\r\n                    \"content\": {\r\n                        templateUrl: 'pages/backEnd/productManager/productManager.html',\r\n                        controller: 'ProductManager'\r\n                    }\r\n                }\r\n            });\r\n    });\r\n\r\n\r\n})(angular);","(function (angular) {\r\n\r\n    var app = angular.module('pages.backEnd.orders', []);\r\n\r\n//Step 4: construct a controller. Notice that $scope is required, don't delete it.\r\n    app.controller('Orders', /*@ngInject*/ function ($scope, filterUtil, customFn, $firebaseArray, $firebase, snippet, $errorHandler) {\r\n        //to show orders\r\n        $scope.loadOrders = function (startDay, endDay) {\r\n            var now = (new Date).getTime(),\r\n                day = 24 * 60 * 60 * 1000;\r\n            var ref = $firebase.ref('orders').orderByChild('schedule').startAt(now + startDay * day).endAt(now + endDay * day);\r\n\r\n            //to prevent memory leak\r\n            if($scope.allOrdersSrc) $scope.allOrdersSrc.$destroy();\r\n            if($scope.unwatchFilter) $scope.unwatchFilter();\r\n\r\n            $scope.allOrdersSrc = $firebaseArray(ref);\r\n            $scope.allOrdersSrc.$loaded().then(function(){\r\n                $scope.unwatchFilter=filterUtil.watchFilterOpts($scope, 'allOrdersSrc', 'allOrders', 'filters');\r\n            })\r\n        };\r\n\r\n\r\n        //$scope.loadOrders(-0.5, 1); //today's order\r\n\r\n\r\n\r\n        $scope.filterOpt={};\r\n        $scope.refreshFilter = function () {\r\n            $scope.search=$scope.search? $scope.search:'';\r\n            var searcKeyhArr=$scope.search.split(' '); //let filter match several keys\r\n            $scope.filters=angular.extend({}, $scope.filterOpt, searcKeyhArr);\r\n        };\r\n\r\n        $scope.$watch('filterOpt', function(){\r\n            $scope.refreshFilter();\r\n        }, true);\r\n\r\n\r\n        $scope.statusOptions = ['received', 'preparing', 'ready', 'picked-up'];\r\n        $scope.orderStatus = {};\r\n\r\n        $scope.changeOrderStatus = function (orderId, userId, changedStatus) {\r\n            console.log(orderId, userId, changedStatus);\r\n            var values = [\r\n                {\r\n                    refUrl: 'orders/' + orderId + '/orderStatus',\r\n                    value: changedStatus,\r\n                    set: true\r\n                },\r\n                {\r\n                    refUrl: 'users/' + userId + '/orderHistory/' + orderId + '/orderStatus',\r\n                    value: changedStatus,\r\n                    set: true\r\n                }\r\n            ];\r\n            $firebase.batchUpdate(values, true).then(angular.noop, $errorHandler({}));\r\n        };\r\n        $scope.calcSubTotal = customFn.calcSubTotal;\r\n\r\n\r\n        $scope.removeOrder = function (orderId, userId, reason) {\r\n            var values = [\r\n                {\r\n                    refUrl: 'users/' + userId + '/orderHistory/' + orderId,\r\n                    value: null,\r\n                    set: true\r\n                },\r\n                {\r\n                    refUrl: 'orders/' + orderId,\r\n                    value: null,\r\n                    set: true\r\n                }\r\n            ];\r\n            $firebase.batchUpdate(values, true).then(function(){\r\n                $scope.refreshFilter();\r\n            })\r\n        };\r\n    });\r\n\r\n\r\n\r\n})(angular);\r\n\r\n","(function (angular) {\r\n\r\n    var app = angular.module('pages.backEnd.productManager', []);\r\n\r\n    app.controller('ProductManager', /*@ngInject*/ function ($scope, $firebaseArray, $firebaseObject, customFn, $firebase, snippet, $errorHandler) {\r\n\r\n        //to add/remove new products\r\n        $scope.products=$firebaseObject($firebase.ref('products'));\r\n        $scope.addOpt=function(){\r\n            var arr=$scope.selectedProduct.options;\r\n            $scope.selectedProduct.options[arr.length]=''\r\n        };\r\n        $scope.removeOpt=function(){\r\n            var arr=$scope.selectedProduct.options;\r\n            if(arr.length===0) return;\r\n            $scope.selectedProduct.options.pop();\r\n        };\r\n        $scope.selectProduct=function(productId){\r\n            $scope.selectedProduct={};\r\n            $scope.selectedProduct=angular.extend({},$scope.products[productId]);\r\n            $scope.selectedProduct.options=$scope.selectedProduct.options||[]\r\n        };\r\n        $scope.updateProduct=function(){\r\n            $scope.products[$scope.selectedProduct.itemId]=$scope.selectedProduct;\r\n            $scope.products.$save();\r\n            $scope.selectedProduct={};\r\n        };\r\n        $scope.removeProduct=function(id){\r\n            $scope.products[id]=null;\r\n            $scope.products.$save();\r\n        };\r\n        $scope.createProduct=function(){\r\n            var randomId=(new Date()).getTime().toString(36);\r\n            $scope.selectedProduct={\r\n                itemId:randomId,\r\n                itemName:'',\r\n                image:'',\r\n                description:'',\r\n                listPrice:'',\r\n                price:'',\r\n                options:['']\r\n            }\r\n        };\r\n        $scope.clearProduct=function(){\r\n            $scope.selectedProduct={}\r\n        }\r\n    });\r\n\r\n\r\n\r\n})(angular);\r\n\r\n","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state='home',\r\n        url='/home',\r\n        ctrlName='HomeCtrl',\r\n        templateUrl='pages/home/home.html';\r\n\r\n\r\n    var app = obsidian.module('pages.home', []);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $state) {\r\n        //\r\n        console.log($state.data);\r\n\r\n        $scope.test= function () {\r\n            $state.goWithData('test2',{},{a:'a',b:'b'})\r\n        }\r\n    });\r\n\r\n    app.config(['$stateProvider',function($stateProvider){\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName\r\n        });\r\n    }]);\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state='invoice',\r\n        url='/invoice/:orderId',\r\n        ctrlName='InvoiceCtrl',\r\n        templateUrl='pages/invoice/invoice.html';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.invoice', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $firebaseObject, $state, customFn) {\r\n        console.log($state.data);\r\n        $scope.invoice=$state.data;\r\n        //$scope.subTotal=customFn.calcSubTotal('', $stateParams.products);\r\n        $scope.date=new Date();\r\n        $scope.OK=function(){\r\n            $state.go('home')\r\n        }\r\n\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    }]);\r\n\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state='login',\r\n        url='/login',\r\n        ctrlName='LoginCtrl',\r\n        templateUrl='pages/login/login.html',\r\n        directiveName='obLogin',\r\n        resolve={};\r\n\r\n    var app = obsidian.module('pages.login', ['firebase.auth', 'firebase', 'firebase.utils', 'ui.router', 'core.model']);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function($rootScope, $scope, Auth, $state, fbutil, snippet, $mdDialog) {\r\n        $scope.closeDialog = function() {\r\n            $mdDialog.hide();\r\n        };\r\n\r\n        $scope.email = null;\r\n        $scope.pass = null;\r\n        $scope.confirm = null;\r\n        $scope.createMode = false;\r\n\r\n        function redirectTo(state){\r\n            $state.go(state);\r\n        }\r\n\r\n        function showError(err) {\r\n            $scope.err = angular.isObject(err) && err.code? err.code : err + '';\r\n        }\r\n\r\n        $scope.login = function(email, pass) {\r\n            console.log(email,pass);\r\n            $scope.err = null;\r\n            Auth.$authWithPassword({ email: email, password: pass }, {rememberMe: true})\r\n                .then(function(/* user */) {\r\n                    $mdDialog.hide();\r\n                    redirectTo('home');\r\n                }, showError);\r\n        };\r\n\r\n        $scope.createAccount = function() {\r\n            $scope.err = null;\r\n            if( assertValidAccountProps() ) {\r\n                var email = $scope.email;\r\n                var pass = $scope.pass;\r\n                // create user credentials in Firebase auth system\r\n                Auth.$createUser({email: email, password: pass})\r\n                    .then(function() {\r\n                        // authenticate so we have permission to write to Firebase\r\n                        return Auth.$authWithPassword({ email: email, password: pass });\r\n                    })\r\n                    .then(Auth.createAccount)\r\n                    .then(function(/* user */) {\r\n                        // redirect to home\r\n                        $mdDialog.hide();\r\n                        redirectTo('home');\r\n                    }, showError);\r\n            }\r\n        };\r\n\r\n        function assertValidAccountProps() {\r\n            if( !$scope.email ) {\r\n                $scope.err = 'Please enter an email address';\r\n            }\r\n            else if( !$scope.pass || !$scope.confirm ) {\r\n                $scope.err = 'Please enter a password';\r\n            }\r\n            else if( $scope.createMode && $scope.pass !== $scope.confirm ) {\r\n                $scope.err = 'Passwords do not match';\r\n            }\r\n            return !$scope.err;\r\n        }\r\n\r\n        $scope.loginWithProvider=function(provider, opt){\r\n            Auth.loginWithProvider(provider, opt)\r\n                .then(function(user) {\r\n                    $mdDialog.hide();\r\n                    redirectTo('home');\r\n                    return Auth.checkIfAccountExistOnFb(user)\r\n                }, showError)\r\n                .then(Auth.createAccount, showError)\r\n                .then(function(){}, showError)\r\n        }\r\n    });\r\n\r\n    app.config(['$stateProvider',function($stateProvider){\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName\r\n        });\r\n    }]);\r\n\r\n    app.run(/*@ngInject*/ function ($rootScope, $mdDialog) {\r\n        $rootScope.showLogin = function ($event) {\r\n            var parentEl = angular.element(document.body);\r\n            $mdDialog.show({\r\n                parent: parentEl,\r\n                targetEvent: $event,\r\n                templateUrl: 'pages/login/loginDialog.html',\r\n                clickOutsideToClose: true,\r\n                controller: 'LoginCtrl'\r\n            });\r\n        };\r\n    });\r\n\r\n    if (directiveName) {\r\n        app.directive(directiveName, ['linkFn', function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '@'\r\n                },\r\n                link: function(scope){\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n})(angular);","//Step 1: name the new module.\r\n\r\n(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state='myOrders',\r\n        url='/myOrders',\r\n        ctrlName='MyOrdersCtrl',\r\n        templateUrl='pages/myOrders/myOrders.html';\r\n\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.myOrders', ['ui.router']);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function (user, $scope, filterUtil, $firebaseArray, $firebase) {\r\n\r\n        $scope.loadOrders = function (startDay, endDay) {\r\n            var now = (new Date).getTime(),\r\n                day = 24 * 60 * 60 * 1000;\r\n            var ref = $firebase.ref('users/'+user.uid+'/orderHistory').orderByChild('createdTime').startAt(now + startDay * day).endAt(now + endDay * day);\r\n\r\n            //to prevent memory leak\r\n            if($scope.myOrdersSrc) $scope.myOrdersSrc.$destroy();\r\n            if($scope.unwatchFilter) $scope.unwatchFilter();\r\n\r\n            $scope.myOrdersSrc = $firebaseArray(ref);\r\n            $scope.myOrdersSrc.$loaded().then(function(){\r\n                $scope.unwatchFilter=filterUtil.watchFilterOpts($scope, 'myOrdersSrc', 'myOrders', 'filters');\r\n            })\r\n        };\r\n\r\n        $scope.loadOrders(-65535, 65535); //today's order\r\n\r\n        $scope.filterOpt={};\r\n        $scope.refreshFilter = function () {\r\n            $scope.search=$scope.search? $scope.search:'';\r\n            var searcKeyhArr=$scope.search.split(' ');\r\n            $scope.filters=angular.extend({}, $scope.filterOpt, searcKeyhArr);\r\n        };\r\n\r\n        $scope.$watch('filterOpt', function(){\r\n            $scope.refreshFilter();\r\n        }, true);\r\n\r\n\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.stateAuthenticated(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    }]);\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n//Step 1: replace 'pageSeed' to any name you prefer.\r\n    var mod = obsidian.module('pageSeed', ['firebase.auth', 'firebase', 'firebase.utils', 'core.model']);\r\n\r\n//Step 2: simple configuration for the state.\r\n    var state = 'pageSeed',\r\n        url = '/pageSeed',\r\n        ctrlName = 'PageSeedCtrl',\r\n        templateUrl = 'pages/pageSeed/pageSeed.html',\r\n        directiveName = 'pageSeedDirective',\r\n        resolve = {\r\n            // forces the page to wait for this promise to resolve before controller is loaded\r\n            // the controller can then inject `user` as a dependency. This could also be done\r\n            // in the controller, but this makes things cleaner (controller doesn't need to worry\r\n            // about auth status or timing of accessing data or displaying elements)\r\n            user: ['Auth', function (Auth) {\r\n                return Auth.$waitForAuth();\r\n            }]\r\n        };\r\n\r\n//Step 3: config the state in detail if needed.\r\n    mod.config(/*@ngInject*/ function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: resolve\r\n        });\r\n    });\r\n\r\n//Step 4: build the controller.\r\n    mod.controller(ctrlName, /*@ngInject*/ function ($scope) {\r\n        //create your own controller here\r\n    });\r\n\r\n\r\n//Step 5: give a name for the directive in step 2 if you want put this state into a widget.\r\n    if (directiveName) {\r\n        mod.directive(directiveName, /*@ngInject*/ function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '@'\r\n                },\r\n                link: function (scope) {\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        });\r\n    }\r\n})(angular);\r\n","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state = 'productDetail',\r\n        url = '/productDetail/:pid',\r\n        ctrlName = 'ProductDetailCtrl',\r\n        templateUrl = 'pages/productDetail/productDetail.html',\r\n        directiveName = 'productDetail',\r\n        resolve = {\r\n            user: ['Auth', function (Auth) {\r\n                return Auth.$waitForAuth();\r\n            }]\r\n        };\r\n\r\n    var app = obsidian.module('pages.productDetail', []);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $rootScope, user, $firebaseObject, $firebase, $location, $stateParams, $mdDialog) {\r\n        var productId = $stateParams.pid;\r\n        $scope.loggedIn=function(){return $rootScope.loggedIn};\r\n        $scope.id = productId;\r\n        $scope.user = user;\r\n        $scope.loaded = function (value) {\r\n            angular.extend(value, {\r\n                quantity: 1,\r\n                itemId: productId\r\n            })\r\n        };\r\n        $scope.cancel = function() {\r\n            $mdDialog.cancel();\r\n        };\r\n    });\r\n\r\n\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: resolve\r\n        });\r\n    }]);\r\n\r\n    if (directiveName) {\r\n        app.directive(directiveName, ['linkFn', function (linkFn) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '='\r\n                },\r\n                link: function(scope){\r\n                    linkFn.pagePlusDirective(scope, ctrlName, resolve);\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state='productList',\r\n        url='/productList',\r\n        ctrlName='ProductListCtrl',\r\n        templateUrl='pages/productList/productList.html';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.productList', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($rootScope, $scope, $mdDialog) {\r\n        $scope.showDetail= function($event, pid) {\r\n            var parentEl = angular.element(document.body);\r\n            $mdDialog.show({\r\n                parent: parentEl,\r\n                targetEvent: $event,\r\n                templateUrl:'pages/productDetail/productDetail.html',\r\n                locals: {\r\n                    $stateParams: {pid:pid},\r\n                    user: $rootScope.user\r\n                },\r\n                clickOutsideToClose: true,\r\n                controller: 'ProductDetailCtrl'\r\n            });\r\n        }\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider',function($stateProvider){\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName\r\n        });\r\n    }]);\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n    var state = 'shoppingCart',\r\n        url = '/shoppingCart',\r\n        ctrlName = 'ShoppingCartCtrl',\r\n        templateUrl = 'pages/shoppingCart/shoppingCart.html';\r\n\r\n    var app = obsidian.module('pages.shoppingCart', []);\r\n\r\n    app.controller(ctrlName, /*@ngInject*/ function ($q, config, user, $scope, $rootScope, $firebase, snippet, $state, ngCart) {\r\n        $scope.ngCart = ngCart;\r\n        var cart = {products: {}};\r\n\r\n        $scope.emptyCart = function () {\r\n            ngCart.empty();  //清空購物車, ngCart 要清兩次才會清空\r\n            ngCart.empty()\r\n        };\r\n\r\n        $scope.paymentMethod = 'uponPickup';\r\n        $scope.clientEmail=$rootScope.user? $rootScope.user.email:null;\r\n        $scope.clientPhone=$rootScope.user? $rootScope.user.phone:null;\r\n        $scope.clientName=$rootScope.user? (user[user.provider].displayName || user[user.provider].email):null;\r\n        $scope.uid=$rootScope.user? $rootScope.user.uid:null;\r\n\r\n\r\n\r\n\r\n        function updateContactInfo(){\r\n            if(!$rootScope.user) return;\r\n            var isEmailChanged=($scope.clientEmail===$rootScope.user.email),\r\n                isPhoneChanged=($scope.clientPhone===$rootScope.user.phone),\r\n                uploadList=[];\r\n            if(isEmailChanged) uploadList.push({\r\n                refUrl:'users/' + user.uid + '/email', value: $scope.clientEmail\r\n            });\r\n            if(isPhoneChanged) uploadList.push({\r\n                refUrl:'users/' + user.uid + '/phone', value: $scope.clientPhone\r\n            });\r\n            if(uploadList.length>0) $firebase.batchUpdate(uploadList);\r\n        }\r\n\r\n        if (config.debug) {\r\n            $scope.number = '4242424242424242';\r\n            $scope.expiry = '11/16';\r\n            $scope.cvc = '123';\r\n        }\r\n\r\n        function isTimeValid() {\r\n            if (( $scope.dt.getDay() === 0 || $scope.dt.getDay() === 6 )) {\r\n                alert('Please pick a weekday.');\r\n                return false\r\n            }\r\n            if ($scope.dt.getTime() < (new Date()).getTime() + 30 * 60 * 1000) {\r\n                alert('Please pick a time at least 30 minutes from now.');\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        }\r\n\r\n        $scope.submitOrder = function () {\r\n            //確保有足夠時間準備\r\n            if (!isTimeValid()) return;\r\n\r\n            $scope.waiting = true; //進入waiting畫面,得到token後stripeCallback會執行\r\n            if ($scope.paymentMethod === 'uponPickup') uploadOrder('uponPickup').then(function (res) {\r\n                var orderId = res.params['$orderId'];\r\n                $scope.invoice.orderId = orderId;\r\n                $state.goWithData('invoice', {orderId: orderId}, $scope.invoice); //成功後轉換至invoice頁面\r\n                $scope.emptyCart();\r\n                if (!$scope.$$phase) $scope.$apply(); //確保成功轉換頁面\r\n            });\r\n        };\r\n\r\n        function getPaymentData(code, result) {\r\n            $scope.payment = {};\r\n            if (result.error) {\r\n                window.alert('it failed! error: ' + result.error.message);\r\n            } else {\r\n                console.log('success! token: ' + result.id);\r\n                $scope.payment = {\r\n                    token: result.id,\r\n                    provider: 'stripe'\r\n                };\r\n            }\r\n        }\r\n\r\n        $scope.stripeCallback = function (code, result) {\r\n            if ($scope.paymentMethod === 'uponPickup' || !isTimeValid()) return;\r\n            getPaymentData(code, result);\r\n\r\n            //將payment provider取得的token加入其他資料一起上傳\r\n            uploadOrder('creditCard')\r\n                .then(function (res) {\r\n                    var orderId = res.params['$orderId'];\r\n                    console.log('orderId is ' + orderId);\r\n\r\n\r\n                    clearTimeout(timeout);\r\n\r\n                    if (res.isCharged === 'succeeded') {\r\n                        $state.go('invoice', $scope.invoice); //成功後轉換至invoice頁面\r\n                        console.log('transaction succeeded');\r\n                        $scope.emptyCart();\r\n                        if (!$scope.$$phase) $scope.$apply(); //確保成功轉換頁面\r\n                    } else {\r\n                        //TODO : errorHandler(errorId, 'transaction failed', res.isCharged);\r\n                    }\r\n                    $scope.waiting = false;\r\n\r\n\r\n                }, function (err) {\r\n                    console.log(JSON.stringify(err)); //上傳失敗產生警告\r\n                });\r\n        };\r\n\r\n        function prepareOrderData() {\r\n            angular.forEach(ngCart.getItems(), function (item) {\r\n                cart.products[item._id] = item._data;\r\n                cart.products[item._id].quantity = item._quantity;\r\n                cart.products[item._id].itemId = item._id;\r\n            });\r\n\r\n            var payment = $scope.payment || {};\r\n            payment.method = $scope.paymentMethod;\r\n\r\n            angular.extend(cart,\r\n                {\r\n                    clientName: $scope.clientName,\r\n                    clientId: $scope.uid,\r\n                    clientEmail: $scope.clientEmail,\r\n                    clientPhone: $scope.clientPhone,\r\n                    createdTime: Firebase.ServerValue.TIMESTAMP,\r\n                    note: $scope.note || null,\r\n                    schedule: $scope.dt.getTime(),\r\n                    orderStatus: 'received',\r\n                    payment: payment,\r\n                    shipment: {}//\r\n                }\r\n            );\r\n        }\r\n\r\n\r\n        function uploadOrder(type) {\r\n\r\n            updateContactInfo();\r\n            //整理order 資料\r\n            prepareOrderData();\r\n\r\n            //產生要存至主order資料庫的結構\r\n            var mainOrderStructure = {\r\n                clientName: '',\r\n                clientId: '',\r\n                clientEmail: '',\r\n                clientPhone: '',\r\n                createdTime: '',\r\n                orderStatus: '',\r\n                note: '',\r\n                //subTotal:'',        由主機端計算，防止人為竄改。\r\n                products: {\r\n                    $productId: {\r\n                        itemName: '',\r\n                        itemId: '',\r\n                        quantity: '',\r\n                        price: '',\r\n                        selectedOption: ''\r\n                    }\r\n                },\r\n                payment: '',\r\n                shipment: '',\r\n                schedule: ''\r\n            };\r\n\r\n            //產生要存至主order資料庫的資料\r\n\r\n            var mainOrderData = {\r\n                refUrl: 'orders/$orderId',\r\n                value: snippet.filterRawData(cart, mainOrderStructure)\r\n            };\r\n            //產生要存至user的order資料庫的結構\r\n            var userOderReceiptStructure = {\r\n                createdTime: '',\r\n                orderStatus: '',\r\n                note: '',\r\n                products: {\r\n                    $productId: {\r\n                        itemId: '',\r\n                        itemName: '',\r\n                        quantity: '',\r\n                        price: '',\r\n                        selectedOption: ''\r\n                    }\r\n                },\r\n                payment: '',\r\n                shipment: '',\r\n                schedule: ''\r\n            };\r\n\r\n            //產生要存至user的order資料庫的資料\r\n            var userReceiptData = {\r\n                refUrl: 'users/$uid/orderHistory/$orderId',\r\n                value: snippet.filterRawData(cart, userOderReceiptStructure)\r\n            };\r\n\r\n            //放到同一個array產生批次上傳資料\r\n            var batchOrderData = [mainOrderData, userReceiptData];\r\n\r\n            //產生收據\r\n            $scope.invoice = angular.extend({}, cart);\r\n\r\n            //批次上傳\r\n            return $firebase.$communicate({\r\n                request: batchOrderData,\r\n                response: type === 'uponPickup' ? false : {isCharged: 'users/$uid/orderHistory/$orderId/payment/status'}\r\n            });\r\n        }\r\n\r\n        //date picker\r\n\r\n        $scope.dt = new Date();\r\n        $scope.hour = 12;\r\n        $scope.minute = 0;\r\n        $scope.minDate = $scope.dt;\r\n        $scope.maxDate = new Date(\r\n            $scope.dt.getFullYear(),\r\n            $scope.dt.getMonth() + 2,\r\n            $scope.dt.getDate());\r\n\r\n        $scope.changeDt = function () {\r\n            $scope.hour = 12;\r\n            $scope.dt.setHours(12);\r\n            $scope.minute = 0;\r\n            $scope.dt.setMinutes(0);\r\n        };\r\n        $scope.changeDt();\r\n\r\n        $scope.changeTime = function () {\r\n            $scope.dt.setHours($scope.hour);\r\n            $scope.dt.setMinutes($scope.minute);\r\n        };\r\n    });\r\n\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            url: url,\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            resolve: {\r\n                user: ['Auth', function (Auth) {\r\n                    return Auth.$waitForAuth();\r\n                }]\r\n            }\r\n        });\r\n    }]);\r\n\r\n    app.run(/*@ngInject*/ function ($rootScope, ngCart, config) {\r\n        ngCart.setShipping(config.shipping);\r\n        ngCart.setTaxRate(config.taxRate);\r\n\r\n        function refreshTotalItems() {\r\n            $rootScope.cartTotalItems = ngCart.getTotalItems()\r\n        }\r\n\r\n        $rootScope.$on('ngCart:change', refreshTotalItems);\r\n        refreshTotalItems();\r\n    });\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state = 'test2',\r\n        url = '/test2',\r\n        ctrlName = 'Test2Ctrl',\r\n        templateUrl = 'pages/test2/test2.html',\r\n        directiveName = '';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.test2', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $state, $firebase, $rootScope) {\r\n\r\n        console.log($state.data);\r\n        $scope.changed=function(){\r\n            console.log('data changed to '+$scope.inputDelayTest)\r\n        };\r\n        var loadList = [\r\n            {\r\n                refUrl: 'products/bd_001'\r\n            },\r\n            {\r\n                refUrl: 'products/bd_002'\r\n            },\r\n            {\r\n                refUrl: 'products',\r\n                opt:{\r\n                    orderBy:'Key',\r\n                    limitToFirst:2\r\n                }\r\n            }\r\n        ];\r\n        $firebase.load(loadList).then(function(res){\r\n            console.log(res);\r\n        });\r\n\r\n\r\n        $scope.test=function(){\r\n            $state.go('home', {test:'test'})\r\n        }\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(['$stateProvider', function ($stateProvider) {\r\n        $stateProvider.state(state, {\r\n            templateUrl: templateUrl,\r\n            controller: ctrlName,\r\n            url: url\r\n        });\r\n    }]);\r\n\r\n    if (directiveName) {\r\n        app.directive(directiveName, ['$controller', function ($controller) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: templateUrl,\r\n                scope: {\r\n                    stateParams: '@'\r\n                },\r\n                link: function (scope, iElement, iAttrs) {\r\n                    scope.$watch('initparams', function () {\r\n                        $controller(ctrlName, {$scope: scope});\r\n                    })\r\n                }\r\n            };\r\n        }]);\r\n    }\r\n\r\n\r\n})(angular);","(function (angular) {\r\n    \"use strict\";\r\n\r\n//Step 2: set route, ctrlName and templateUrl.\r\n    var state = 'test',\r\n        url='/test',\r\n        ctrlName = 'TestCtrl',\r\n        templateUrl = 'pages/test/test.html';\r\n\r\n//Step 3: write down dependency injection.\r\n    var app = obsidian.module('pages.test', []);\r\n\r\n//Step 4: construct a controller.\r\n    app.controller(ctrlName, /*@ngInject*/ function ($scope, $state, $timeout, fbutil, $firebase) {\r\n        $scope.path='products';\r\n        $scope.id='bd_001';\r\n\r\n        $scope.loaded=function(value){\r\n            console.log(value);\r\n            $scope.isLoaded=true\r\n        };\r\n\r\n        $scope.from='https://lauchbox.firebaseio.com/products';\r\n        $scope.to='https://lauchbox2.firebaseio.com/products';\r\n\r\n        $scope.move=function(from,to){\r\n            $firebase.move(from,to)\r\n        };\r\n\r\n        $scope.updateDescription= function (firebaseObject) {\r\n            firebaseObject.$save();\r\n            //for full api, see $firebaseObject section in https://www.firebase.com/docs/web/libraries/angular/api.html\r\n        };\r\n\r\n        $scope.getMultipleRefVal= function () {\r\n            $firebase.getMultipleRefVal({\r\n                path1:'test/path1',\r\n                path2:'test/path2/&path1',\r\n                path3:'test/path3/&path1/&path2'\r\n            }).then(function(res){\r\n                $scope.result=res\r\n            })\r\n        };\r\n    });\r\n\r\n//Step 5: config providers.\r\n    app.config(function($stateProvider){\r\n            $stateProvider.state(state, {\r\n                templateUrl: templateUrl,\r\n                controller: ctrlName,\r\n                url:url\r\n            });\r\n        });\r\n\r\n})(angular);"],"sourceRoot":"/source/"}